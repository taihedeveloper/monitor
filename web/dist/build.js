/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/dist/";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 53);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__config_js__ = __webpack_require__(48);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__common_js__ = __webpack_require__(47);




/* harmony default export */ __webpack_exports__["a"] = ({
    getData(portName, data, successCallback, failCallback, url) {
        let apiurl = "";
        if (url) {
            apiurl = url + portName;
        } else {
            apiurl = __WEBPACK_IMPORTED_MODULE_1__config_js__["a" /* Apihost */] + portName;
        }
        const params = data;
        __WEBPACK_IMPORTED_MODULE_0_vue___default.a.http.jsonp(apiurl, {
            params: params,
            jsonp: 'callback'
        }).then(function (res) {
            successCallback(res);
        }, function (err) {
            failCallback(err);
        });
    },
    postData(portName, data, successCallback, failCallback, url) {
        let apiurl = "";
        if (url) {
            apiurl = url + portName;
        } else {
            apiurl = __WEBPACK_IMPORTED_MODULE_1__config_js__["a" /* Apihost */] + portName;
        }
        const params = data;
        __WEBPACK_IMPORTED_MODULE_0_vue___default.a.http.post(apiurl, params, { emulateJSON: true }).then(function (res) {
            successCallback(res);
        }, function (err) {
            failCallback(err);
        });
    },
    fetchPostData(portName, data, successCallback, failCallback, url) {
        let apiurl = "";
        if (url) {
            apiurl = url + portName;
        } else {
            apiurl = __WEBPACK_IMPORTED_MODULE_1__config_js__["a" /* Apihost */] + portName;
        }
        console.log(apiurl);
        let params = JSON.stringify(data);
        console.log(params);
        fetch(apiurl, {
            method: "POST",
            mode: "no-cors",
            body: params,
            headers: {
                // "Content-Type": "application/x-www-form-urlencoded"
                // "Content-Type": 'application/json'
                // "Content-Type": 'text/plain'
                "Content-Type": 'multipart/form-data '
            }
        }).then(function (res) {
            console.log("res:" + res);
            console.log(res);
            console.log("Response succeeded?", JSON.stringify(res.ok));
        }).catch(function (e) {
            console.log(e);
            console.log("fetch fail");
        });
    },
    username() {
        return __WEBPACK_IMPORTED_MODULE_2__common_js__["a" /* default */].getCookie("personalid");
    },
    getDataLimit(n) {
        // n ? n : 20;
        return 20;
    },
    getContHeight(headerH) {
        headerH ? headerH : 68;
        let height = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;
        return height - headerH;
    },
    getTimestamp: function (val) {
        let start = "";
        let end = "";
        let orther = {};
        if (!val || val == "") {
            //若时间为空，默认为前一天的数据

            let date = new Date(new Date() - 24 * 60 * 60 * 1000); //取前24小时的时间
            let year = date.getFullYear();
            let month = date.getMonth() + 1;
            let day = date.getDate();
            var hour = date.getHours();
            var minute = date.getMinutes();
            var second = date.getSeconds();
            if (month < 10) {
                month = "0" + month;
            }
            if (day < 10) {
                day = "0" + day;
            }
            if (hour < 10) {
                hour = "0" + hour;
            }
            if (minute < 10) {
                minute = "0" + minute;
            }
            if (second < 10) {
                second = "0" + second;
            }

            let nowdate = new Date(); //此刻
            let nowyear = nowdate.getFullYear();
            let nowmonth = nowdate.getMonth() + 1;
            let nowday = nowdate.getDate();
            var nowhour = nowdate.getHours();
            var nowminute = nowdate.getMinutes();
            var nowsecond = nowdate.getSeconds();
            if (nowmonth < 10) {
                nowmonth = "0" + nowmonth;
            }
            if (nowday < 10) {
                nowday = "0" + nowday;
            }
            if (nowhour < 10) {
                nowhour = "0" + nowhour;
            }
            if (nowminute < 10) {
                nowminute = "0" + nowminute;
            }
            if (nowsecond < 10) {
                nowsecond = "0" + nowsecond;
            }

            let time = year + "-" + month + "-" + day + " " + hour + ":" + minute + ":" + second;
            let nowtime = nowyear + "-" + nowmonth + "-" + nowday + " " + nowhour + ":" + nowminute + ":" + nowsecond;
            start = time;
            end = nowtime;
            orther = {
                "s": year + "-" + month + "-" + day,
                "e": nowyear + "-" + nowmonth + "-" + nowday
            };
        } else {
            if (val.indexOf(" - ") > -1) {
                //起始和结束
                let valArr = val.split(" - ");
                let s = valArr[0];
                let e = valArr[1];
                start = s + " " + "00:00:00";
                end = e + " " + "23:59:59";
            } else {
                //只有一天时间
                start = val + " " + "00:00:00";
                end = e + " " + "23:59:59";
            }
        }
        console.log(start);
        console.log(end);

        start = new Date(start).getTime();
        end = new Date(end).getTime();
        start = start / 1000;
        end = end / 1000;
        console.log({ "start": start, "end": end });
        return { "start": start, "end": end, "orther": orther };
    },
    //获取月份时间段
    getMonthSpace: function (n) {
        n = n ? n : 0;
        let date = new Date();
        let year = date.getFullYear();
        let month = date.getMonth() + 1;
        let day = date.getDate();

        date.setMonth(month - n);

        let yearNew = date.getFullYear();
        let monthNew = date.getMonth() + 1;
        let dayNew = date.getDate();

        if (month < 10) {
            month = "0" + month;
        }
        if (day < 10) {
            day = "0" + day;
        }
        if (monthNew < 10) {
            monthNew = "0" + monthNew;
        }
        if (dayNew < 10) {
            dayNew = "0" + dayNew;
        }

        let start_date = "";
        let end_date = "";
        if (n == 0) {
            start_date = "" + year + month + day;
            end_date = "" + year + month + "01";
        } else {
            start_date = "" + year + month + day;
            end_date = "" + yearNew + monthNew + "01";
        }
        console.log({ "start_date": end_date, "end_date": start_date });
        return { "start_date": end_date, "end_date": start_date };
    },
    trim: function (str) {
        return str.replace(/^\s+|\s+$/g, '');
    },
    isJSON: function (str) {
        try {
            JSON.parse(str);
            return true;
        } catch (e) {
            console.log(e);
            return false;
        }
    },
    creatTips: function (str, time) {
        var time = time ? time : 1000;
        let div = document.createElement("div");
        div.setAttribute("class", "tipsbox twocenter");
        div.innerHTML = '<span>' + str + '</span>';
        document.body.appendChild(div);

        setTimeout(function () {
            div.setAttribute("class", "tipsbox twocenter hide");
        }, time);
        setTimeout(function () {
            document.body.removeChild(div);
        }, time + 1000);
    },
    creatPop: function (str) {
        let mask = document.createElement("div");
        mask.setAttribute("class", "mask");
        mask.setAttribute("id", "mask");
        mask.innerHTML = '';
        document.body.appendChild(mask);

        let popWrap = document.createElement("div");
        popWrap.setAttribute("class", "popBox twocenter");
        popWrap.setAttribute("id", "popBox");
        popWrap.innerHTML = '<div class="popWrap">' + str + '</div>';
        document.body.appendChild(popWrap);
    },
    closePop: function () {
        let mask = document.getElementById("mask");
        if (mask) {
            document.body.removeChild(mask);
        }
        let popBox = document.getElementById("popBox");
        if (popBox) {
            document.body.removeChild(popBox);
        }
    }
});

//timestamp => time
__WEBPACK_IMPORTED_MODULE_0_vue___default.a.filter('formatDate', function (timestamp) {
    if (timestamp == 0) {
        return "";
    }
    if (timestamp) {
        let date = new Date(timestamp * 1000);
        let year = date.getFullYear();
        let month = date.getMonth() + 1;
        let day = date.getDate();
        let hour = date.getHours();
        let minute = date.getMinutes();
        let second = date.getSeconds();

        return year + "-" + __WEBPACK_IMPORTED_MODULE_2__common_js__["a" /* default */].doublenum(month) + "-" + __WEBPACK_IMPORTED_MODULE_2__common_js__["a" /* default */].doublenum(day) + "   " + __WEBPACK_IMPORTED_MODULE_2__common_js__["a" /* default */].doublenum(hour) + ":" + __WEBPACK_IMPORTED_MODULE_2__common_js__["a" /* default */].doublenum(minute) + ":" + __WEBPACK_IMPORTED_MODULE_2__common_js__["a" /* default */].doublenum(second);
    } else {
        return "";
    }
});

/***/ }),
/* 1 */
/***/ (function(module, exports) {

module.exports = function normalizeComponent (
  rawScriptExports,
  compiledTemplate,
  scopeId,
  cssModules
) {
  var esModule
  var scriptExports = rawScriptExports = rawScriptExports || {}

  // ES6 modules interop
  var type = typeof rawScriptExports.default
  if (type === 'object' || type === 'function') {
    esModule = rawScriptExports
    scriptExports = rawScriptExports.default
  }

  // Vue.extend constructor export interop
  var options = typeof scriptExports === 'function'
    ? scriptExports.options
    : scriptExports

  // render functions
  if (compiledTemplate) {
    options.render = compiledTemplate.render
    options.staticRenderFns = compiledTemplate.staticRenderFns
  }

  // scopedId
  if (scopeId) {
    options._scopeId = scopeId
  }

  // inject cssModules
  if (cssModules) {
    var computed = options.computed || (options.computed = {})
    Object.keys(cssModules).forEach(function (key) {
      var module = cssModules[key]
      computed[key] = function () { return module }
    })
  }

  return {
    esModule: esModule,
    exports: scriptExports,
    options: options
  }
}


/***/ }),
/* 2 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export Store */
/* unused harmony export mapState */
/* unused harmony export mapMutations */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return mapGetters; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return mapActions; });
/**
 * vuex v2.3.0
 * (c) 2017 Evan You
 * @license MIT
 */
var applyMixin = function (Vue) {
  var version = Number(Vue.version.split('.')[0]);

  if (version >= 2) {
    var usesInit = Vue.config._lifecycleHooks.indexOf('init') > -1;
    Vue.mixin(usesInit ? { init: vuexInit } : { beforeCreate: vuexInit });
  } else {
    // override init and inject vuex init procedure
    // for 1.x backwards compatibility.
    var _init = Vue.prototype._init;
    Vue.prototype._init = function (options) {
      if ( options === void 0 ) options = {};

      options.init = options.init
        ? [vuexInit].concat(options.init)
        : vuexInit;
      _init.call(this, options);
    };
  }

  /**
   * Vuex init hook, injected into each instances init hooks list.
   */

  function vuexInit () {
    var options = this.$options;
    // store injection
    if (options.store) {
      this.$store = options.store;
    } else if (options.parent && options.parent.$store) {
      this.$store = options.parent.$store;
    }
  }
};

var devtoolHook =
  typeof window !== 'undefined' &&
  window.__VUE_DEVTOOLS_GLOBAL_HOOK__;

function devtoolPlugin (store) {
  if (!devtoolHook) { return }

  store._devtoolHook = devtoolHook;

  devtoolHook.emit('vuex:init', store);

  devtoolHook.on('vuex:travel-to-state', function (targetState) {
    store.replaceState(targetState);
  });

  store.subscribe(function (mutation, state) {
    devtoolHook.emit('vuex:mutation', mutation, state);
  });
}

/**
 * Get the first item that pass the test
 * by second argument function
 *
 * @param {Array} list
 * @param {Function} f
 * @return {*}
 */
/**
 * Deep copy the given object considering circular structure.
 * This function caches all nested objects and its copies.
 * If it detects circular structure, use cached copy to avoid infinite loop.
 *
 * @param {*} obj
 * @param {Array<Object>} cache
 * @return {*}
 */


/**
 * forEach for object
 */
function forEachValue (obj, fn) {
  Object.keys(obj).forEach(function (key) { return fn(obj[key], key); });
}

function isObject (obj) {
  return obj !== null && typeof obj === 'object'
}

function isPromise (val) {
  return val && typeof val.then === 'function'
}

function assert (condition, msg) {
  if (!condition) { throw new Error(("[vuex] " + msg)) }
}

var Module = function Module (rawModule, runtime) {
  this.runtime = runtime;
  this._children = Object.create(null);
  this._rawModule = rawModule;
  var rawState = rawModule.state;
  this.state = (typeof rawState === 'function' ? rawState() : rawState) || {};
};

var prototypeAccessors$1 = { namespaced: {} };

prototypeAccessors$1.namespaced.get = function () {
  return !!this._rawModule.namespaced
};

Module.prototype.addChild = function addChild (key, module) {
  this._children[key] = module;
};

Module.prototype.removeChild = function removeChild (key) {
  delete this._children[key];
};

Module.prototype.getChild = function getChild (key) {
  return this._children[key]
};

Module.prototype.update = function update (rawModule) {
  this._rawModule.namespaced = rawModule.namespaced;
  if (rawModule.actions) {
    this._rawModule.actions = rawModule.actions;
  }
  if (rawModule.mutations) {
    this._rawModule.mutations = rawModule.mutations;
  }
  if (rawModule.getters) {
    this._rawModule.getters = rawModule.getters;
  }
};

Module.prototype.forEachChild = function forEachChild (fn) {
  forEachValue(this._children, fn);
};

Module.prototype.forEachGetter = function forEachGetter (fn) {
  if (this._rawModule.getters) {
    forEachValue(this._rawModule.getters, fn);
  }
};

Module.prototype.forEachAction = function forEachAction (fn) {
  if (this._rawModule.actions) {
    forEachValue(this._rawModule.actions, fn);
  }
};

Module.prototype.forEachMutation = function forEachMutation (fn) {
  if (this._rawModule.mutations) {
    forEachValue(this._rawModule.mutations, fn);
  }
};

Object.defineProperties( Module.prototype, prototypeAccessors$1 );

var ModuleCollection = function ModuleCollection (rawRootModule) {
  var this$1 = this;

  // register root module (Vuex.Store options)
  this.root = new Module(rawRootModule, false);

  // register all nested modules
  if (rawRootModule.modules) {
    forEachValue(rawRootModule.modules, function (rawModule, key) {
      this$1.register([key], rawModule, false);
    });
  }
};

ModuleCollection.prototype.get = function get (path) {
  return path.reduce(function (module, key) {
    return module.getChild(key)
  }, this.root)
};

ModuleCollection.prototype.getNamespace = function getNamespace (path) {
  var module = this.root;
  return path.reduce(function (namespace, key) {
    module = module.getChild(key);
    return namespace + (module.namespaced ? key + '/' : '')
  }, '')
};

ModuleCollection.prototype.update = function update$1 (rawRootModule) {
  update(this.root, rawRootModule);
};

ModuleCollection.prototype.register = function register (path, rawModule, runtime) {
    var this$1 = this;
    if ( runtime === void 0 ) runtime = true;

  var parent = this.get(path.slice(0, -1));
  var newModule = new Module(rawModule, runtime);
  parent.addChild(path[path.length - 1], newModule);

  // register nested modules
  if (rawModule.modules) {
    forEachValue(rawModule.modules, function (rawChildModule, key) {
      this$1.register(path.concat(key), rawChildModule, runtime);
    });
  }
};

ModuleCollection.prototype.unregister = function unregister (path) {
  var parent = this.get(path.slice(0, -1));
  var key = path[path.length - 1];
  if (!parent.getChild(key).runtime) { return }

  parent.removeChild(key);
};

function update (targetModule, newModule) {
  // update target module
  targetModule.update(newModule);

  // update nested modules
  if (newModule.modules) {
    for (var key in newModule.modules) {
      if (!targetModule.getChild(key)) {
        console.warn(
          "[vuex] trying to add a new module '" + key + "' on hot reloading, " +
          'manual reload is needed'
        );
        return
      }
      update(targetModule.getChild(key), newModule.modules[key]);
    }
  }
}

var Vue; // bind on install

var Store = function Store (options) {
  var this$1 = this;
  if ( options === void 0 ) options = {};

  assert(Vue, "must call Vue.use(Vuex) before creating a store instance.");
  assert(typeof Promise !== 'undefined', "vuex requires a Promise polyfill in this browser.");

  var state = options.state; if ( state === void 0 ) state = {};
  var plugins = options.plugins; if ( plugins === void 0 ) plugins = [];
  var strict = options.strict; if ( strict === void 0 ) strict = false;

  // store internal state
  this._committing = false;
  this._actions = Object.create(null);
  this._mutations = Object.create(null);
  this._wrappedGetters = Object.create(null);
  this._modules = new ModuleCollection(options);
  this._modulesNamespaceMap = Object.create(null);
  this._subscribers = [];
  this._watcherVM = new Vue();

  // bind commit and dispatch to self
  var store = this;
  var ref = this;
  var dispatch = ref.dispatch;
  var commit = ref.commit;
  this.dispatch = function boundDispatch (type, payload) {
    return dispatch.call(store, type, payload)
  };
  this.commit = function boundCommit (type, payload, options) {
    return commit.call(store, type, payload, options)
  };

  // strict mode
  this.strict = strict;

  // init root module.
  // this also recursively registers all sub-modules
  // and collects all module getters inside this._wrappedGetters
  installModule(this, state, [], this._modules.root);

  // initialize the store vm, which is responsible for the reactivity
  // (also registers _wrappedGetters as computed properties)
  resetStoreVM(this, state);

  // apply plugins
  plugins.concat(devtoolPlugin).forEach(function (plugin) { return plugin(this$1); });
};

var prototypeAccessors = { state: {} };

prototypeAccessors.state.get = function () {
  return this._vm._data.$$state
};

prototypeAccessors.state.set = function (v) {
  assert(false, "Use store.replaceState() to explicit replace store state.");
};

Store.prototype.commit = function commit (_type, _payload, _options) {
    var this$1 = this;

  // check object-style commit
  var ref = unifyObjectStyle(_type, _payload, _options);
    var type = ref.type;
    var payload = ref.payload;
    var options = ref.options;

  var mutation = { type: type, payload: payload };
  var entry = this._mutations[type];
  if (!entry) {
    console.error(("[vuex] unknown mutation type: " + type));
    return
  }
  this._withCommit(function () {
    entry.forEach(function commitIterator (handler) {
      handler(payload);
    });
  });
  this._subscribers.forEach(function (sub) { return sub(mutation, this$1.state); });

  if (options && options.silent) {
    console.warn(
      "[vuex] mutation type: " + type + ". Silent option has been removed. " +
      'Use the filter functionality in the vue-devtools'
    );
  }
};

Store.prototype.dispatch = function dispatch (_type, _payload) {
  // check object-style dispatch
  var ref = unifyObjectStyle(_type, _payload);
    var type = ref.type;
    var payload = ref.payload;

  var entry = this._actions[type];
  if (!entry) {
    console.error(("[vuex] unknown action type: " + type));
    return
  }
  return entry.length > 1
    ? Promise.all(entry.map(function (handler) { return handler(payload); }))
    : entry[0](payload)
};

Store.prototype.subscribe = function subscribe (fn) {
  var subs = this._subscribers;
  if (subs.indexOf(fn) < 0) {
    subs.push(fn);
  }
  return function () {
    var i = subs.indexOf(fn);
    if (i > -1) {
      subs.splice(i, 1);
    }
  }
};

Store.prototype.watch = function watch (getter, cb, options) {
    var this$1 = this;

  assert(typeof getter === 'function', "store.watch only accepts a function.");
  return this._watcherVM.$watch(function () { return getter(this$1.state, this$1.getters); }, cb, options)
};

Store.prototype.replaceState = function replaceState (state) {
    var this$1 = this;

  this._withCommit(function () {
    this$1._vm._data.$$state = state;
  });
};

Store.prototype.registerModule = function registerModule (path, rawModule) {
  if (typeof path === 'string') { path = [path]; }
  assert(Array.isArray(path), "module path must be a string or an Array.");
  this._modules.register(path, rawModule);
  installModule(this, this.state, path, this._modules.get(path));
  // reset store to update getters...
  resetStoreVM(this, this.state);
};

Store.prototype.unregisterModule = function unregisterModule (path) {
    var this$1 = this;

  if (typeof path === 'string') { path = [path]; }
  assert(Array.isArray(path), "module path must be a string or an Array.");
  this._modules.unregister(path);
  this._withCommit(function () {
    var parentState = getNestedState(this$1.state, path.slice(0, -1));
    Vue.delete(parentState, path[path.length - 1]);
  });
  resetStore(this);
};

Store.prototype.hotUpdate = function hotUpdate (newOptions) {
  this._modules.update(newOptions);
  resetStore(this, true);
};

Store.prototype._withCommit = function _withCommit (fn) {
  var committing = this._committing;
  this._committing = true;
  fn();
  this._committing = committing;
};

Object.defineProperties( Store.prototype, prototypeAccessors );

function resetStore (store, hot) {
  store._actions = Object.create(null);
  store._mutations = Object.create(null);
  store._wrappedGetters = Object.create(null);
  store._modulesNamespaceMap = Object.create(null);
  var state = store.state;
  // init all modules
  installModule(store, state, [], store._modules.root, true);
  // reset vm
  resetStoreVM(store, state, hot);
}

function resetStoreVM (store, state, hot) {
  var oldVm = store._vm;

  // bind store public getters
  store.getters = {};
  var wrappedGetters = store._wrappedGetters;
  var computed = {};
  forEachValue(wrappedGetters, function (fn, key) {
    // use computed to leverage its lazy-caching mechanism
    computed[key] = function () { return fn(store); };
    Object.defineProperty(store.getters, key, {
      get: function () { return store._vm[key]; },
      enumerable: true // for local getters
    });
  });

  // use a Vue instance to store the state tree
  // suppress warnings just in case the user has added
  // some funky global mixins
  var silent = Vue.config.silent;
  Vue.config.silent = true;
  store._vm = new Vue({
    data: {
      $$state: state
    },
    computed: computed
  });
  Vue.config.silent = silent;

  // enable strict mode for new vm
  if (store.strict) {
    enableStrictMode(store);
  }

  if (oldVm) {
    if (hot) {
      // dispatch changes in all subscribed watchers
      // to force getter re-evaluation for hot reloading.
      store._withCommit(function () {
        oldVm._data.$$state = null;
      });
    }
    Vue.nextTick(function () { return oldVm.$destroy(); });
  }
}

function installModule (store, rootState, path, module, hot) {
  var isRoot = !path.length;
  var namespace = store._modules.getNamespace(path);

  // register in namespace map
  if (module.namespaced) {
    store._modulesNamespaceMap[namespace] = module;
  }

  // set state
  if (!isRoot && !hot) {
    var parentState = getNestedState(rootState, path.slice(0, -1));
    var moduleName = path[path.length - 1];
    store._withCommit(function () {
      Vue.set(parentState, moduleName, module.state);
    });
  }

  var local = module.context = makeLocalContext(store, namespace, path);

  module.forEachMutation(function (mutation, key) {
    var namespacedType = namespace + key;
    registerMutation(store, namespacedType, mutation, local);
  });

  module.forEachAction(function (action, key) {
    var namespacedType = namespace + key;
    registerAction(store, namespacedType, action, local);
  });

  module.forEachGetter(function (getter, key) {
    var namespacedType = namespace + key;
    registerGetter(store, namespacedType, getter, local);
  });

  module.forEachChild(function (child, key) {
    installModule(store, rootState, path.concat(key), child, hot);
  });
}

/**
 * make localized dispatch, commit, getters and state
 * if there is no namespace, just use root ones
 */
function makeLocalContext (store, namespace, path) {
  var noNamespace = namespace === '';

  var local = {
    dispatch: noNamespace ? store.dispatch : function (_type, _payload, _options) {
      var args = unifyObjectStyle(_type, _payload, _options);
      var payload = args.payload;
      var options = args.options;
      var type = args.type;

      if (!options || !options.root) {
        type = namespace + type;
        if (!store._actions[type]) {
          console.error(("[vuex] unknown local action type: " + (args.type) + ", global type: " + type));
          return
        }
      }

      return store.dispatch(type, payload)
    },

    commit: noNamespace ? store.commit : function (_type, _payload, _options) {
      var args = unifyObjectStyle(_type, _payload, _options);
      var payload = args.payload;
      var options = args.options;
      var type = args.type;

      if (!options || !options.root) {
        type = namespace + type;
        if (!store._mutations[type]) {
          console.error(("[vuex] unknown local mutation type: " + (args.type) + ", global type: " + type));
          return
        }
      }

      store.commit(type, payload, options);
    }
  };

  // getters and state object must be gotten lazily
  // because they will be changed by vm update
  Object.defineProperties(local, {
    getters: {
      get: noNamespace
        ? function () { return store.getters; }
        : function () { return makeLocalGetters(store, namespace); }
    },
    state: {
      get: function () { return getNestedState(store.state, path); }
    }
  });

  return local
}

function makeLocalGetters (store, namespace) {
  var gettersProxy = {};

  var splitPos = namespace.length;
  Object.keys(store.getters).forEach(function (type) {
    // skip if the target getter is not match this namespace
    if (type.slice(0, splitPos) !== namespace) { return }

    // extract local getter type
    var localType = type.slice(splitPos);

    // Add a port to the getters proxy.
    // Define as getter property because
    // we do not want to evaluate the getters in this time.
    Object.defineProperty(gettersProxy, localType, {
      get: function () { return store.getters[type]; },
      enumerable: true
    });
  });

  return gettersProxy
}

function registerMutation (store, type, handler, local) {
  var entry = store._mutations[type] || (store._mutations[type] = []);
  entry.push(function wrappedMutationHandler (payload) {
    handler(local.state, payload);
  });
}

function registerAction (store, type, handler, local) {
  var entry = store._actions[type] || (store._actions[type] = []);
  entry.push(function wrappedActionHandler (payload, cb) {
    var res = handler({
      dispatch: local.dispatch,
      commit: local.commit,
      getters: local.getters,
      state: local.state,
      rootGetters: store.getters,
      rootState: store.state
    }, payload, cb);
    if (!isPromise(res)) {
      res = Promise.resolve(res);
    }
    if (store._devtoolHook) {
      return res.catch(function (err) {
        store._devtoolHook.emit('vuex:error', err);
        throw err
      })
    } else {
      return res
    }
  });
}

function registerGetter (store, type, rawGetter, local) {
  if (store._wrappedGetters[type]) {
    console.error(("[vuex] duplicate getter key: " + type));
    return
  }
  store._wrappedGetters[type] = function wrappedGetter (store) {
    return rawGetter(
      local.state, // local state
      local.getters, // local getters
      store.state, // root state
      store.getters // root getters
    )
  };
}

function enableStrictMode (store) {
  store._vm.$watch(function () { return this._data.$$state }, function () {
    assert(store._committing, "Do not mutate vuex store state outside mutation handlers.");
  }, { deep: true, sync: true });
}

function getNestedState (state, path) {
  return path.length
    ? path.reduce(function (state, key) { return state[key]; }, state)
    : state
}

function unifyObjectStyle (type, payload, options) {
  if (isObject(type) && type.type) {
    options = payload;
    payload = type;
    type = type.type;
  }

  assert(typeof type === 'string', ("Expects string as the type, but found " + (typeof type) + "."));

  return { type: type, payload: payload, options: options }
}

function install (_Vue) {
  if (Vue) {
    console.error(
      '[vuex] already installed. Vue.use(Vuex) should be called only once.'
    );
    return
  }
  Vue = _Vue;
  applyMixin(Vue);
}

// auto install in dist mode
if (typeof window !== 'undefined' && window.Vue) {
  install(window.Vue);
}

var mapState = normalizeNamespace(function (namespace, states) {
  var res = {};
  normalizeMap(states).forEach(function (ref) {
    var key = ref.key;
    var val = ref.val;

    res[key] = function mappedState () {
      var state = this.$store.state;
      var getters = this.$store.getters;
      if (namespace) {
        var module = getModuleByNamespace(this.$store, 'mapState', namespace);
        if (!module) {
          return
        }
        state = module.context.state;
        getters = module.context.getters;
      }
      return typeof val === 'function'
        ? val.call(this, state, getters)
        : state[val]
    };
    // mark vuex getter for devtools
    res[key].vuex = true;
  });
  return res
});

var mapMutations = normalizeNamespace(function (namespace, mutations) {
  var res = {};
  normalizeMap(mutations).forEach(function (ref) {
    var key = ref.key;
    var val = ref.val;

    val = namespace + val;
    res[key] = function mappedMutation () {
      var args = [], len = arguments.length;
      while ( len-- ) args[ len ] = arguments[ len ];

      if (namespace && !getModuleByNamespace(this.$store, 'mapMutations', namespace)) {
        return
      }
      return this.$store.commit.apply(this.$store, [val].concat(args))
    };
  });
  return res
});

var mapGetters = normalizeNamespace(function (namespace, getters) {
  var res = {};
  normalizeMap(getters).forEach(function (ref) {
    var key = ref.key;
    var val = ref.val;

    val = namespace + val;
    res[key] = function mappedGetter () {
      if (namespace && !getModuleByNamespace(this.$store, 'mapGetters', namespace)) {
        return
      }
      if (!(val in this.$store.getters)) {
        console.error(("[vuex] unknown getter: " + val));
        return
      }
      return this.$store.getters[val]
    };
    // mark vuex getter for devtools
    res[key].vuex = true;
  });
  return res
});

var mapActions = normalizeNamespace(function (namespace, actions) {
  var res = {};
  normalizeMap(actions).forEach(function (ref) {
    var key = ref.key;
    var val = ref.val;

    val = namespace + val;
    res[key] = function mappedAction () {
      var args = [], len = arguments.length;
      while ( len-- ) args[ len ] = arguments[ len ];

      if (namespace && !getModuleByNamespace(this.$store, 'mapActions', namespace)) {
        return
      }
      return this.$store.dispatch.apply(this.$store, [val].concat(args))
    };
  });
  return res
});

function normalizeMap (map) {
  return Array.isArray(map)
    ? map.map(function (key) { return ({ key: key, val: key }); })
    : Object.keys(map).map(function (key) { return ({ key: key, val: map[key] }); })
}

function normalizeNamespace (fn) {
  return function (namespace, map) {
    if (typeof namespace !== 'string') {
      map = namespace;
      namespace = '';
    } else if (namespace.charAt(namespace.length - 1) !== '/') {
      namespace += '/';
    }
    return fn(namespace, map)
  }
}

function getModuleByNamespace (store, helper, namespace) {
  var module = store._modulesNamespaceMap[namespace];
  if (!module) {
    console.error(("[vuex] module namespace not found in " + helper + "(): " + namespace));
  }
  return module
}

var index_esm = {
  Store: Store,
  install: install,
  version: '2.3.0',
  mapState: mapState,
  mapMutations: mapMutations,
  mapGetters: mapGetters,
  mapActions: mapActions
};

/* harmony default export */ __webpack_exports__["a"] = (index_esm);


/***/ }),
/* 3 */
/***/ (function(module, exports) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
module.exports = function() {
	var list = [];

	// return the list of modules as css string
	list.toString = function toString() {
		var result = [];
		for(var i = 0; i < this.length; i++) {
			var item = this[i];
			if(item[2]) {
				result.push("@media " + item[2] + "{" + item[1] + "}");
			} else {
				result.push(item[1]);
			}
		}
		return result.join("");
	};

	// import a list of modules into the list
	list.i = function(modules, mediaQuery) {
		if(typeof modules === "string")
			modules = [[null, modules, ""]];
		var alreadyImportedModules = {};
		for(var i = 0; i < this.length; i++) {
			var id = this[i][0];
			if(typeof id === "number")
				alreadyImportedModules[id] = true;
		}
		for(i = 0; i < modules.length; i++) {
			var item = modules[i];
			// skip already imported module
			// this implementation is not 100% perfect for weird media query combinations
			//  when a module is imported multiple times with different media queries.
			//  I hope this will never occur (Hey this way we have smaller bundles)
			if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
				if(mediaQuery && !item[2]) {
					item[2] = mediaQuery;
				} else if(mediaQuery) {
					item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
				}
				list.push(item);
			}
		}
	};
	return list;
};


/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
  Modified by Evan You @yyx990803
*/

var hasDocument = typeof document !== 'undefined'

if (typeof DEBUG !== 'undefined' && DEBUG) {
  if (!hasDocument) {
    throw new Error(
    'vue-style-loader cannot be used in a non-browser environment. ' +
    "Use { target: 'node' } in your Webpack config to indicate a server-rendering environment."
  ) }
}

var listToStyles = __webpack_require__(131)

/*
type StyleObject = {
  id: number;
  parts: Array<StyleObjectPart>
}

type StyleObjectPart = {
  css: string;
  media: string;
  sourceMap: ?string
}
*/

var stylesInDom = {/*
  [id: number]: {
    id: number,
    refs: number,
    parts: Array<(obj?: StyleObjectPart) => void>
  }
*/}

var head = hasDocument && (document.head || document.getElementsByTagName('head')[0])
var singletonElement = null
var singletonCounter = 0
var isProduction = false
var noop = function () {}

// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
// tags it will allow on a page
var isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\b/.test(navigator.userAgent.toLowerCase())

module.exports = function (parentId, list, _isProduction) {
  isProduction = _isProduction

  var styles = listToStyles(parentId, list)
  addStylesToDom(styles)

  return function update (newList) {
    var mayRemove = []
    for (var i = 0; i < styles.length; i++) {
      var item = styles[i]
      var domStyle = stylesInDom[item.id]
      domStyle.refs--
      mayRemove.push(domStyle)
    }
    if (newList) {
      styles = listToStyles(parentId, newList)
      addStylesToDom(styles)
    } else {
      styles = []
    }
    for (var i = 0; i < mayRemove.length; i++) {
      var domStyle = mayRemove[i]
      if (domStyle.refs === 0) {
        for (var j = 0; j < domStyle.parts.length; j++) {
          domStyle.parts[j]()
        }
        delete stylesInDom[domStyle.id]
      }
    }
  }
}

function addStylesToDom (styles /* Array<StyleObject> */) {
  for (var i = 0; i < styles.length; i++) {
    var item = styles[i]
    var domStyle = stylesInDom[item.id]
    if (domStyle) {
      domStyle.refs++
      for (var j = 0; j < domStyle.parts.length; j++) {
        domStyle.parts[j](item.parts[j])
      }
      for (; j < item.parts.length; j++) {
        domStyle.parts.push(addStyle(item.parts[j]))
      }
      if (domStyle.parts.length > item.parts.length) {
        domStyle.parts.length = item.parts.length
      }
    } else {
      var parts = []
      for (var j = 0; j < item.parts.length; j++) {
        parts.push(addStyle(item.parts[j]))
      }
      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }
    }
  }
}

function createStyleElement () {
  var styleElement = document.createElement('style')
  styleElement.type = 'text/css'
  head.appendChild(styleElement)
  return styleElement
}

function addStyle (obj /* StyleObjectPart */) {
  var update, remove
  var styleElement = document.querySelector('style[data-vue-ssr-id~="' + obj.id + '"]')

  if (styleElement) {
    if (isProduction) {
      // has SSR styles and in production mode.
      // simply do nothing.
      return noop
    } else {
      // has SSR styles but in dev mode.
      // for some reason Chrome can't handle source map in server-rendered
      // style tags - source maps in <style> only works if the style tag is
      // created and inserted dynamically. So we remove the server rendered
      // styles and inject new ones.
      styleElement.parentNode.removeChild(styleElement)
    }
  }

  if (isOldIE) {
    // use singleton mode for IE9.
    var styleIndex = singletonCounter++
    styleElement = singletonElement || (singletonElement = createStyleElement())
    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)
    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)
  } else {
    // use multi-style-tag mode in all other cases
    styleElement = createStyleElement()
    update = applyToTag.bind(null, styleElement)
    remove = function () {
      styleElement.parentNode.removeChild(styleElement)
    }
  }

  update(obj)

  return function updateStyle (newObj /* StyleObjectPart */) {
    if (newObj) {
      if (newObj.css === obj.css &&
          newObj.media === obj.media &&
          newObj.sourceMap === obj.sourceMap) {
        return
      }
      update(obj = newObj)
    } else {
      remove()
    }
  }
}

var replaceText = (function () {
  var textStore = []

  return function (index, replacement) {
    textStore[index] = replacement
    return textStore.filter(Boolean).join('\n')
  }
})()

function applyToSingletonTag (styleElement, index, remove, obj) {
  var css = remove ? '' : obj.css

  if (styleElement.styleSheet) {
    styleElement.styleSheet.cssText = replaceText(index, css)
  } else {
    var cssNode = document.createTextNode(css)
    var childNodes = styleElement.childNodes
    if (childNodes[index]) styleElement.removeChild(childNodes[index])
    if (childNodes.length) {
      styleElement.insertBefore(cssNode, childNodes[index])
    } else {
      styleElement.appendChild(cssNode)
    }
  }
}

function applyToTag (styleElement, obj) {
  var css = obj.css
  var media = obj.media
  var sourceMap = obj.sourceMap

  if (media) {
    styleElement.setAttribute('media', media)
  }

  if (sourceMap) {
    // https://developer.chrome.com/devtools/docs/javascript-debugging
    // this makes source maps inside style tags work properly in Chrome
    css += '\n/*# sourceURL=' + sourceMap.sources[0] + ' */'
    // http://stackoverflow.com/a/26603875
    css += '\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'
  }

  if (styleElement.styleSheet) {
    styleElement.styleSheet.cssText = css
  } else {
    while (styleElement.firstChild) {
      styleElement.removeChild(styleElement.firstChild)
    }
    styleElement.appendChild(document.createTextNode(css))
  }
}


/***/ }),
/* 5 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// types
const GETLINELIST = 'GETLINELIST';
/* harmony export (immutable) */ __webpack_exports__["a"] = GETLINELIST;
 //产品线
const PRODUCTID = 'PRODUCTID';
/* harmony export (immutable) */ __webpack_exports__["B"] = PRODUCTID;
 //产品线ID
const ALLPAGE = 'ALLPAGE';
/* unused harmony export ALLPAGE */
 //翻页总数

const MANAGEQUERYDATA = 'MANAGEQUERYDATA';
/* harmony export (immutable) */ __webpack_exports__["i"] = MANAGEQUERYDATA;
 //监控项 查询选项

const HTTPTABLELIST = 'HTTPTABLELIST';
/* harmony export (immutable) */ __webpack_exports__["j"] = HTTPTABLELIST;
 //http可用性 表格
const HTTPDELETEINDEX = 'HTTPDELETEINDEX';
/* harmony export (immutable) */ __webpack_exports__["m"] = HTTPDELETEINDEX;
 //http可用性 删除某一项
const HTTPSTARTINDEX = 'HTTPSTARTINDEX';
/* harmony export (immutable) */ __webpack_exports__["p"] = HTTPSTARTINDEX;
 //http可用性 启用某一项
const HTTPSTOPINDEX = 'HTTPSTOPINDEX';
/* harmony export (immutable) */ __webpack_exports__["s"] = HTTPSTOPINDEX;
 //http可用性 禁用某一项

const JSCONFTABLELIST = 'JSCONFTABLELIST';
/* harmony export (immutable) */ __webpack_exports__["k"] = JSCONFTABLELIST;
 //JSCONF 表格
const JSCONFDELETEINDEX = 'JSCONFDELETEINDEX';
/* harmony export (immutable) */ __webpack_exports__["n"] = JSCONFDELETEINDEX;
 //JSCONF 删除某一项
const JSCONFSTARTINDEX = 'JSCONFSTARTINDEX';
/* harmony export (immutable) */ __webpack_exports__["q"] = JSCONFSTARTINDEX;
 //JSCONF 启用某一项
const JSCONFSTOPINDEX = 'JSCONFSTOPINDEX';
/* harmony export (immutable) */ __webpack_exports__["t"] = JSCONFSTOPINDEX;
 //JSCONF 禁用某一项

const ELESTABLELIST = 'ELESTABLELIST';
/* harmony export (immutable) */ __webpack_exports__["l"] = ELESTABLELIST;
 //页面元素 表格
const ELESDELETEINDEX = 'ELESDELETEINDEX';
/* harmony export (immutable) */ __webpack_exports__["o"] = ELESDELETEINDEX;
 //页面元素 删除某一项
const ELESSTARTINDEX = 'ELESSTARTINDEX';
/* harmony export (immutable) */ __webpack_exports__["r"] = ELESSTARTINDEX;
 //页面元素 启用某一项
const ELESSTOPINDEX = 'ELESSTOPINDEX';
/* harmony export (immutable) */ __webpack_exports__["u"] = ELESSTOPINDEX;
 //页面元素 禁用某一项

const USERINFOLIST = 'USERINFOLIST';
/* harmony export (immutable) */ __webpack_exports__["v"] = USERINFOLIST;
 //用户信息列表

const CERTIFICATEMANAGELIST = 'CERTIFICATEMANAGELIST';
/* harmony export (immutable) */ __webpack_exports__["w"] = CERTIFICATEMANAGELIST;
 //权限组
const CERTIFICATEMEMBERLIST = 'CERTIFICATEMEMBERLIST';
/* harmony export (immutable) */ __webpack_exports__["x"] = CERTIFICATEMEMBERLIST;
 // 权限组 成员列表

const ALERTMANAGELIST = 'ALERTMANAGELIST';
/* harmony export (immutable) */ __webpack_exports__["y"] = ALERTMANAGELIST;
 //报警组
const ALERTMEMBERLIST = 'ALERTMEMBERLIST';
/* harmony export (immutable) */ __webpack_exports__["z"] = ALERTMEMBERLIST;
 //报警组 成员列表

const ALARMLIST = 'ALARMLIST';
/* harmony export (immutable) */ __webpack_exports__["d"] = ALARMLIST;
 //报警列表
const ALARMQUERYDATA = 'ALARMQUERYDATA';
/* harmony export (immutable) */ __webpack_exports__["b"] = ALARMQUERYDATA;
 //报警 查询选项

const ROBOTACOUNTLIST = 'ROBOTACOUNTLIST';
/* harmony export (immutable) */ __webpack_exports__["A"] = ROBOTACOUNTLIST;
 //虚拟用户列表

const RUNLOGLIST = 'RUNLOGLIST';
/* harmony export (immutable) */ __webpack_exports__["e"] = RUNLOGLIST;
 //运行记录列表
const RUNLOGQUERYDATA = 'RUNLOGQUERYDATA';
/* harmony export (immutable) */ __webpack_exports__["c"] = RUNLOGQUERYDATA;
 //运行记录 查询选项

const UPDATEALARMINDEX = "UPDATEALARMINDEX";
/* harmony export (immutable) */ __webpack_exports__["f"] = UPDATEALARMINDEX;
 //开始处理一个报警
const UPDATEALARMINDEXSBATCH = "UPDATEALARMINDEXSBATCH";
/* harmony export (immutable) */ __webpack_exports__["g"] = UPDATEALARMINDEXSBATCH;
 //开始批量处理报警index
const ALARMIDBATCH = "ALARMIDBATCH";
/* harmony export (immutable) */ __webpack_exports__["h"] = ALARMIDBATCH;
 //批量处理报警id

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/*!
 * Vue.js v2.3.0
 * (c) 2014-2017 Evan You
 * Released under the MIT License.
 */


/*  */

// these helpers produces better vm code in JS engines due to their
// explicitness and function inlining
function isUndef (v) {
  return v === undefined || v === null
}

function isDef (v) {
  return v !== undefined && v !== null
}

function isTrue (v) {
  return v === true
}

/**
 * Check if value is primitive
 */
function isPrimitive (value) {
  return typeof value === 'string' || typeof value === 'number'
}

/**
 * Quick object check - this is primarily used to tell
 * Objects from primitive values when we know the value
 * is a JSON-compliant type.
 */
function isObject (obj) {
  return obj !== null && typeof obj === 'object'
}

var toString = Object.prototype.toString;

/**
 * Strict object type check. Only returns true
 * for plain JavaScript objects.
 */
function isPlainObject (obj) {
  return toString.call(obj) === '[object Object]'
}

function isRegExp (v) {
  return toString.call(v) === '[object RegExp]'
}

/**
 * Convert a value to a string that is actually rendered.
 */
function _toString (val) {
  return val == null
    ? ''
    : typeof val === 'object'
      ? JSON.stringify(val, null, 2)
      : String(val)
}

/**
 * Convert a input value to a number for persistence.
 * If the conversion fails, return original string.
 */
function toNumber (val) {
  var n = parseFloat(val);
  return isNaN(n) ? val : n
}

/**
 * Make a map and return a function for checking if a key
 * is in that map.
 */
function makeMap (
  str,
  expectsLowerCase
) {
  var map = Object.create(null);
  var list = str.split(',');
  for (var i = 0; i < list.length; i++) {
    map[list[i]] = true;
  }
  return expectsLowerCase
    ? function (val) { return map[val.toLowerCase()]; }
    : function (val) { return map[val]; }
}

/**
 * Check if a tag is a built-in tag.
 */
var isBuiltInTag = makeMap('slot,component', true);

/**
 * Remove an item from an array
 */
function remove (arr, item) {
  if (arr.length) {
    var index = arr.indexOf(item);
    if (index > -1) {
      return arr.splice(index, 1)
    }
  }
}

/**
 * Check whether the object has the property.
 */
var hasOwnProperty = Object.prototype.hasOwnProperty;
function hasOwn (obj, key) {
  return hasOwnProperty.call(obj, key)
}

/**
 * Create a cached version of a pure function.
 */
function cached (fn) {
  var cache = Object.create(null);
  return (function cachedFn (str) {
    var hit = cache[str];
    return hit || (cache[str] = fn(str))
  })
}

/**
 * Camelize a hyphen-delimited string.
 */
var camelizeRE = /-(\w)/g;
var camelize = cached(function (str) {
  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })
});

/**
 * Capitalize a string.
 */
var capitalize = cached(function (str) {
  return str.charAt(0).toUpperCase() + str.slice(1)
});

/**
 * Hyphenate a camelCase string.
 */
var hyphenateRE = /([^-])([A-Z])/g;
var hyphenate = cached(function (str) {
  return str
    .replace(hyphenateRE, '$1-$2')
    .replace(hyphenateRE, '$1-$2')
    .toLowerCase()
});

/**
 * Simple bind, faster than native
 */
function bind (fn, ctx) {
  function boundFn (a) {
    var l = arguments.length;
    return l
      ? l > 1
        ? fn.apply(ctx, arguments)
        : fn.call(ctx, a)
      : fn.call(ctx)
  }
  // record original fn length
  boundFn._length = fn.length;
  return boundFn
}

/**
 * Convert an Array-like object to a real Array.
 */
function toArray (list, start) {
  start = start || 0;
  var i = list.length - start;
  var ret = new Array(i);
  while (i--) {
    ret[i] = list[i + start];
  }
  return ret
}

/**
 * Mix properties into target object.
 */
function extend (to, _from) {
  for (var key in _from) {
    to[key] = _from[key];
  }
  return to
}

/**
 * Merge an Array of Objects into a single Object.
 */
function toObject (arr) {
  var res = {};
  for (var i = 0; i < arr.length; i++) {
    if (arr[i]) {
      extend(res, arr[i]);
    }
  }
  return res
}

/**
 * Perform no operation.
 */
function noop () {}

/**
 * Always return false.
 */
var no = function () { return false; };

/**
 * Return same value
 */
var identity = function (_) { return _; };

/**
 * Generate a static keys string from compiler modules.
 */
function genStaticKeys (modules) {
  return modules.reduce(function (keys, m) {
    return keys.concat(m.staticKeys || [])
  }, []).join(',')
}

/**
 * Check if two values are loosely equal - that is,
 * if they are plain objects, do they have the same shape?
 */
function looseEqual (a, b) {
  var isObjectA = isObject(a);
  var isObjectB = isObject(b);
  if (isObjectA && isObjectB) {
    try {
      return JSON.stringify(a) === JSON.stringify(b)
    } catch (e) {
      // possible circular reference
      return a === b
    }
  } else if (!isObjectA && !isObjectB) {
    return String(a) === String(b)
  } else {
    return false
  }
}

function looseIndexOf (arr, val) {
  for (var i = 0; i < arr.length; i++) {
    if (looseEqual(arr[i], val)) { return i }
  }
  return -1
}

/**
 * Ensure a function is called only once.
 */
function once (fn) {
  var called = false;
  return function () {
    if (!called) {
      called = true;
      fn.apply(this, arguments);
    }
  }
}

var SSR_ATTR = 'data-server-rendered';

var ASSET_TYPES = [
  'component',
  'directive',
  'filter'
];

var LIFECYCLE_HOOKS = [
  'beforeCreate',
  'created',
  'beforeMount',
  'mounted',
  'beforeUpdate',
  'updated',
  'beforeDestroy',
  'destroyed',
  'activated',
  'deactivated'
];

/*  */

var config = ({
  /**
   * Option merge strategies (used in core/util/options)
   */
  optionMergeStrategies: Object.create(null),

  /**
   * Whether to suppress warnings.
   */
  silent: false,

  /**
   * Show production mode tip message on boot?
   */
  productionTip: "production" !== 'production',

  /**
   * Whether to enable devtools
   */
  devtools: "production" !== 'production',

  /**
   * Whether to record perf
   */
  performance: false,

  /**
   * Error handler for watcher errors
   */
  errorHandler: null,

  /**
   * Ignore certain custom elements
   */
  ignoredElements: [],

  /**
   * Custom user key aliases for v-on
   */
  keyCodes: Object.create(null),

  /**
   * Check if a tag is reserved so that it cannot be registered as a
   * component. This is platform-dependent and may be overwritten.
   */
  isReservedTag: no,

  /**
   * Check if an attribute is reserved so that it cannot be used as a component
   * prop. This is platform-dependent and may be overwritten.
   */
  isReservedAttr: no,

  /**
   * Check if a tag is an unknown element.
   * Platform-dependent.
   */
  isUnknownElement: no,

  /**
   * Get the namespace of an element
   */
  getTagNamespace: noop,

  /**
   * Parse the real tag name for the specific platform.
   */
  parsePlatformTagName: identity,

  /**
   * Check if an attribute must be bound using property, e.g. value
   * Platform-dependent.
   */
  mustUseProp: no,

  /**
   * Exposed for legacy reasons
   */
  _lifecycleHooks: LIFECYCLE_HOOKS
});

/*  */

var emptyObject = Object.freeze({});

/**
 * Check if a string starts with $ or _
 */
function isReserved (str) {
  var c = (str + '').charCodeAt(0);
  return c === 0x24 || c === 0x5F
}

/**
 * Define a property.
 */
function def (obj, key, val, enumerable) {
  Object.defineProperty(obj, key, {
    value: val,
    enumerable: !!enumerable,
    writable: true,
    configurable: true
  });
}

/**
 * Parse simple path.
 */
var bailRE = /[^\w.$]/;
function parsePath (path) {
  if (bailRE.test(path)) {
    return
  }
  var segments = path.split('.');
  return function (obj) {
    for (var i = 0; i < segments.length; i++) {
      if (!obj) { return }
      obj = obj[segments[i]];
    }
    return obj
  }
}

var warn = noop;
var tip = noop;
var formatComponentName;

if (false) {
  var hasConsole = typeof console !== 'undefined';
  var classifyRE = /(?:^|[-_])(\w)/g;
  var classify = function (str) { return str
    .replace(classifyRE, function (c) { return c.toUpperCase(); })
    .replace(/[-_]/g, ''); };

  warn = function (msg, vm) {
    if (hasConsole && (!config.silent)) {
      console.error("[Vue warn]: " + msg + (
        vm ? generateComponentTrace(vm) : ''
      ));
    }
  };

  tip = function (msg, vm) {
    if (hasConsole && (!config.silent)) {
      console.warn("[Vue tip]: " + msg + (
        vm ? generateComponentTrace(vm) : ''
      ));
    }
  };

  formatComponentName = function (vm, includeFile) {
    if (vm.$root === vm) {
      return '<Root>'
    }
    var name = typeof vm === 'string'
      ? vm
      : typeof vm === 'function' && vm.options
        ? vm.options.name
        : vm._isVue
          ? vm.$options.name || vm.$options._componentTag
          : vm.name;

    var file = vm._isVue && vm.$options.__file;
    if (!name && file) {
      var match = file.match(/([^/\\]+)\.vue$/);
      name = match && match[1];
    }

    return (
      (name ? ("<" + (classify(name)) + ">") : "<Anonymous>") +
      (file && includeFile !== false ? (" at " + file) : '')
    )
  };

  var repeat = function (str, n) {
    var res = '';
    while (n) {
      if (n % 2 === 1) { res += str; }
      if (n > 1) { str += str; }
      n >>= 1;
    }
    return res
  };

  var generateComponentTrace = function (vm) {
    if (vm._isVue && vm.$parent) {
      var tree = [];
      var currentRecursiveSequence = 0;
      while (vm) {
        if (tree.length > 0) {
          var last = tree[tree.length - 1];
          if (last.constructor === vm.constructor) {
            currentRecursiveSequence++;
            vm = vm.$parent;
            continue
          } else if (currentRecursiveSequence > 0) {
            tree[tree.length - 1] = [last, currentRecursiveSequence];
            currentRecursiveSequence = 0;
          }
        }
        tree.push(vm);
        vm = vm.$parent;
      }
      return '\n\nfound in\n\n' + tree
        .map(function (vm, i) { return ("" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)
            ? ((formatComponentName(vm[0])) + "... (" + (vm[1]) + " recursive calls)")
            : formatComponentName(vm))); })
        .join('\n')
    } else {
      return ("\n\n(found in " + (formatComponentName(vm)) + ")")
    }
  };
}

function handleError (err, vm, info) {
  if (config.errorHandler) {
    config.errorHandler.call(null, err, vm, info);
  } else {
    if (false) {
      warn(("Error in " + info + ": \"" + (err.toString()) + "\""), vm);
    }
    /* istanbul ignore else */
    if (inBrowser && typeof console !== 'undefined') {
      console.error(err);
    } else {
      throw err
    }
  }
}

/*  */
/* globals MutationObserver */

// can we use __proto__?
var hasProto = '__proto__' in {};

// Browser environment sniffing
var inBrowser = typeof window !== 'undefined';
var UA = inBrowser && window.navigator.userAgent.toLowerCase();
var isIE = UA && /msie|trident/.test(UA);
var isIE9 = UA && UA.indexOf('msie 9.0') > 0;
var isEdge = UA && UA.indexOf('edge/') > 0;
var isAndroid = UA && UA.indexOf('android') > 0;
var isIOS = UA && /iphone|ipad|ipod|ios/.test(UA);
var isChrome = UA && /chrome\/\d+/.test(UA) && !isEdge;

var supportsPassive = false;
if (inBrowser) {
  try {
    var opts = {};
    Object.defineProperty(opts, 'passive', ({
      get: function get () {
        /* istanbul ignore next */
        supportsPassive = true;
      }
    } )); // https://github.com/facebook/flow/issues/285
    window.addEventListener('test-passive', null, opts);
  } catch (e) {}
}

// this needs to be lazy-evaled because vue may be required before
// vue-server-renderer can set VUE_ENV
var _isServer;
var isServerRendering = function () {
  if (_isServer === undefined) {
    /* istanbul ignore if */
    if (!inBrowser && typeof global !== 'undefined') {
      // detect presence of vue-server-renderer and avoid
      // Webpack shimming the process
      _isServer = global['process'].env.VUE_ENV === 'server';
    } else {
      _isServer = false;
    }
  }
  return _isServer
};

// detect devtools
var devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;

/* istanbul ignore next */
function isNative (Ctor) {
  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())
}

var hasSymbol =
  typeof Symbol !== 'undefined' && isNative(Symbol) &&
  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);

/**
 * Defer a task to execute it asynchronously.
 */
var nextTick = (function () {
  var callbacks = [];
  var pending = false;
  var timerFunc;

  function nextTickHandler () {
    pending = false;
    var copies = callbacks.slice(0);
    callbacks.length = 0;
    for (var i = 0; i < copies.length; i++) {
      copies[i]();
    }
  }

  // the nextTick behavior leverages the microtask queue, which can be accessed
  // via either native Promise.then or MutationObserver.
  // MutationObserver has wider support, however it is seriously bugged in
  // UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It
  // completely stops working after triggering a few times... so, if native
  // Promise is available, we will use it:
  /* istanbul ignore if */
  if (typeof Promise !== 'undefined' && isNative(Promise)) {
    var p = Promise.resolve();
    var logError = function (err) { console.error(err); };
    timerFunc = function () {
      p.then(nextTickHandler).catch(logError);
      // in problematic UIWebViews, Promise.then doesn't completely break, but
      // it can get stuck in a weird state where callbacks are pushed into the
      // microtask queue but the queue isn't being flushed, until the browser
      // needs to do some other work, e.g. handle a timer. Therefore we can
      // "force" the microtask queue to be flushed by adding an empty timer.
      if (isIOS) { setTimeout(noop); }
    };
  } else if (typeof MutationObserver !== 'undefined' && (
    isNative(MutationObserver) ||
    // PhantomJS and iOS 7.x
    MutationObserver.toString() === '[object MutationObserverConstructor]'
  )) {
    // use MutationObserver where native Promise is not available,
    // e.g. PhantomJS IE11, iOS7, Android 4.4
    var counter = 1;
    var observer = new MutationObserver(nextTickHandler);
    var textNode = document.createTextNode(String(counter));
    observer.observe(textNode, {
      characterData: true
    });
    timerFunc = function () {
      counter = (counter + 1) % 2;
      textNode.data = String(counter);
    };
  } else {
    // fallback to setTimeout
    /* istanbul ignore next */
    timerFunc = function () {
      setTimeout(nextTickHandler, 0);
    };
  }

  return function queueNextTick (cb, ctx) {
    var _resolve;
    callbacks.push(function () {
      if (cb) {
        try {
          cb.call(ctx);
        } catch (e) {
          handleError(e, ctx, 'nextTick');
        }
      } else if (_resolve) {
        _resolve(ctx);
      }
    });
    if (!pending) {
      pending = true;
      timerFunc();
    }
    if (!cb && typeof Promise !== 'undefined') {
      return new Promise(function (resolve, reject) {
        _resolve = resolve;
      })
    }
  }
})();

var _Set;
/* istanbul ignore if */
if (typeof Set !== 'undefined' && isNative(Set)) {
  // use native Set when available.
  _Set = Set;
} else {
  // a non-standard Set polyfill that only works with primitive keys.
  _Set = (function () {
    function Set () {
      this.set = Object.create(null);
    }
    Set.prototype.has = function has (key) {
      return this.set[key] === true
    };
    Set.prototype.add = function add (key) {
      this.set[key] = true;
    };
    Set.prototype.clear = function clear () {
      this.set = Object.create(null);
    };

    return Set;
  }());
}

/*  */


var uid = 0;

/**
 * A dep is an observable that can have multiple
 * directives subscribing to it.
 */
var Dep = function Dep () {
  this.id = uid++;
  this.subs = [];
};

Dep.prototype.addSub = function addSub (sub) {
  this.subs.push(sub);
};

Dep.prototype.removeSub = function removeSub (sub) {
  remove(this.subs, sub);
};

Dep.prototype.depend = function depend () {
  if (Dep.target) {
    Dep.target.addDep(this);
  }
};

Dep.prototype.notify = function notify () {
  // stabilize the subscriber list first
  var subs = this.subs.slice();
  for (var i = 0, l = subs.length; i < l; i++) {
    subs[i].update();
  }
};

// the current target watcher being evaluated.
// this is globally unique because there could be only one
// watcher being evaluated at any time.
Dep.target = null;
var targetStack = [];

function pushTarget (_target) {
  if (Dep.target) { targetStack.push(Dep.target); }
  Dep.target = _target;
}

function popTarget () {
  Dep.target = targetStack.pop();
}

/*
 * not type checking this file because flow doesn't play well with
 * dynamically accessing methods on Array prototype
 */

var arrayProto = Array.prototype;
var arrayMethods = Object.create(arrayProto);[
  'push',
  'pop',
  'shift',
  'unshift',
  'splice',
  'sort',
  'reverse'
]
.forEach(function (method) {
  // cache original method
  var original = arrayProto[method];
  def(arrayMethods, method, function mutator () {
    var arguments$1 = arguments;

    // avoid leaking arguments:
    // http://jsperf.com/closure-with-arguments
    var i = arguments.length;
    var args = new Array(i);
    while (i--) {
      args[i] = arguments$1[i];
    }
    var result = original.apply(this, args);
    var ob = this.__ob__;
    var inserted;
    switch (method) {
      case 'push':
        inserted = args;
        break
      case 'unshift':
        inserted = args;
        break
      case 'splice':
        inserted = args.slice(2);
        break
    }
    if (inserted) { ob.observeArray(inserted); }
    // notify change
    ob.dep.notify();
    return result
  });
});

/*  */

var arrayKeys = Object.getOwnPropertyNames(arrayMethods);

/**
 * By default, when a reactive property is set, the new value is
 * also converted to become reactive. However when passing down props,
 * we don't want to force conversion because the value may be a nested value
 * under a frozen data structure. Converting it would defeat the optimization.
 */
var observerState = {
  shouldConvert: true,
  isSettingProps: false
};

/**
 * Observer class that are attached to each observed
 * object. Once attached, the observer converts target
 * object's property keys into getter/setters that
 * collect dependencies and dispatches updates.
 */
var Observer = function Observer (value) {
  this.value = value;
  this.dep = new Dep();
  this.vmCount = 0;
  def(value, '__ob__', this);
  if (Array.isArray(value)) {
    var augment = hasProto
      ? protoAugment
      : copyAugment;
    augment(value, arrayMethods, arrayKeys);
    this.observeArray(value);
  } else {
    this.walk(value);
  }
};

/**
 * Walk through each property and convert them into
 * getter/setters. This method should only be called when
 * value type is Object.
 */
Observer.prototype.walk = function walk (obj) {
  var keys = Object.keys(obj);
  for (var i = 0; i < keys.length; i++) {
    defineReactive$$1(obj, keys[i], obj[keys[i]]);
  }
};

/**
 * Observe a list of Array items.
 */
Observer.prototype.observeArray = function observeArray (items) {
  for (var i = 0, l = items.length; i < l; i++) {
    observe(items[i]);
  }
};

// helpers

/**
 * Augment an target Object or Array by intercepting
 * the prototype chain using __proto__
 */
function protoAugment (target, src) {
  /* eslint-disable no-proto */
  target.__proto__ = src;
  /* eslint-enable no-proto */
}

/**
 * Augment an target Object or Array by defining
 * hidden properties.
 */
/* istanbul ignore next */
function copyAugment (target, src, keys) {
  for (var i = 0, l = keys.length; i < l; i++) {
    var key = keys[i];
    def(target, key, src[key]);
  }
}

/**
 * Attempt to create an observer instance for a value,
 * returns the new observer if successfully observed,
 * or the existing observer if the value already has one.
 */
function observe (value, asRootData) {
  if (!isObject(value)) {
    return
  }
  var ob;
  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {
    ob = value.__ob__;
  } else if (
    observerState.shouldConvert &&
    !isServerRendering() &&
    (Array.isArray(value) || isPlainObject(value)) &&
    Object.isExtensible(value) &&
    !value._isVue
  ) {
    ob = new Observer(value);
  }
  if (asRootData && ob) {
    ob.vmCount++;
  }
  return ob
}

/**
 * Define a reactive property on an Object.
 */
function defineReactive$$1 (
  obj,
  key,
  val,
  customSetter
) {
  var dep = new Dep();

  var property = Object.getOwnPropertyDescriptor(obj, key);
  if (property && property.configurable === false) {
    return
  }

  // cater for pre-defined getter/setters
  var getter = property && property.get;
  var setter = property && property.set;

  var childOb = observe(val);
  Object.defineProperty(obj, key, {
    enumerable: true,
    configurable: true,
    get: function reactiveGetter () {
      var value = getter ? getter.call(obj) : val;
      if (Dep.target) {
        dep.depend();
        if (childOb) {
          childOb.dep.depend();
        }
        if (Array.isArray(value)) {
          dependArray(value);
        }
      }
      return value
    },
    set: function reactiveSetter (newVal) {
      var value = getter ? getter.call(obj) : val;
      /* eslint-disable no-self-compare */
      if (newVal === value || (newVal !== newVal && value !== value)) {
        return
      }
      /* eslint-enable no-self-compare */
      if (false) {
        customSetter();
      }
      if (setter) {
        setter.call(obj, newVal);
      } else {
        val = newVal;
      }
      childOb = observe(newVal);
      dep.notify();
    }
  });
}

/**
 * Set a property on an object. Adds the new property and
 * triggers change notification if the property doesn't
 * already exist.
 */
function set (target, key, val) {
  if (Array.isArray(target) && typeof key === 'number') {
    target.length = Math.max(target.length, key);
    target.splice(key, 1, val);
    return val
  }
  if (hasOwn(target, key)) {
    target[key] = val;
    return val
  }
  var ob = (target ).__ob__;
  if (target._isVue || (ob && ob.vmCount)) {
    "production" !== 'production' && warn(
      'Avoid adding reactive properties to a Vue instance or its root $data ' +
      'at runtime - declare it upfront in the data option.'
    );
    return val
  }
  if (!ob) {
    target[key] = val;
    return val
  }
  defineReactive$$1(ob.value, key, val);
  ob.dep.notify();
  return val
}

/**
 * Delete a property and trigger change if necessary.
 */
function del (target, key) {
  if (Array.isArray(target) && typeof key === 'number') {
    target.splice(key, 1);
    return
  }
  var ob = (target ).__ob__;
  if (target._isVue || (ob && ob.vmCount)) {
    "production" !== 'production' && warn(
      'Avoid deleting properties on a Vue instance or its root $data ' +
      '- just set it to null.'
    );
    return
  }
  if (!hasOwn(target, key)) {
    return
  }
  delete target[key];
  if (!ob) {
    return
  }
  ob.dep.notify();
}

/**
 * Collect dependencies on array elements when the array is touched, since
 * we cannot intercept array element access like property getters.
 */
function dependArray (value) {
  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {
    e = value[i];
    e && e.__ob__ && e.__ob__.dep.depend();
    if (Array.isArray(e)) {
      dependArray(e);
    }
  }
}

/*  */

/**
 * Option overwriting strategies are functions that handle
 * how to merge a parent option value and a child option
 * value into the final value.
 */
var strats = config.optionMergeStrategies;

/**
 * Options with restrictions
 */
if (false) {
  strats.el = strats.propsData = function (parent, child, vm, key) {
    if (!vm) {
      warn(
        "option \"" + key + "\" can only be used during instance " +
        'creation with the `new` keyword.'
      );
    }
    return defaultStrat(parent, child)
  };
}

/**
 * Helper that recursively merges two data objects together.
 */
function mergeData (to, from) {
  if (!from) { return to }
  var key, toVal, fromVal;
  var keys = Object.keys(from);
  for (var i = 0; i < keys.length; i++) {
    key = keys[i];
    toVal = to[key];
    fromVal = from[key];
    if (!hasOwn(to, key)) {
      set(to, key, fromVal);
    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {
      mergeData(toVal, fromVal);
    }
  }
  return to
}

/**
 * Data
 */
strats.data = function (
  parentVal,
  childVal,
  vm
) {
  if (!vm) {
    // in a Vue.extend merge, both should be functions
    if (!childVal) {
      return parentVal
    }
    if (typeof childVal !== 'function') {
      "production" !== 'production' && warn(
        'The "data" option should be a function ' +
        'that returns a per-instance value in component ' +
        'definitions.',
        vm
      );
      return parentVal
    }
    if (!parentVal) {
      return childVal
    }
    // when parentVal & childVal are both present,
    // we need to return a function that returns the
    // merged result of both functions... no need to
    // check if parentVal is a function here because
    // it has to be a function to pass previous merges.
    return function mergedDataFn () {
      return mergeData(
        childVal.call(this),
        parentVal.call(this)
      )
    }
  } else if (parentVal || childVal) {
    return function mergedInstanceDataFn () {
      // instance merge
      var instanceData = typeof childVal === 'function'
        ? childVal.call(vm)
        : childVal;
      var defaultData = typeof parentVal === 'function'
        ? parentVal.call(vm)
        : undefined;
      if (instanceData) {
        return mergeData(instanceData, defaultData)
      } else {
        return defaultData
      }
    }
  }
};

/**
 * Hooks and props are merged as arrays.
 */
function mergeHook (
  parentVal,
  childVal
) {
  return childVal
    ? parentVal
      ? parentVal.concat(childVal)
      : Array.isArray(childVal)
        ? childVal
        : [childVal]
    : parentVal
}

LIFECYCLE_HOOKS.forEach(function (hook) {
  strats[hook] = mergeHook;
});

/**
 * Assets
 *
 * When a vm is present (instance creation), we need to do
 * a three-way merge between constructor options, instance
 * options and parent options.
 */
function mergeAssets (parentVal, childVal) {
  var res = Object.create(parentVal || null);
  return childVal
    ? extend(res, childVal)
    : res
}

ASSET_TYPES.forEach(function (type) {
  strats[type + 's'] = mergeAssets;
});

/**
 * Watchers.
 *
 * Watchers hashes should not overwrite one
 * another, so we merge them as arrays.
 */
strats.watch = function (parentVal, childVal) {
  /* istanbul ignore if */
  if (!childVal) { return Object.create(parentVal || null) }
  if (!parentVal) { return childVal }
  var ret = {};
  extend(ret, parentVal);
  for (var key in childVal) {
    var parent = ret[key];
    var child = childVal[key];
    if (parent && !Array.isArray(parent)) {
      parent = [parent];
    }
    ret[key] = parent
      ? parent.concat(child)
      : [child];
  }
  return ret
};

/**
 * Other object hashes.
 */
strats.props =
strats.methods =
strats.computed = function (parentVal, childVal) {
  if (!childVal) { return Object.create(parentVal || null) }
  if (!parentVal) { return childVal }
  var ret = Object.create(null);
  extend(ret, parentVal);
  extend(ret, childVal);
  return ret
};

/**
 * Default strategy.
 */
var defaultStrat = function (parentVal, childVal) {
  return childVal === undefined
    ? parentVal
    : childVal
};

/**
 * Validate component names
 */
function checkComponents (options) {
  for (var key in options.components) {
    var lower = key.toLowerCase();
    if (isBuiltInTag(lower) || config.isReservedTag(lower)) {
      warn(
        'Do not use built-in or reserved HTML elements as component ' +
        'id: ' + key
      );
    }
  }
}

/**
 * Ensure all props option syntax are normalized into the
 * Object-based format.
 */
function normalizeProps (options) {
  var props = options.props;
  if (!props) { return }
  var res = {};
  var i, val, name;
  if (Array.isArray(props)) {
    i = props.length;
    while (i--) {
      val = props[i];
      if (typeof val === 'string') {
        name = camelize(val);
        res[name] = { type: null };
      } else if (false) {
        warn('props must be strings when using array syntax.');
      }
    }
  } else if (isPlainObject(props)) {
    for (var key in props) {
      val = props[key];
      name = camelize(key);
      res[name] = isPlainObject(val)
        ? val
        : { type: val };
    }
  }
  options.props = res;
}

/**
 * Normalize raw function directives into object format.
 */
function normalizeDirectives (options) {
  var dirs = options.directives;
  if (dirs) {
    for (var key in dirs) {
      var def = dirs[key];
      if (typeof def === 'function') {
        dirs[key] = { bind: def, update: def };
      }
    }
  }
}

/**
 * Merge two option objects into a new one.
 * Core utility used in both instantiation and inheritance.
 */
function mergeOptions (
  parent,
  child,
  vm
) {
  if (false) {
    checkComponents(child);
  }

  if (typeof child === 'function') {
    child = child.options;
  }

  normalizeProps(child);
  normalizeDirectives(child);
  var extendsFrom = child.extends;
  if (extendsFrom) {
    parent = mergeOptions(parent, extendsFrom, vm);
  }
  if (child.mixins) {
    for (var i = 0, l = child.mixins.length; i < l; i++) {
      parent = mergeOptions(parent, child.mixins[i], vm);
    }
  }
  var options = {};
  var key;
  for (key in parent) {
    mergeField(key);
  }
  for (key in child) {
    if (!hasOwn(parent, key)) {
      mergeField(key);
    }
  }
  function mergeField (key) {
    var strat = strats[key] || defaultStrat;
    options[key] = strat(parent[key], child[key], vm, key);
  }
  return options
}

/**
 * Resolve an asset.
 * This function is used because child instances need access
 * to assets defined in its ancestor chain.
 */
function resolveAsset (
  options,
  type,
  id,
  warnMissing
) {
  /* istanbul ignore if */
  if (typeof id !== 'string') {
    return
  }
  var assets = options[type];
  // check local registration variations first
  if (hasOwn(assets, id)) { return assets[id] }
  var camelizedId = camelize(id);
  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }
  var PascalCaseId = capitalize(camelizedId);
  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }
  // fallback to prototype chain
  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];
  if (false) {
    warn(
      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,
      options
    );
  }
  return res
}

/*  */

function validateProp (
  key,
  propOptions,
  propsData,
  vm
) {
  var prop = propOptions[key];
  var absent = !hasOwn(propsData, key);
  var value = propsData[key];
  // handle boolean props
  if (isType(Boolean, prop.type)) {
    if (absent && !hasOwn(prop, 'default')) {
      value = false;
    } else if (!isType(String, prop.type) && (value === '' || value === hyphenate(key))) {
      value = true;
    }
  }
  // check default value
  if (value === undefined) {
    value = getPropDefaultValue(vm, prop, key);
    // since the default value is a fresh copy,
    // make sure to observe it.
    var prevShouldConvert = observerState.shouldConvert;
    observerState.shouldConvert = true;
    observe(value);
    observerState.shouldConvert = prevShouldConvert;
  }
  if (false) {
    assertProp(prop, key, value, vm, absent);
  }
  return value
}

/**
 * Get the default value of a prop.
 */
function getPropDefaultValue (vm, prop, key) {
  // no default, return undefined
  if (!hasOwn(prop, 'default')) {
    return undefined
  }
  var def = prop.default;
  // warn against non-factory defaults for Object & Array
  if (false) {
    warn(
      'Invalid default value for prop "' + key + '": ' +
      'Props with type Object/Array must use a factory function ' +
      'to return the default value.',
      vm
    );
  }
  // the raw prop value was also undefined from previous render,
  // return previous default value to avoid unnecessary watcher trigger
  if (vm && vm.$options.propsData &&
    vm.$options.propsData[key] === undefined &&
    vm._props[key] !== undefined) {
    return vm._props[key]
  }
  // call factory function for non-Function types
  // a value is Function if its prototype is function even across different execution context
  return typeof def === 'function' && getType(prop.type) !== 'Function'
    ? def.call(vm)
    : def
}

/**
 * Assert whether a prop is valid.
 */
function assertProp (
  prop,
  name,
  value,
  vm,
  absent
) {
  if (prop.required && absent) {
    warn(
      'Missing required prop: "' + name + '"',
      vm
    );
    return
  }
  if (value == null && !prop.required) {
    return
  }
  var type = prop.type;
  var valid = !type || type === true;
  var expectedTypes = [];
  if (type) {
    if (!Array.isArray(type)) {
      type = [type];
    }
    for (var i = 0; i < type.length && !valid; i++) {
      var assertedType = assertType(value, type[i]);
      expectedTypes.push(assertedType.expectedType || '');
      valid = assertedType.valid;
    }
  }
  if (!valid) {
    warn(
      'Invalid prop: type check failed for prop "' + name + '".' +
      ' Expected ' + expectedTypes.map(capitalize).join(', ') +
      ', got ' + Object.prototype.toString.call(value).slice(8, -1) + '.',
      vm
    );
    return
  }
  var validator = prop.validator;
  if (validator) {
    if (!validator(value)) {
      warn(
        'Invalid prop: custom validator check failed for prop "' + name + '".',
        vm
      );
    }
  }
}

var simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;

function assertType (value, type) {
  var valid;
  var expectedType = getType(type);
  if (simpleCheckRE.test(expectedType)) {
    valid = typeof value === expectedType.toLowerCase();
  } else if (expectedType === 'Object') {
    valid = isPlainObject(value);
  } else if (expectedType === 'Array') {
    valid = Array.isArray(value);
  } else {
    valid = value instanceof type;
  }
  return {
    valid: valid,
    expectedType: expectedType
  }
}

/**
 * Use function string name to check built-in types,
 * because a simple equality check will fail when running
 * across different vms / iframes.
 */
function getType (fn) {
  var match = fn && fn.toString().match(/^\s*function (\w+)/);
  return match ? match[1] : ''
}

function isType (type, fn) {
  if (!Array.isArray(fn)) {
    return getType(fn) === getType(type)
  }
  for (var i = 0, len = fn.length; i < len; i++) {
    if (getType(fn[i]) === getType(type)) {
      return true
    }
  }
  /* istanbul ignore next */
  return false
}

var mark;
var measure;

if (false) {
  var perf = inBrowser && window.performance;
  /* istanbul ignore if */
  if (
    perf &&
    perf.mark &&
    perf.measure &&
    perf.clearMarks &&
    perf.clearMeasures
  ) {
    mark = function (tag) { return perf.mark(tag); };
    measure = function (name, startTag, endTag) {
      perf.measure(name, startTag, endTag);
      perf.clearMarks(startTag);
      perf.clearMarks(endTag);
      perf.clearMeasures(name);
    };
  }
}

/* not type checking this file because flow doesn't play well with Proxy */

var initProxy;

if (false) {
  var allowedGlobals = makeMap(
    'Infinity,undefined,NaN,isFinite,isNaN,' +
    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +
    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +
    'require' // for Webpack/Browserify
  );

  var warnNonPresent = function (target, key) {
    warn(
      "Property or method \"" + key + "\" is not defined on the instance but " +
      "referenced during render. Make sure to declare reactive data " +
      "properties in the data option.",
      target
    );
  };

  var hasProxy =
    typeof Proxy !== 'undefined' &&
    Proxy.toString().match(/native code/);

  if (hasProxy) {
    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta');
    config.keyCodes = new Proxy(config.keyCodes, {
      set: function set (target, key, value) {
        if (isBuiltInModifier(key)) {
          warn(("Avoid overwriting built-in modifier in config.keyCodes: ." + key));
          return false
        } else {
          target[key] = value;
          return true
        }
      }
    });
  }

  var hasHandler = {
    has: function has (target, key) {
      var has = key in target;
      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';
      if (!has && !isAllowed) {
        warnNonPresent(target, key);
      }
      return has || !isAllowed
    }
  };

  var getHandler = {
    get: function get (target, key) {
      if (typeof key === 'string' && !(key in target)) {
        warnNonPresent(target, key);
      }
      return target[key]
    }
  };

  initProxy = function initProxy (vm) {
    if (hasProxy) {
      // determine which proxy handler to use
      var options = vm.$options;
      var handlers = options.render && options.render._withStripped
        ? getHandler
        : hasHandler;
      vm._renderProxy = new Proxy(vm, handlers);
    } else {
      vm._renderProxy = vm;
    }
  };
}

/*  */

var VNode = function VNode (
  tag,
  data,
  children,
  text,
  elm,
  context,
  componentOptions
) {
  this.tag = tag;
  this.data = data;
  this.children = children;
  this.text = text;
  this.elm = elm;
  this.ns = undefined;
  this.context = context;
  this.functionalContext = undefined;
  this.key = data && data.key;
  this.componentOptions = componentOptions;
  this.componentInstance = undefined;
  this.parent = undefined;
  this.raw = false;
  this.isStatic = false;
  this.isRootInsert = true;
  this.isComment = false;
  this.isCloned = false;
  this.isOnce = false;
};

var prototypeAccessors = { child: {} };

// DEPRECATED: alias for componentInstance for backwards compat.
/* istanbul ignore next */
prototypeAccessors.child.get = function () {
  return this.componentInstance
};

Object.defineProperties( VNode.prototype, prototypeAccessors );

var createEmptyVNode = function () {
  var node = new VNode();
  node.text = '';
  node.isComment = true;
  return node
};

function createTextVNode (val) {
  return new VNode(undefined, undefined, undefined, String(val))
}

// optimized shallow clone
// used for static nodes and slot nodes because they may be reused across
// multiple renders, cloning them avoids errors when DOM manipulations rely
// on their elm reference.
function cloneVNode (vnode) {
  var cloned = new VNode(
    vnode.tag,
    vnode.data,
    vnode.children,
    vnode.text,
    vnode.elm,
    vnode.context,
    vnode.componentOptions
  );
  cloned.ns = vnode.ns;
  cloned.isStatic = vnode.isStatic;
  cloned.key = vnode.key;
  cloned.isCloned = true;
  return cloned
}

function cloneVNodes (vnodes) {
  var len = vnodes.length;
  var res = new Array(len);
  for (var i = 0; i < len; i++) {
    res[i] = cloneVNode(vnodes[i]);
  }
  return res
}

/*  */

var normalizeEvent = cached(function (name) {
  var passive = name.charAt(0) === '&';
  name = passive ? name.slice(1) : name;
  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first
  name = once$$1 ? name.slice(1) : name;
  var capture = name.charAt(0) === '!';
  name = capture ? name.slice(1) : name;
  return {
    name: name,
    once: once$$1,
    capture: capture,
    passive: passive
  }
});

function createFnInvoker (fns) {
  function invoker () {
    var arguments$1 = arguments;

    var fns = invoker.fns;
    if (Array.isArray(fns)) {
      for (var i = 0; i < fns.length; i++) {
        fns[i].apply(null, arguments$1);
      }
    } else {
      // return handler return value for single handlers
      return fns.apply(null, arguments)
    }
  }
  invoker.fns = fns;
  return invoker
}

function updateListeners (
  on,
  oldOn,
  add,
  remove$$1,
  vm
) {
  var name, cur, old, event;
  for (name in on) {
    cur = on[name];
    old = oldOn[name];
    event = normalizeEvent(name);
    if (isUndef(cur)) {
      "production" !== 'production' && warn(
        "Invalid handler for event \"" + (event.name) + "\": got " + String(cur),
        vm
      );
    } else if (isUndef(old)) {
      if (isUndef(cur.fns)) {
        cur = on[name] = createFnInvoker(cur);
      }
      add(event.name, cur, event.once, event.capture, event.passive);
    } else if (cur !== old) {
      old.fns = cur;
      on[name] = old;
    }
  }
  for (name in oldOn) {
    if (isUndef(on[name])) {
      event = normalizeEvent(name);
      remove$$1(event.name, oldOn[name], event.capture);
    }
  }
}

/*  */

function mergeVNodeHook (def, hookKey, hook) {
  var invoker;
  var oldHook = def[hookKey];

  function wrappedHook () {
    hook.apply(this, arguments);
    // important: remove merged hook to ensure it's called only once
    // and prevent memory leak
    remove(invoker.fns, wrappedHook);
  }

  if (isUndef(oldHook)) {
    // no existing hook
    invoker = createFnInvoker([wrappedHook]);
  } else {
    /* istanbul ignore if */
    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {
      // already a merged invoker
      invoker = oldHook;
      invoker.fns.push(wrappedHook);
    } else {
      // existing plain hook
      invoker = createFnInvoker([oldHook, wrappedHook]);
    }
  }

  invoker.merged = true;
  def[hookKey] = invoker;
}

/*  */

function extractPropsFromVNodeData (
  data,
  Ctor,
  tag
) {
  // we are only extracting raw values here.
  // validation and default values are handled in the child
  // component itself.
  var propOptions = Ctor.options.props;
  if (isUndef(propOptions)) {
    return
  }
  var res = {};
  var attrs = data.attrs;
  var props = data.props;
  if (isDef(attrs) || isDef(props)) {
    for (var key in propOptions) {
      var altKey = hyphenate(key);
      if (false) {
        var keyInLowerCase = key.toLowerCase();
        if (
          key !== keyInLowerCase &&
          attrs && hasOwn(attrs, keyInLowerCase)
        ) {
          tip(
            "Prop \"" + keyInLowerCase + "\" is passed to component " +
            (formatComponentName(tag || Ctor)) + ", but the declared prop name is" +
            " \"" + key + "\". " +
            "Note that HTML attributes are case-insensitive and camelCased " +
            "props need to use their kebab-case equivalents when using in-DOM " +
            "templates. You should probably use \"" + altKey + "\" instead of \"" + key + "\"."
          );
        }
      }
      checkProp(res, props, key, altKey, true) ||
      checkProp(res, attrs, key, altKey, false);
    }
  }
  return res
}

function checkProp (
  res,
  hash,
  key,
  altKey,
  preserve
) {
  if (isDef(hash)) {
    if (hasOwn(hash, key)) {
      res[key] = hash[key];
      if (!preserve) {
        delete hash[key];
      }
      return true
    } else if (hasOwn(hash, altKey)) {
      res[key] = hash[altKey];
      if (!preserve) {
        delete hash[altKey];
      }
      return true
    }
  }
  return false
}

/*  */

// The template compiler attempts to minimize the need for normalization by
// statically analyzing the template at compile time.
//
// For plain HTML markup, normalization can be completely skipped because the
// generated render function is guaranteed to return Array<VNode>. There are
// two cases where extra normalization is needed:

// 1. When the children contains components - because a functional component
// may return an Array instead of a single root. In this case, just a simple
// normalization is needed - if any child is an Array, we flatten the whole
// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep
// because functional components already normalize their own children.
function simpleNormalizeChildren (children) {
  for (var i = 0; i < children.length; i++) {
    if (Array.isArray(children[i])) {
      return Array.prototype.concat.apply([], children)
    }
  }
  return children
}

// 2. When the children contains constructs that always generated nested Arrays,
// e.g. <template>, <slot>, v-for, or when the children is provided by user
// with hand-written render functions / JSX. In such cases a full normalization
// is needed to cater to all possible types of children values.
function normalizeChildren (children) {
  return isPrimitive(children)
    ? [createTextVNode(children)]
    : Array.isArray(children)
      ? normalizeArrayChildren(children)
      : undefined
}

function normalizeArrayChildren (children, nestedIndex) {
  var res = [];
  var i, c, last;
  for (i = 0; i < children.length; i++) {
    c = children[i];
    if (isUndef(c) || typeof c === 'boolean') { continue }
    last = res[res.length - 1];
    //  nested
    if (Array.isArray(c)) {
      res.push.apply(res, normalizeArrayChildren(c, ((nestedIndex || '') + "_" + i)));
    } else if (isPrimitive(c)) {
      if (isDef(last) && isDef(last.text)) {
        (last).text += String(c);
      } else if (c !== '') {
        // convert primitive to vnode
        res.push(createTextVNode(c));
      }
    } else {
      if (isDef(c.text) && isDef(last) && isDef(last.text)) {
        res[res.length - 1] = createTextVNode(last.text + c.text);
      } else {
        // default key for nested array children (likely generated by v-for)
        if (isDef(c.tag) && isUndef(c.key) && isDef(nestedIndex)) {
          c.key = "__vlist" + ((nestedIndex)) + "_" + i + "__";
        }
        res.push(c);
      }
    }
  }
  return res
}

/*  */

function ensureCtor (comp, base) {
  return isObject(comp)
    ? base.extend(comp)
    : comp
}

function resolveAsyncComponent (
  factory,
  baseCtor,
  context
) {
  if (isTrue(factory.error) && isDef(factory.errorComp)) {
    return factory.errorComp
  }

  if (isDef(factory.resolved)) {
    return factory.resolved
  }

  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {
    return factory.loadingComp
  }

  if (isDef(factory.contexts)) {
    // already pending
    factory.contexts.push(context);
  } else {
    var contexts = factory.contexts = [context];
    var sync = true;

    var forceRender = function () {
      for (var i = 0, l = contexts.length; i < l; i++) {
        contexts[i].$forceUpdate();
      }
    };

    var resolve = once(function (res) {
      // cache resolved
      factory.resolved = ensureCtor(res, baseCtor);
      // invoke callbacks only if this is not a synchronous resolve
      // (async resolves are shimmed as synchronous during SSR)
      if (!sync) {
        forceRender();
      }
    });

    var reject = once(function (reason) {
      "production" !== 'production' && warn(
        "Failed to resolve async component: " + (String(factory)) +
        (reason ? ("\nReason: " + reason) : '')
      );
      if (isDef(factory.errorComp)) {
        factory.error = true;
        forceRender();
      }
    });

    var res = factory(resolve, reject);

    if (isObject(res)) {
      if (typeof res.then === 'function') {
        // () => Promise
        if (isUndef(factory.resolved)) {
          res.then(resolve, reject);
        }
      } else if (isDef(res.component) && typeof res.component.then === 'function') {
        res.component.then(resolve, reject);

        if (isDef(res.error)) {
          factory.errorComp = ensureCtor(res.error, baseCtor);
        }

        if (isDef(res.loading)) {
          factory.loadingComp = ensureCtor(res.loading, baseCtor);
          if (res.delay === 0) {
            factory.loading = true;
          } else {
            setTimeout(function () {
              if (isUndef(factory.resolved) && isUndef(factory.error)) {
                factory.loading = true;
                forceRender();
              }
            }, res.delay || 200);
          }
        }

        if (isDef(res.timeout)) {
          setTimeout(function () {
            reject(
               false
                ? ("timeout (" + (res.timeout) + "ms)")
                : null
            );
          }, res.timeout);
        }
      }
    }

    sync = false;
    // return in case resolved synchronously
    return factory.loading
      ? factory.loadingComp
      : factory.resolved
  }
}

/*  */

function getFirstComponentChild (children) {
  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      var c = children[i];
      if (isDef(c) && isDef(c.componentOptions)) {
        return c
      }
    }
  }
}

/*  */

/*  */

function initEvents (vm) {
  vm._events = Object.create(null);
  vm._hasHookEvent = false;
  // init parent attached events
  var listeners = vm.$options._parentListeners;
  if (listeners) {
    updateComponentListeners(vm, listeners);
  }
}

var target;

function add (event, fn, once$$1) {
  if (once$$1) {
    target.$once(event, fn);
  } else {
    target.$on(event, fn);
  }
}

function remove$1 (event, fn) {
  target.$off(event, fn);
}

function updateComponentListeners (
  vm,
  listeners,
  oldListeners
) {
  target = vm;
  updateListeners(listeners, oldListeners || {}, add, remove$1, vm);
}

function eventsMixin (Vue) {
  var hookRE = /^hook:/;
  Vue.prototype.$on = function (event, fn) {
    var this$1 = this;

    var vm = this;
    if (Array.isArray(event)) {
      for (var i = 0, l = event.length; i < l; i++) {
        this$1.$on(event[i], fn);
      }
    } else {
      (vm._events[event] || (vm._events[event] = [])).push(fn);
      // optimize hook:event cost by using a boolean flag marked at registration
      // instead of a hash lookup
      if (hookRE.test(event)) {
        vm._hasHookEvent = true;
      }
    }
    return vm
  };

  Vue.prototype.$once = function (event, fn) {
    var vm = this;
    function on () {
      vm.$off(event, on);
      fn.apply(vm, arguments);
    }
    on.fn = fn;
    vm.$on(event, on);
    return vm
  };

  Vue.prototype.$off = function (event, fn) {
    var this$1 = this;

    var vm = this;
    // all
    if (!arguments.length) {
      vm._events = Object.create(null);
      return vm
    }
    // array of events
    if (Array.isArray(event)) {
      for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {
        this$1.$off(event[i$1], fn);
      }
      return vm
    }
    // specific event
    var cbs = vm._events[event];
    if (!cbs) {
      return vm
    }
    if (arguments.length === 1) {
      vm._events[event] = null;
      return vm
    }
    // specific handler
    var cb;
    var i = cbs.length;
    while (i--) {
      cb = cbs[i];
      if (cb === fn || cb.fn === fn) {
        cbs.splice(i, 1);
        break
      }
    }
    return vm
  };

  Vue.prototype.$emit = function (event) {
    var vm = this;
    if (false) {
      var lowerCaseEvent = event.toLowerCase();
      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {
        tip(
          "Event \"" + lowerCaseEvent + "\" is emitted in component " +
          (formatComponentName(vm)) + " but the handler is registered for \"" + event + "\". " +
          "Note that HTML attributes are case-insensitive and you cannot use " +
          "v-on to listen to camelCase events when using in-DOM templates. " +
          "You should probably use \"" + (hyphenate(event)) + "\" instead of \"" + event + "\"."
        );
      }
    }
    var cbs = vm._events[event];
    if (cbs) {
      cbs = cbs.length > 1 ? toArray(cbs) : cbs;
      var args = toArray(arguments, 1);
      for (var i = 0, l = cbs.length; i < l; i++) {
        cbs[i].apply(vm, args);
      }
    }
    return vm
  };
}

/*  */

/**
 * Runtime helper for resolving raw children VNodes into a slot object.
 */
function resolveSlots (
  children,
  context
) {
  var slots = {};
  if (!children) {
    return slots
  }
  var defaultSlot = [];
  for (var i = 0, l = children.length; i < l; i++) {
    var child = children[i];
    // named slots should only be respected if the vnode was rendered in the
    // same context.
    if ((child.context === context || child.functionalContext === context) &&
        child.data && child.data.slot != null) {
      var name = child.data.slot;
      var slot = (slots[name] || (slots[name] = []));
      if (child.tag === 'template') {
        slot.push.apply(slot, child.children);
      } else {
        slot.push(child);
      }
    } else {
      defaultSlot.push(child);
    }
  }
  // ignore whitespace
  if (!defaultSlot.every(isWhitespace)) {
    slots.default = defaultSlot;
  }
  return slots
}

function isWhitespace (node) {
  return node.isComment || node.text === ' '
}

function resolveScopedSlots (
  fns
) {
  var res = {};
  for (var i = 0; i < fns.length; i++) {
    res[fns[i][0]] = fns[i][1];
  }
  return res
}

/*  */

var activeInstance = null;

function initLifecycle (vm) {
  var options = vm.$options;

  // locate first non-abstract parent
  var parent = options.parent;
  if (parent && !options.abstract) {
    while (parent.$options.abstract && parent.$parent) {
      parent = parent.$parent;
    }
    parent.$children.push(vm);
  }

  vm.$parent = parent;
  vm.$root = parent ? parent.$root : vm;

  vm.$children = [];
  vm.$refs = {};

  vm._watcher = null;
  vm._inactive = null;
  vm._directInactive = false;
  vm._isMounted = false;
  vm._isDestroyed = false;
  vm._isBeingDestroyed = false;
}

function lifecycleMixin (Vue) {
  Vue.prototype._update = function (vnode, hydrating) {
    var vm = this;
    if (vm._isMounted) {
      callHook(vm, 'beforeUpdate');
    }
    var prevEl = vm.$el;
    var prevVnode = vm._vnode;
    var prevActiveInstance = activeInstance;
    activeInstance = vm;
    vm._vnode = vnode;
    // Vue.prototype.__patch__ is injected in entry points
    // based on the rendering backend used.
    if (!prevVnode) {
      // initial render
      vm.$el = vm.__patch__(
        vm.$el, vnode, hydrating, false /* removeOnly */,
        vm.$options._parentElm,
        vm.$options._refElm
      );
    } else {
      // updates
      vm.$el = vm.__patch__(prevVnode, vnode);
    }
    activeInstance = prevActiveInstance;
    // update __vue__ reference
    if (prevEl) {
      prevEl.__vue__ = null;
    }
    if (vm.$el) {
      vm.$el.__vue__ = vm;
    }
    // if parent is an HOC, update its $el as well
    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {
      vm.$parent.$el = vm.$el;
    }
    // updated hook is called by the scheduler to ensure that children are
    // updated in a parent's updated hook.
  };

  Vue.prototype.$forceUpdate = function () {
    var vm = this;
    if (vm._watcher) {
      vm._watcher.update();
    }
  };

  Vue.prototype.$destroy = function () {
    var vm = this;
    if (vm._isBeingDestroyed) {
      return
    }
    callHook(vm, 'beforeDestroy');
    vm._isBeingDestroyed = true;
    // remove self from parent
    var parent = vm.$parent;
    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {
      remove(parent.$children, vm);
    }
    // teardown watchers
    if (vm._watcher) {
      vm._watcher.teardown();
    }
    var i = vm._watchers.length;
    while (i--) {
      vm._watchers[i].teardown();
    }
    // remove reference from data ob
    // frozen object may not have observer.
    if (vm._data.__ob__) {
      vm._data.__ob__.vmCount--;
    }
    // call the last hook...
    vm._isDestroyed = true;
    // invoke destroy hooks on current rendered tree
    vm.__patch__(vm._vnode, null);
    // fire destroyed hook
    callHook(vm, 'destroyed');
    // turn off all instance listeners.
    vm.$off();
    // remove __vue__ reference
    if (vm.$el) {
      vm.$el.__vue__ = null;
    }
    // remove reference to DOM nodes (prevents leak)
    vm.$options._parentElm = vm.$options._refElm = null;
  };
}

function mountComponent (
  vm,
  el,
  hydrating
) {
  vm.$el = el;
  if (!vm.$options.render) {
    vm.$options.render = createEmptyVNode;
    if (false) {
      /* istanbul ignore if */
      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||
        vm.$options.el || el) {
        warn(
          'You are using the runtime-only build of Vue where the template ' +
          'compiler is not available. Either pre-compile the templates into ' +
          'render functions, or use the compiler-included build.',
          vm
        );
      } else {
        warn(
          'Failed to mount component: template or render function not defined.',
          vm
        );
      }
    }
  }
  callHook(vm, 'beforeMount');

  var updateComponent;
  /* istanbul ignore if */
  if (false) {
    updateComponent = function () {
      var name = vm._name;
      var id = vm._uid;
      var startTag = "vue-perf-start:" + id;
      var endTag = "vue-perf-end:" + id;

      mark(startTag);
      var vnode = vm._render();
      mark(endTag);
      measure((name + " render"), startTag, endTag);

      mark(startTag);
      vm._update(vnode, hydrating);
      mark(endTag);
      measure((name + " patch"), startTag, endTag);
    };
  } else {
    updateComponent = function () {
      vm._update(vm._render(), hydrating);
    };
  }

  vm._watcher = new Watcher(vm, updateComponent, noop);
  hydrating = false;

  // manually mounted instance, call mounted on self
  // mounted is called for render-created child components in its inserted hook
  if (vm.$vnode == null) {
    vm._isMounted = true;
    callHook(vm, 'mounted');
  }
  return vm
}

function updateChildComponent (
  vm,
  propsData,
  listeners,
  parentVnode,
  renderChildren
) {
  // determine whether component has slot children
  // we need to do this before overwriting $options._renderChildren
  var hasChildren = !!(
    renderChildren ||               // has new static slots
    vm.$options._renderChildren ||  // has old static slots
    parentVnode.data.scopedSlots || // has new scoped slots
    vm.$scopedSlots !== emptyObject // has old scoped slots
  );

  vm.$options._parentVnode = parentVnode;
  vm.$vnode = parentVnode; // update vm's placeholder node without re-render
  if (vm._vnode) { // update child tree's parent
    vm._vnode.parent = parentVnode;
  }
  vm.$options._renderChildren = renderChildren;

  // update props
  if (propsData && vm.$options.props) {
    observerState.shouldConvert = false;
    if (false) {
      observerState.isSettingProps = true;
    }
    var props = vm._props;
    var propKeys = vm.$options._propKeys || [];
    for (var i = 0; i < propKeys.length; i++) {
      var key = propKeys[i];
      props[key] = validateProp(key, vm.$options.props, propsData, vm);
    }
    observerState.shouldConvert = true;
    if (false) {
      observerState.isSettingProps = false;
    }
    // keep a copy of raw propsData
    vm.$options.propsData = propsData;
  }
  // update listeners
  if (listeners) {
    var oldListeners = vm.$options._parentListeners;
    vm.$options._parentListeners = listeners;
    updateComponentListeners(vm, listeners, oldListeners);
  }
  // resolve slots + force update if has children
  if (hasChildren) {
    vm.$slots = resolveSlots(renderChildren, parentVnode.context);
    vm.$forceUpdate();
  }
}

function isInInactiveTree (vm) {
  while (vm && (vm = vm.$parent)) {
    if (vm._inactive) { return true }
  }
  return false
}

function activateChildComponent (vm, direct) {
  if (direct) {
    vm._directInactive = false;
    if (isInInactiveTree(vm)) {
      return
    }
  } else if (vm._directInactive) {
    return
  }
  if (vm._inactive || vm._inactive === null) {
    vm._inactive = false;
    for (var i = 0; i < vm.$children.length; i++) {
      activateChildComponent(vm.$children[i]);
    }
    callHook(vm, 'activated');
  }
}

function deactivateChildComponent (vm, direct) {
  if (direct) {
    vm._directInactive = true;
    if (isInInactiveTree(vm)) {
      return
    }
  }
  if (!vm._inactive) {
    vm._inactive = true;
    for (var i = 0; i < vm.$children.length; i++) {
      deactivateChildComponent(vm.$children[i]);
    }
    callHook(vm, 'deactivated');
  }
}

function callHook (vm, hook) {
  var handlers = vm.$options[hook];
  if (handlers) {
    for (var i = 0, j = handlers.length; i < j; i++) {
      try {
        handlers[i].call(vm);
      } catch (e) {
        handleError(e, vm, (hook + " hook"));
      }
    }
  }
  if (vm._hasHookEvent) {
    vm.$emit('hook:' + hook);
  }
}

/*  */


var MAX_UPDATE_COUNT = 100;

var queue = [];
var activatedChildren = [];
var has = {};
var circular = {};
var waiting = false;
var flushing = false;
var index = 0;

/**
 * Reset the scheduler's state.
 */
function resetSchedulerState () {
  queue.length = activatedChildren.length = 0;
  has = {};
  if (false) {
    circular = {};
  }
  waiting = flushing = false;
}

/**
 * Flush both queues and run the watchers.
 */
function flushSchedulerQueue () {
  flushing = true;
  var watcher, id;

  // Sort queue before flush.
  // This ensures that:
  // 1. Components are updated from parent to child. (because parent is always
  //    created before the child)
  // 2. A component's user watchers are run before its render watcher (because
  //    user watchers are created before the render watcher)
  // 3. If a component is destroyed during a parent component's watcher run,
  //    its watchers can be skipped.
  queue.sort(function (a, b) { return a.id - b.id; });

  // do not cache length because more watchers might be pushed
  // as we run existing watchers
  for (index = 0; index < queue.length; index++) {
    watcher = queue[index];
    id = watcher.id;
    has[id] = null;
    watcher.run();
    // in dev build, check and stop circular updates.
    if (false) {
      circular[id] = (circular[id] || 0) + 1;
      if (circular[id] > MAX_UPDATE_COUNT) {
        warn(
          'You may have an infinite update loop ' + (
            watcher.user
              ? ("in watcher with expression \"" + (watcher.expression) + "\"")
              : "in a component render function."
          ),
          watcher.vm
        );
        break
      }
    }
  }

  // keep copies of post queues before resetting state
  var activatedQueue = activatedChildren.slice();
  var updatedQueue = queue.slice();

  resetSchedulerState();

  // call component updated and activated hooks
  callActivatedHooks(activatedQueue);
  callUpdateHooks(updatedQueue);

  // devtool hook
  /* istanbul ignore if */
  if (devtools && config.devtools) {
    devtools.emit('flush');
  }
}

function callUpdateHooks (queue) {
  var i = queue.length;
  while (i--) {
    var watcher = queue[i];
    var vm = watcher.vm;
    if (vm._watcher === watcher && vm._isMounted) {
      callHook(vm, 'updated');
    }
  }
}

/**
 * Queue a kept-alive component that was activated during patch.
 * The queue will be processed after the entire tree has been patched.
 */
function queueActivatedComponent (vm) {
  // setting _inactive to false here so that a render function can
  // rely on checking whether it's in an inactive tree (e.g. router-view)
  vm._inactive = false;
  activatedChildren.push(vm);
}

function callActivatedHooks (queue) {
  for (var i = 0; i < queue.length; i++) {
    queue[i]._inactive = true;
    activateChildComponent(queue[i], true /* true */);
  }
}

/**
 * Push a watcher into the watcher queue.
 * Jobs with duplicate IDs will be skipped unless it's
 * pushed when the queue is being flushed.
 */
function queueWatcher (watcher) {
  var id = watcher.id;
  if (has[id] == null) {
    has[id] = true;
    if (!flushing) {
      queue.push(watcher);
    } else {
      // if already flushing, splice the watcher based on its id
      // if already past its id, it will be run next immediately.
      var i = queue.length - 1;
      while (i >= 0 && queue[i].id > watcher.id) {
        i--;
      }
      queue.splice(Math.max(i, index) + 1, 0, watcher);
    }
    // queue the flush
    if (!waiting) {
      waiting = true;
      nextTick(flushSchedulerQueue);
    }
  }
}

/*  */

var uid$2 = 0;

/**
 * A watcher parses an expression, collects dependencies,
 * and fires callback when the expression value changes.
 * This is used for both the $watch() api and directives.
 */
var Watcher = function Watcher (
  vm,
  expOrFn,
  cb,
  options
) {
  this.vm = vm;
  vm._watchers.push(this);
  // options
  if (options) {
    this.deep = !!options.deep;
    this.user = !!options.user;
    this.lazy = !!options.lazy;
    this.sync = !!options.sync;
  } else {
    this.deep = this.user = this.lazy = this.sync = false;
  }
  this.cb = cb;
  this.id = ++uid$2; // uid for batching
  this.active = true;
  this.dirty = this.lazy; // for lazy watchers
  this.deps = [];
  this.newDeps = [];
  this.depIds = new _Set();
  this.newDepIds = new _Set();
  this.expression =  false
    ? expOrFn.toString()
    : '';
  // parse expression for getter
  if (typeof expOrFn === 'function') {
    this.getter = expOrFn;
  } else {
    this.getter = parsePath(expOrFn);
    if (!this.getter) {
      this.getter = function () {};
      "production" !== 'production' && warn(
        "Failed watching path: \"" + expOrFn + "\" " +
        'Watcher only accepts simple dot-delimited paths. ' +
        'For full control, use a function instead.',
        vm
      );
    }
  }
  this.value = this.lazy
    ? undefined
    : this.get();
};

/**
 * Evaluate the getter, and re-collect dependencies.
 */
Watcher.prototype.get = function get () {
  pushTarget(this);
  var value;
  var vm = this.vm;
  if (this.user) {
    try {
      value = this.getter.call(vm, vm);
    } catch (e) {
      handleError(e, vm, ("getter for watcher \"" + (this.expression) + "\""));
    }
  } else {
    value = this.getter.call(vm, vm);
  }
  // "touch" every property so they are all tracked as
  // dependencies for deep watching
  if (this.deep) {
    traverse(value);
  }
  popTarget();
  this.cleanupDeps();
  return value
};

/**
 * Add a dependency to this directive.
 */
Watcher.prototype.addDep = function addDep (dep) {
  var id = dep.id;
  if (!this.newDepIds.has(id)) {
    this.newDepIds.add(id);
    this.newDeps.push(dep);
    if (!this.depIds.has(id)) {
      dep.addSub(this);
    }
  }
};

/**
 * Clean up for dependency collection.
 */
Watcher.prototype.cleanupDeps = function cleanupDeps () {
    var this$1 = this;

  var i = this.deps.length;
  while (i--) {
    var dep = this$1.deps[i];
    if (!this$1.newDepIds.has(dep.id)) {
      dep.removeSub(this$1);
    }
  }
  var tmp = this.depIds;
  this.depIds = this.newDepIds;
  this.newDepIds = tmp;
  this.newDepIds.clear();
  tmp = this.deps;
  this.deps = this.newDeps;
  this.newDeps = tmp;
  this.newDeps.length = 0;
};

/**
 * Subscriber interface.
 * Will be called when a dependency changes.
 */
Watcher.prototype.update = function update () {
  /* istanbul ignore else */
  if (this.lazy) {
    this.dirty = true;
  } else if (this.sync) {
    this.run();
  } else {
    queueWatcher(this);
  }
};

/**
 * Scheduler job interface.
 * Will be called by the scheduler.
 */
Watcher.prototype.run = function run () {
  if (this.active) {
    var value = this.get();
    if (
      value !== this.value ||
      // Deep watchers and watchers on Object/Arrays should fire even
      // when the value is the same, because the value may
      // have mutated.
      isObject(value) ||
      this.deep
    ) {
      // set new value
      var oldValue = this.value;
      this.value = value;
      if (this.user) {
        try {
          this.cb.call(this.vm, value, oldValue);
        } catch (e) {
          handleError(e, this.vm, ("callback for watcher \"" + (this.expression) + "\""));
        }
      } else {
        this.cb.call(this.vm, value, oldValue);
      }
    }
  }
};

/**
 * Evaluate the value of the watcher.
 * This only gets called for lazy watchers.
 */
Watcher.prototype.evaluate = function evaluate () {
  this.value = this.get();
  this.dirty = false;
};

/**
 * Depend on all deps collected by this watcher.
 */
Watcher.prototype.depend = function depend () {
    var this$1 = this;

  var i = this.deps.length;
  while (i--) {
    this$1.deps[i].depend();
  }
};

/**
 * Remove self from all dependencies' subscriber list.
 */
Watcher.prototype.teardown = function teardown () {
    var this$1 = this;

  if (this.active) {
    // remove self from vm's watcher list
    // this is a somewhat expensive operation so we skip it
    // if the vm is being destroyed.
    if (!this.vm._isBeingDestroyed) {
      remove(this.vm._watchers, this);
    }
    var i = this.deps.length;
    while (i--) {
      this$1.deps[i].removeSub(this$1);
    }
    this.active = false;
  }
};

/**
 * Recursively traverse an object to evoke all converted
 * getters, so that every nested property inside the object
 * is collected as a "deep" dependency.
 */
var seenObjects = new _Set();
function traverse (val) {
  seenObjects.clear();
  _traverse(val, seenObjects);
}

function _traverse (val, seen) {
  var i, keys;
  var isA = Array.isArray(val);
  if ((!isA && !isObject(val)) || !Object.isExtensible(val)) {
    return
  }
  if (val.__ob__) {
    var depId = val.__ob__.dep.id;
    if (seen.has(depId)) {
      return
    }
    seen.add(depId);
  }
  if (isA) {
    i = val.length;
    while (i--) { _traverse(val[i], seen); }
  } else {
    keys = Object.keys(val);
    i = keys.length;
    while (i--) { _traverse(val[keys[i]], seen); }
  }
}

/*  */

var sharedPropertyDefinition = {
  enumerable: true,
  configurable: true,
  get: noop,
  set: noop
};

function proxy (target, sourceKey, key) {
  sharedPropertyDefinition.get = function proxyGetter () {
    return this[sourceKey][key]
  };
  sharedPropertyDefinition.set = function proxySetter (val) {
    this[sourceKey][key] = val;
  };
  Object.defineProperty(target, key, sharedPropertyDefinition);
}

function initState (vm) {
  vm._watchers = [];
  var opts = vm.$options;
  if (opts.props) { initProps(vm, opts.props); }
  if (opts.methods) { initMethods(vm, opts.methods); }
  if (opts.data) {
    initData(vm);
  } else {
    observe(vm._data = {}, true /* asRootData */);
  }
  if (opts.computed) { initComputed(vm, opts.computed); }
  if (opts.watch) { initWatch(vm, opts.watch); }
}

var isReservedProp = {
  key: 1,
  ref: 1,
  slot: 1
};

function initProps (vm, propsOptions) {
  var propsData = vm.$options.propsData || {};
  var props = vm._props = {};
  // cache prop keys so that future props updates can iterate using Array
  // instead of dynamic object key enumeration.
  var keys = vm.$options._propKeys = [];
  var isRoot = !vm.$parent;
  // root instance props should be converted
  observerState.shouldConvert = isRoot;
  var loop = function ( key ) {
    keys.push(key);
    var value = validateProp(key, propsOptions, propsData, vm);
    /* istanbul ignore else */
    if (false) {
      if (isReservedProp[key] || config.isReservedAttr(key)) {
        warn(
          ("\"" + key + "\" is a reserved attribute and cannot be used as component prop."),
          vm
        );
      }
      defineReactive$$1(props, key, value, function () {
        if (vm.$parent && !observerState.isSettingProps) {
          warn(
            "Avoid mutating a prop directly since the value will be " +
            "overwritten whenever the parent component re-renders. " +
            "Instead, use a data or computed property based on the prop's " +
            "value. Prop being mutated: \"" + key + "\"",
            vm
          );
        }
      });
    } else {
      defineReactive$$1(props, key, value);
    }
    // static props are already proxied on the component's prototype
    // during Vue.extend(). We only need to proxy props defined at
    // instantiation here.
    if (!(key in vm)) {
      proxy(vm, "_props", key);
    }
  };

  for (var key in propsOptions) loop( key );
  observerState.shouldConvert = true;
}

function initData (vm) {
  var data = vm.$options.data;
  data = vm._data = typeof data === 'function'
    ? getData(data, vm)
    : data || {};
  if (!isPlainObject(data)) {
    data = {};
    "production" !== 'production' && warn(
      'data functions should return an object:\n' +
      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',
      vm
    );
  }
  // proxy data on instance
  var keys = Object.keys(data);
  var props = vm.$options.props;
  var i = keys.length;
  while (i--) {
    if (props && hasOwn(props, keys[i])) {
      "production" !== 'production' && warn(
        "The data property \"" + (keys[i]) + "\" is already declared as a prop. " +
        "Use prop default value instead.",
        vm
      );
    } else if (!isReserved(keys[i])) {
      proxy(vm, "_data", keys[i]);
    }
  }
  // observe data
  observe(data, true /* asRootData */);
}

function getData (data, vm) {
  try {
    return data.call(vm)
  } catch (e) {
    handleError(e, vm, "data()");
    return {}
  }
}

var computedWatcherOptions = { lazy: true };

function initComputed (vm, computed) {
  var watchers = vm._computedWatchers = Object.create(null);

  for (var key in computed) {
    var userDef = computed[key];
    var getter = typeof userDef === 'function' ? userDef : userDef.get;
    if (false) {
      if (getter === undefined) {
        warn(
          ("No getter function has been defined for computed property \"" + key + "\"."),
          vm
        );
        getter = noop;
      }
    }
    // create internal watcher for the computed property.
    watchers[key] = new Watcher(vm, getter, noop, computedWatcherOptions);

    // component-defined computed properties are already defined on the
    // component prototype. We only need to define computed properties defined
    // at instantiation here.
    if (!(key in vm)) {
      defineComputed(vm, key, userDef);
    } else if (false) {
      if (key in vm.$data) {
        warn(("The computed property \"" + key + "\" is already defined in data."), vm);
      } else if (vm.$options.props && key in vm.$options.props) {
        warn(("The computed property \"" + key + "\" is already defined as a prop."), vm);
      }
    }
  }
}

function defineComputed (target, key, userDef) {
  if (typeof userDef === 'function') {
    sharedPropertyDefinition.get = createComputedGetter(key);
    sharedPropertyDefinition.set = noop;
  } else {
    sharedPropertyDefinition.get = userDef.get
      ? userDef.cache !== false
        ? createComputedGetter(key)
        : userDef.get
      : noop;
    sharedPropertyDefinition.set = userDef.set
      ? userDef.set
      : noop;
  }
  Object.defineProperty(target, key, sharedPropertyDefinition);
}

function createComputedGetter (key) {
  return function computedGetter () {
    var watcher = this._computedWatchers && this._computedWatchers[key];
    if (watcher) {
      if (watcher.dirty) {
        watcher.evaluate();
      }
      if (Dep.target) {
        watcher.depend();
      }
      return watcher.value
    }
  }
}

function initMethods (vm, methods) {
  var props = vm.$options.props;
  for (var key in methods) {
    vm[key] = methods[key] == null ? noop : bind(methods[key], vm);
    if (false) {
      if (methods[key] == null) {
        warn(
          "method \"" + key + "\" has an undefined value in the component definition. " +
          "Did you reference the function correctly?",
          vm
        );
      }
      if (props && hasOwn(props, key)) {
        warn(
          ("method \"" + key + "\" has already been defined as a prop."),
          vm
        );
      }
    }
  }
}

function initWatch (vm, watch) {
  for (var key in watch) {
    var handler = watch[key];
    if (Array.isArray(handler)) {
      for (var i = 0; i < handler.length; i++) {
        createWatcher(vm, key, handler[i]);
      }
    } else {
      createWatcher(vm, key, handler);
    }
  }
}

function createWatcher (vm, key, handler) {
  var options;
  if (isPlainObject(handler)) {
    options = handler;
    handler = handler.handler;
  }
  if (typeof handler === 'string') {
    handler = vm[handler];
  }
  vm.$watch(key, handler, options);
}

function stateMixin (Vue) {
  // flow somehow has problems with directly declared definition object
  // when using Object.defineProperty, so we have to procedurally build up
  // the object here.
  var dataDef = {};
  dataDef.get = function () { return this._data };
  var propsDef = {};
  propsDef.get = function () { return this._props };
  if (false) {
    dataDef.set = function (newData) {
      warn(
        'Avoid replacing instance root $data. ' +
        'Use nested data properties instead.',
        this
      );
    };
    propsDef.set = function () {
      warn("$props is readonly.", this);
    };
  }
  Object.defineProperty(Vue.prototype, '$data', dataDef);
  Object.defineProperty(Vue.prototype, '$props', propsDef);

  Vue.prototype.$set = set;
  Vue.prototype.$delete = del;

  Vue.prototype.$watch = function (
    expOrFn,
    cb,
    options
  ) {
    var vm = this;
    options = options || {};
    options.user = true;
    var watcher = new Watcher(vm, expOrFn, cb, options);
    if (options.immediate) {
      cb.call(vm, watcher.value);
    }
    return function unwatchFn () {
      watcher.teardown();
    }
  };
}

/*  */

function initProvide (vm) {
  var provide = vm.$options.provide;
  if (provide) {
    vm._provided = typeof provide === 'function'
      ? provide.call(vm)
      : provide;
  }
}

function initInjections (vm) {
  var result = resolveInject(vm.$options.inject, vm);
  if (result) {
    Object.keys(result).forEach(function (key) {
      /* istanbul ignore else */
      if (false) {
        defineReactive$$1(vm, key, result[key], function () {
          warn(
            "Avoid mutating an injected value directly since the changes will be " +
            "overwritten whenever the provided component re-renders. " +
            "injection being mutated: \"" + key + "\"",
            vm
          );
        });
      } else {
        defineReactive$$1(vm, key, result[key]);
      }
    });
  }
}

function resolveInject (inject, vm) {
  if (inject) {
    // inject is :any because flow is not smart enough to figure out cached
    // isArray here
    var isArray = Array.isArray(inject);
    var result = Object.create(null);
    var keys = isArray
      ? inject
      : hasSymbol
        ? Reflect.ownKeys(inject)
        : Object.keys(inject);

    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      var provideKey = isArray ? key : inject[key];
      var source = vm;
      while (source) {
        if (source._provided && provideKey in source._provided) {
          result[key] = source._provided[provideKey];
          break
        }
        source = source.$parent;
      }
    }
    return result
  }
}

/*  */

function createFunctionalComponent (
  Ctor,
  propsData,
  data,
  context,
  children
) {
  var props = {};
  var propOptions = Ctor.options.props;
  if (isDef(propOptions)) {
    for (var key in propOptions) {
      props[key] = validateProp(key, propOptions, propsData);
    }
  } else {
    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }
    if (isDef(data.props)) { mergeProps(props, data.props); }
  }
  // ensure the createElement function in functional components
  // gets a unique context - this is necessary for correct named slot check
  var _context = Object.create(context);
  var h = function (a, b, c, d) { return createElement(_context, a, b, c, d, true); };
  var vnode = Ctor.options.render.call(null, h, {
    data: data,
    props: props,
    children: children,
    parent: context,
    listeners: data.on || {},
    injections: resolveInject(Ctor.options.inject, context),
    slots: function () { return resolveSlots(children, context); }
  });
  if (vnode instanceof VNode) {
    vnode.functionalContext = context;
    if (data.slot) {
      (vnode.data || (vnode.data = {})).slot = data.slot;
    }
  }
  return vnode
}

function mergeProps (to, from) {
  for (var key in from) {
    to[camelize(key)] = from[key];
  }
}

/*  */

// hooks to be invoked on component VNodes during patch
var componentVNodeHooks = {
  init: function init (
    vnode,
    hydrating,
    parentElm,
    refElm
  ) {
    if (!vnode.componentInstance || vnode.componentInstance._isDestroyed) {
      var child = vnode.componentInstance = createComponentInstanceForVnode(
        vnode,
        activeInstance,
        parentElm,
        refElm
      );
      child.$mount(hydrating ? vnode.elm : undefined, hydrating);
    } else if (vnode.data.keepAlive) {
      // kept-alive components, treat as a patch
      var mountedNode = vnode; // work around flow
      componentVNodeHooks.prepatch(mountedNode, mountedNode);
    }
  },

  prepatch: function prepatch (oldVnode, vnode) {
    var options = vnode.componentOptions;
    var child = vnode.componentInstance = oldVnode.componentInstance;
    updateChildComponent(
      child,
      options.propsData, // updated props
      options.listeners, // updated listeners
      vnode, // new parent vnode
      options.children // new children
    );
  },

  insert: function insert (vnode) {
    var context = vnode.context;
    var componentInstance = vnode.componentInstance;
    if (!componentInstance._isMounted) {
      componentInstance._isMounted = true;
      callHook(componentInstance, 'mounted');
    }
    if (vnode.data.keepAlive) {
      if (context._isMounted) {
        // vue-router#1212
        // During updates, a kept-alive component's child components may
        // change, so directly walking the tree here may call activated hooks
        // on incorrect children. Instead we push them into a queue which will
        // be processed after the whole patch process ended.
        queueActivatedComponent(componentInstance);
      } else {
        activateChildComponent(componentInstance, true /* direct */);
      }
    }
  },

  destroy: function destroy (vnode) {
    var componentInstance = vnode.componentInstance;
    if (!componentInstance._isDestroyed) {
      if (!vnode.data.keepAlive) {
        componentInstance.$destroy();
      } else {
        deactivateChildComponent(componentInstance, true /* direct */);
      }
    }
  }
};

var hooksToMerge = Object.keys(componentVNodeHooks);

function createComponent (
  Ctor,
  data,
  context,
  children,
  tag
) {
  if (isUndef(Ctor)) {
    return
  }

  var baseCtor = context.$options._base;

  // plain options object: turn it into a constructor
  if (isObject(Ctor)) {
    Ctor = baseCtor.extend(Ctor);
  }

  // if at this stage it's not a constructor or an async component factory,
  // reject.
  if (typeof Ctor !== 'function') {
    if (false) {
      warn(("Invalid Component definition: " + (String(Ctor))), context);
    }
    return
  }

  // async component
  if (isUndef(Ctor.cid)) {
    Ctor = resolveAsyncComponent(Ctor, baseCtor, context);
    if (Ctor === undefined) {
      // return nothing if this is indeed an async component
      // wait for the callback to trigger parent update.
      return
    }
  }

  // resolve constructor options in case global mixins are applied after
  // component constructor creation
  resolveConstructorOptions(Ctor);

  data = data || {};

  // transform component v-model data into props & events
  if (isDef(data.model)) {
    transformModel(Ctor.options, data);
  }

  // extract props
  var propsData = extractPropsFromVNodeData(data, Ctor, tag);

  // functional component
  if (isTrue(Ctor.options.functional)) {
    return createFunctionalComponent(Ctor, propsData, data, context, children)
  }

  // extract listeners, since these needs to be treated as
  // child component listeners instead of DOM listeners
  var listeners = data.on;
  // replace with listeners with .native modifier
  data.on = data.nativeOn;

  if (isTrue(Ctor.options.abstract)) {
    // abstract components do not keep anything
    // other than props & listeners
    data = {};
  }

  // merge component management hooks onto the placeholder node
  mergeHooks(data);

  // return a placeholder vnode
  var name = Ctor.options.name || tag;
  var vnode = new VNode(
    ("vue-component-" + (Ctor.cid) + (name ? ("-" + name) : '')),
    data, undefined, undefined, undefined, context,
    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children }
  );
  return vnode
}

function createComponentInstanceForVnode (
  vnode, // we know it's MountedComponentVNode but flow doesn't
  parent, // activeInstance in lifecycle state
  parentElm,
  refElm
) {
  var vnodeComponentOptions = vnode.componentOptions;
  var options = {
    _isComponent: true,
    parent: parent,
    propsData: vnodeComponentOptions.propsData,
    _componentTag: vnodeComponentOptions.tag,
    _parentVnode: vnode,
    _parentListeners: vnodeComponentOptions.listeners,
    _renderChildren: vnodeComponentOptions.children,
    _parentElm: parentElm || null,
    _refElm: refElm || null
  };
  // check inline-template render functions
  var inlineTemplate = vnode.data.inlineTemplate;
  if (isDef(inlineTemplate)) {
    options.render = inlineTemplate.render;
    options.staticRenderFns = inlineTemplate.staticRenderFns;
  }
  return new vnodeComponentOptions.Ctor(options)
}

function mergeHooks (data) {
  if (!data.hook) {
    data.hook = {};
  }
  for (var i = 0; i < hooksToMerge.length; i++) {
    var key = hooksToMerge[i];
    var fromParent = data.hook[key];
    var ours = componentVNodeHooks[key];
    data.hook[key] = fromParent ? mergeHook$1(ours, fromParent) : ours;
  }
}

function mergeHook$1 (one, two) {
  return function (a, b, c, d) {
    one(a, b, c, d);
    two(a, b, c, d);
  }
}

// transform component v-model info (value and callback) into
// prop and event handler respectively.
function transformModel (options, data) {
  var prop = (options.model && options.model.prop) || 'value';
  var event = (options.model && options.model.event) || 'input';(data.props || (data.props = {}))[prop] = data.model.value;
  var on = data.on || (data.on = {});
  if (isDef(on[event])) {
    on[event] = [data.model.callback].concat(on[event]);
  } else {
    on[event] = data.model.callback;
  }
}

/*  */

var SIMPLE_NORMALIZE = 1;
var ALWAYS_NORMALIZE = 2;

// wrapper function for providing a more flexible interface
// without getting yelled at by flow
function createElement (
  context,
  tag,
  data,
  children,
  normalizationType,
  alwaysNormalize
) {
  if (Array.isArray(data) || isPrimitive(data)) {
    normalizationType = children;
    children = data;
    data = undefined;
  }
  if (isTrue(alwaysNormalize)) {
    normalizationType = ALWAYS_NORMALIZE;
  }
  return _createElement(context, tag, data, children, normalizationType)
}

function _createElement (
  context,
  tag,
  data,
  children,
  normalizationType
) {
  if (isDef(data) && isDef((data).__ob__)) {
    "production" !== 'production' && warn(
      "Avoid using observed data object as vnode data: " + (JSON.stringify(data)) + "\n" +
      'Always create fresh vnode data objects in each render!',
      context
    );
    return createEmptyVNode()
  }
  if (!tag) {
    // in case of component :is set to falsy value
    return createEmptyVNode()
  }
  // support single function children as default scoped slot
  if (Array.isArray(children) &&
      typeof children[0] === 'function') {
    data = data || {};
    data.scopedSlots = { default: children[0] };
    children.length = 0;
  }
  if (normalizationType === ALWAYS_NORMALIZE) {
    children = normalizeChildren(children);
  } else if (normalizationType === SIMPLE_NORMALIZE) {
    children = simpleNormalizeChildren(children);
  }
  var vnode, ns;
  if (typeof tag === 'string') {
    var Ctor;
    ns = config.getTagNamespace(tag);
    if (config.isReservedTag(tag)) {
      // platform built-in elements
      vnode = new VNode(
        config.parsePlatformTagName(tag), data, children,
        undefined, undefined, context
      );
    } else if (isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {
      // component
      vnode = createComponent(Ctor, data, context, children, tag);
    } else {
      // unknown or unlisted namespaced elements
      // check at runtime because it may get assigned a namespace when its
      // parent normalizes children
      vnode = new VNode(
        tag, data, children,
        undefined, undefined, context
      );
    }
  } else {
    // direct component options / constructor
    vnode = createComponent(tag, data, context, children);
  }
  if (vnode !== undefined) {
    if (ns) { applyNS(vnode, ns); }
    return vnode
  } else {
    return createEmptyVNode()
  }
}

function applyNS (vnode, ns) {
  vnode.ns = ns;
  if (vnode.tag === 'foreignObject') {
    // use default namespace inside foreignObject
    return
  }
  if (Array.isArray(vnode.children)) {
    for (var i = 0, l = vnode.children.length; i < l; i++) {
      var child = vnode.children[i];
      if (isDef(child.tag) && isUndef(child.ns)) {
        applyNS(child, ns);
      }
    }
  }
}

/*  */

/**
 * Runtime helper for rendering v-for lists.
 */
function renderList (
  val,
  render
) {
  var ret, i, l, keys, key;
  if (Array.isArray(val) || typeof val === 'string') {
    ret = new Array(val.length);
    for (i = 0, l = val.length; i < l; i++) {
      ret[i] = render(val[i], i);
    }
  } else if (typeof val === 'number') {
    ret = new Array(val);
    for (i = 0; i < val; i++) {
      ret[i] = render(i + 1, i);
    }
  } else if (isObject(val)) {
    keys = Object.keys(val);
    ret = new Array(keys.length);
    for (i = 0, l = keys.length; i < l; i++) {
      key = keys[i];
      ret[i] = render(val[key], key, i);
    }
  }
  return ret
}

/*  */

/**
 * Runtime helper for rendering <slot>
 */
function renderSlot (
  name,
  fallback,
  props,
  bindObject
) {
  var scopedSlotFn = this.$scopedSlots[name];
  if (scopedSlotFn) { // scoped slot
    props = props || {};
    if (bindObject) {
      extend(props, bindObject);
    }
    return scopedSlotFn(props) || fallback
  } else {
    var slotNodes = this.$slots[name];
    // warn duplicate slot usage
    if (slotNodes && "production" !== 'production') {
      slotNodes._rendered && warn(
        "Duplicate presence of slot \"" + name + "\" found in the same render tree " +
        "- this will likely cause render errors.",
        this
      );
      slotNodes._rendered = true;
    }
    return slotNodes || fallback
  }
}

/*  */

/**
 * Runtime helper for resolving filters
 */
function resolveFilter (id) {
  return resolveAsset(this.$options, 'filters', id, true) || identity
}

/*  */

/**
 * Runtime helper for checking keyCodes from config.
 */
function checkKeyCodes (
  eventKeyCode,
  key,
  builtInAlias
) {
  var keyCodes = config.keyCodes[key] || builtInAlias;
  if (Array.isArray(keyCodes)) {
    return keyCodes.indexOf(eventKeyCode) === -1
  } else {
    return keyCodes !== eventKeyCode
  }
}

/*  */

/**
 * Runtime helper for merging v-bind="object" into a VNode's data.
 */
function bindObjectProps (
  data,
  tag,
  value,
  asProp
) {
  if (value) {
    if (!isObject(value)) {
      "production" !== 'production' && warn(
        'v-bind without argument expects an Object or Array value',
        this
      );
    } else {
      if (Array.isArray(value)) {
        value = toObject(value);
      }
      var hash;
      for (var key in value) {
        if (key === 'class' || key === 'style') {
          hash = data;
        } else {
          var type = data.attrs && data.attrs.type;
          hash = asProp || config.mustUseProp(tag, type, key)
            ? data.domProps || (data.domProps = {})
            : data.attrs || (data.attrs = {});
        }
        if (!(key in hash)) {
          hash[key] = value[key];
        }
      }
    }
  }
  return data
}

/*  */

/**
 * Runtime helper for rendering static trees.
 */
function renderStatic (
  index,
  isInFor
) {
  var tree = this._staticTrees[index];
  // if has already-rendered static tree and not inside v-for,
  // we can reuse the same tree by doing a shallow clone.
  if (tree && !isInFor) {
    return Array.isArray(tree)
      ? cloneVNodes(tree)
      : cloneVNode(tree)
  }
  // otherwise, render a fresh tree.
  tree = this._staticTrees[index] =
    this.$options.staticRenderFns[index].call(this._renderProxy);
  markStatic(tree, ("__static__" + index), false);
  return tree
}

/**
 * Runtime helper for v-once.
 * Effectively it means marking the node as static with a unique key.
 */
function markOnce (
  tree,
  index,
  key
) {
  markStatic(tree, ("__once__" + index + (key ? ("_" + key) : "")), true);
  return tree
}

function markStatic (
  tree,
  key,
  isOnce
) {
  if (Array.isArray(tree)) {
    for (var i = 0; i < tree.length; i++) {
      if (tree[i] && typeof tree[i] !== 'string') {
        markStaticNode(tree[i], (key + "_" + i), isOnce);
      }
    }
  } else {
    markStaticNode(tree, key, isOnce);
  }
}

function markStaticNode (node, key, isOnce) {
  node.isStatic = true;
  node.key = key;
  node.isOnce = isOnce;
}

/*  */

function initRender (vm) {
  vm._vnode = null; // the root of the child tree
  vm._staticTrees = null;
  var parentVnode = vm.$vnode = vm.$options._parentVnode; // the placeholder node in parent tree
  var renderContext = parentVnode && parentVnode.context;
  vm.$slots = resolveSlots(vm.$options._renderChildren, renderContext);
  vm.$scopedSlots = emptyObject;
  // bind the createElement fn to this instance
  // so that we get proper render context inside it.
  // args order: tag, data, children, normalizationType, alwaysNormalize
  // internal version is used by render functions compiled from templates
  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };
  // normalization is always applied for the public version, used in
  // user-written render functions.
  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };
}

function renderMixin (Vue) {
  Vue.prototype.$nextTick = function (fn) {
    return nextTick(fn, this)
  };

  Vue.prototype._render = function () {
    var vm = this;
    var ref = vm.$options;
    var render = ref.render;
    var staticRenderFns = ref.staticRenderFns;
    var _parentVnode = ref._parentVnode;

    if (vm._isMounted) {
      // clone slot nodes on re-renders
      for (var key in vm.$slots) {
        vm.$slots[key] = cloneVNodes(vm.$slots[key]);
      }
    }

    vm.$scopedSlots = (_parentVnode && _parentVnode.data.scopedSlots) || emptyObject;

    if (staticRenderFns && !vm._staticTrees) {
      vm._staticTrees = [];
    }
    // set parent vnode. this allows render functions to have access
    // to the data on the placeholder node.
    vm.$vnode = _parentVnode;
    // render self
    var vnode;
    try {
      vnode = render.call(vm._renderProxy, vm.$createElement);
    } catch (e) {
      handleError(e, vm, "render function");
      // return error render result,
      // or previous vnode to prevent render error causing blank component
      /* istanbul ignore else */
      if (false) {
        vnode = vm.$options.renderError
          ? vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e)
          : vm._vnode;
      } else {
        vnode = vm._vnode;
      }
    }
    // return empty vnode in case the render function errored out
    if (!(vnode instanceof VNode)) {
      if (false) {
        warn(
          'Multiple root nodes returned from render function. Render function ' +
          'should return a single root node.',
          vm
        );
      }
      vnode = createEmptyVNode();
    }
    // set parent
    vnode.parent = _parentVnode;
    return vnode
  };

  // internal render helpers.
  // these are exposed on the instance prototype to reduce generated render
  // code size.
  Vue.prototype._o = markOnce;
  Vue.prototype._n = toNumber;
  Vue.prototype._s = _toString;
  Vue.prototype._l = renderList;
  Vue.prototype._t = renderSlot;
  Vue.prototype._q = looseEqual;
  Vue.prototype._i = looseIndexOf;
  Vue.prototype._m = renderStatic;
  Vue.prototype._f = resolveFilter;
  Vue.prototype._k = checkKeyCodes;
  Vue.prototype._b = bindObjectProps;
  Vue.prototype._v = createTextVNode;
  Vue.prototype._e = createEmptyVNode;
  Vue.prototype._u = resolveScopedSlots;
}

/*  */

var uid$1 = 0;

function initMixin (Vue) {
  Vue.prototype._init = function (options) {
    var vm = this;
    // a uid
    vm._uid = uid$1++;

    var startTag, endTag;
    /* istanbul ignore if */
    if (false) {
      startTag = "vue-perf-init:" + (vm._uid);
      endTag = "vue-perf-end:" + (vm._uid);
      mark(startTag);
    }

    // a flag to avoid this being observed
    vm._isVue = true;
    // merge options
    if (options && options._isComponent) {
      // optimize internal component instantiation
      // since dynamic options merging is pretty slow, and none of the
      // internal component options needs special treatment.
      initInternalComponent(vm, options);
    } else {
      vm.$options = mergeOptions(
        resolveConstructorOptions(vm.constructor),
        options || {},
        vm
      );
    }
    /* istanbul ignore else */
    if (false) {
      initProxy(vm);
    } else {
      vm._renderProxy = vm;
    }
    // expose real self
    vm._self = vm;
    initLifecycle(vm);
    initEvents(vm);
    initRender(vm);
    callHook(vm, 'beforeCreate');
    initInjections(vm); // resolve injections before data/props
    initState(vm);
    initProvide(vm); // resolve provide after data/props
    callHook(vm, 'created');

    /* istanbul ignore if */
    if (false) {
      vm._name = formatComponentName(vm, false);
      mark(endTag);
      measure(((vm._name) + " init"), startTag, endTag);
    }

    if (vm.$options.el) {
      vm.$mount(vm.$options.el);
    }
  };
}

function initInternalComponent (vm, options) {
  var opts = vm.$options = Object.create(vm.constructor.options);
  // doing this because it's faster than dynamic enumeration.
  opts.parent = options.parent;
  opts.propsData = options.propsData;
  opts._parentVnode = options._parentVnode;
  opts._parentListeners = options._parentListeners;
  opts._renderChildren = options._renderChildren;
  opts._componentTag = options._componentTag;
  opts._parentElm = options._parentElm;
  opts._refElm = options._refElm;
  if (options.render) {
    opts.render = options.render;
    opts.staticRenderFns = options.staticRenderFns;
  }
}

function resolveConstructorOptions (Ctor) {
  var options = Ctor.options;
  if (Ctor.super) {
    var superOptions = resolveConstructorOptions(Ctor.super);
    var cachedSuperOptions = Ctor.superOptions;
    if (superOptions !== cachedSuperOptions) {
      // super option changed,
      // need to resolve new options.
      Ctor.superOptions = superOptions;
      // check if there are any late-modified/attached options (#4976)
      var modifiedOptions = resolveModifiedOptions(Ctor);
      // update base extend options
      if (modifiedOptions) {
        extend(Ctor.extendOptions, modifiedOptions);
      }
      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);
      if (options.name) {
        options.components[options.name] = Ctor;
      }
    }
  }
  return options
}

function resolveModifiedOptions (Ctor) {
  var modified;
  var latest = Ctor.options;
  var extended = Ctor.extendOptions;
  var sealed = Ctor.sealedOptions;
  for (var key in latest) {
    if (latest[key] !== sealed[key]) {
      if (!modified) { modified = {}; }
      modified[key] = dedupe(latest[key], extended[key], sealed[key]);
    }
  }
  return modified
}

function dedupe (latest, extended, sealed) {
  // compare latest and sealed to ensure lifecycle hooks won't be duplicated
  // between merges
  if (Array.isArray(latest)) {
    var res = [];
    sealed = Array.isArray(sealed) ? sealed : [sealed];
    extended = Array.isArray(extended) ? extended : [extended];
    for (var i = 0; i < latest.length; i++) {
      // push original options and not sealed options to exclude duplicated options
      if (extended.indexOf(latest[i]) >= 0 || sealed.indexOf(latest[i]) < 0) {
        res.push(latest[i]);
      }
    }
    return res
  } else {
    return latest
  }
}

function Vue$3 (options) {
  if (false) {
    warn('Vue is a constructor and should be called with the `new` keyword');
  }
  this._init(options);
}

initMixin(Vue$3);
stateMixin(Vue$3);
eventsMixin(Vue$3);
lifecycleMixin(Vue$3);
renderMixin(Vue$3);

/*  */

function initUse (Vue) {
  Vue.use = function (plugin) {
    /* istanbul ignore if */
    if (plugin.installed) {
      return
    }
    // additional parameters
    var args = toArray(arguments, 1);
    args.unshift(this);
    if (typeof plugin.install === 'function') {
      plugin.install.apply(plugin, args);
    } else if (typeof plugin === 'function') {
      plugin.apply(null, args);
    }
    plugin.installed = true;
    return this
  };
}

/*  */

function initMixin$1 (Vue) {
  Vue.mixin = function (mixin) {
    this.options = mergeOptions(this.options, mixin);
  };
}

/*  */

function initExtend (Vue) {
  /**
   * Each instance constructor, including Vue, has a unique
   * cid. This enables us to create wrapped "child
   * constructors" for prototypal inheritance and cache them.
   */
  Vue.cid = 0;
  var cid = 1;

  /**
   * Class inheritance
   */
  Vue.extend = function (extendOptions) {
    extendOptions = extendOptions || {};
    var Super = this;
    var SuperId = Super.cid;
    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});
    if (cachedCtors[SuperId]) {
      return cachedCtors[SuperId]
    }

    var name = extendOptions.name || Super.options.name;
    if (false) {
      if (!/^[a-zA-Z][\w-]*$/.test(name)) {
        warn(
          'Invalid component name: "' + name + '". Component names ' +
          'can only contain alphanumeric characters and the hyphen, ' +
          'and must start with a letter.'
        );
      }
    }

    var Sub = function VueComponent (options) {
      this._init(options);
    };
    Sub.prototype = Object.create(Super.prototype);
    Sub.prototype.constructor = Sub;
    Sub.cid = cid++;
    Sub.options = mergeOptions(
      Super.options,
      extendOptions
    );
    Sub['super'] = Super;

    // For props and computed properties, we define the proxy getters on
    // the Vue instances at extension time, on the extended prototype. This
    // avoids Object.defineProperty calls for each instance created.
    if (Sub.options.props) {
      initProps$1(Sub);
    }
    if (Sub.options.computed) {
      initComputed$1(Sub);
    }

    // allow further extension/mixin/plugin usage
    Sub.extend = Super.extend;
    Sub.mixin = Super.mixin;
    Sub.use = Super.use;

    // create asset registers, so extended classes
    // can have their private assets too.
    ASSET_TYPES.forEach(function (type) {
      Sub[type] = Super[type];
    });
    // enable recursive self-lookup
    if (name) {
      Sub.options.components[name] = Sub;
    }

    // keep a reference to the super options at extension time.
    // later at instantiation we can check if Super's options have
    // been updated.
    Sub.superOptions = Super.options;
    Sub.extendOptions = extendOptions;
    Sub.sealedOptions = extend({}, Sub.options);

    // cache constructor
    cachedCtors[SuperId] = Sub;
    return Sub
  };
}

function initProps$1 (Comp) {
  var props = Comp.options.props;
  for (var key in props) {
    proxy(Comp.prototype, "_props", key);
  }
}

function initComputed$1 (Comp) {
  var computed = Comp.options.computed;
  for (var key in computed) {
    defineComputed(Comp.prototype, key, computed[key]);
  }
}

/*  */

function initAssetRegisters (Vue) {
  /**
   * Create asset registration methods.
   */
  ASSET_TYPES.forEach(function (type) {
    Vue[type] = function (
      id,
      definition
    ) {
      if (!definition) {
        return this.options[type + 's'][id]
      } else {
        /* istanbul ignore if */
        if (false) {
          if (type === 'component' && config.isReservedTag(id)) {
            warn(
              'Do not use built-in or reserved HTML elements as component ' +
              'id: ' + id
            );
          }
        }
        if (type === 'component' && isPlainObject(definition)) {
          definition.name = definition.name || id;
          definition = this.options._base.extend(definition);
        }
        if (type === 'directive' && typeof definition === 'function') {
          definition = { bind: definition, update: definition };
        }
        this.options[type + 's'][id] = definition;
        return definition
      }
    };
  });
}

/*  */

var patternTypes = [String, RegExp];

function getComponentName (opts) {
  return opts && (opts.Ctor.options.name || opts.tag)
}

function matches (pattern, name) {
  if (typeof pattern === 'string') {
    return pattern.split(',').indexOf(name) > -1
  } else if (isRegExp(pattern)) {
    return pattern.test(name)
  }
  /* istanbul ignore next */
  return false
}

function pruneCache (cache, current, filter) {
  for (var key in cache) {
    var cachedNode = cache[key];
    if (cachedNode) {
      var name = getComponentName(cachedNode.componentOptions);
      if (name && !filter(name)) {
        if (cachedNode !== current) {
          pruneCacheEntry(cachedNode);
        }
        cache[key] = null;
      }
    }
  }
}

function pruneCacheEntry (vnode) {
  if (vnode) {
    vnode.componentInstance.$destroy();
  }
}

var KeepAlive = {
  name: 'keep-alive',
  abstract: true,

  props: {
    include: patternTypes,
    exclude: patternTypes
  },

  created: function created () {
    this.cache = Object.create(null);
  },

  destroyed: function destroyed () {
    var this$1 = this;

    for (var key in this$1.cache) {
      pruneCacheEntry(this$1.cache[key]);
    }
  },

  watch: {
    include: function include (val) {
      pruneCache(this.cache, this._vnode, function (name) { return matches(val, name); });
    },
    exclude: function exclude (val) {
      pruneCache(this.cache, this._vnode, function (name) { return !matches(val, name); });
    }
  },

  render: function render () {
    var vnode = getFirstComponentChild(this.$slots.default);
    var componentOptions = vnode && vnode.componentOptions;
    if (componentOptions) {
      // check pattern
      var name = getComponentName(componentOptions);
      if (name && (
        (this.include && !matches(this.include, name)) ||
        (this.exclude && matches(this.exclude, name))
      )) {
        return vnode
      }
      var key = vnode.key == null
        // same constructor may get registered as different local components
        // so cid alone is not enough (#3269)
        ? componentOptions.Ctor.cid + (componentOptions.tag ? ("::" + (componentOptions.tag)) : '')
        : vnode.key;
      if (this.cache[key]) {
        vnode.componentInstance = this.cache[key].componentInstance;
      } else {
        this.cache[key] = vnode;
      }
      vnode.data.keepAlive = true;
    }
    return vnode
  }
};

var builtInComponents = {
  KeepAlive: KeepAlive
};

/*  */

function initGlobalAPI (Vue) {
  // config
  var configDef = {};
  configDef.get = function () { return config; };
  if (false) {
    configDef.set = function () {
      warn(
        'Do not replace the Vue.config object, set individual fields instead.'
      );
    };
  }
  Object.defineProperty(Vue, 'config', configDef);

  // exposed util methods.
  // NOTE: these are not considered part of the public API - avoid relying on
  // them unless you are aware of the risk.
  Vue.util = {
    warn: warn,
    extend: extend,
    mergeOptions: mergeOptions,
    defineReactive: defineReactive$$1
  };

  Vue.set = set;
  Vue.delete = del;
  Vue.nextTick = nextTick;

  Vue.options = Object.create(null);
  ASSET_TYPES.forEach(function (type) {
    Vue.options[type + 's'] = Object.create(null);
  });

  // this is used to identify the "base" constructor to extend all plain-object
  // components with in Weex's multi-instance scenarios.
  Vue.options._base = Vue;

  extend(Vue.options.components, builtInComponents);

  initUse(Vue);
  initMixin$1(Vue);
  initExtend(Vue);
  initAssetRegisters(Vue);
}

initGlobalAPI(Vue$3);

Object.defineProperty(Vue$3.prototype, '$isServer', {
  get: isServerRendering
});

Vue$3.version = '2.3.0';

/*  */

// these are reserved for web because they are directly compiled away
// during template compilation
var isReservedAttr = makeMap('style,class');

// attributes that should be using props for binding
var acceptValue = makeMap('input,textarea,option,select');
var mustUseProp = function (tag, type, attr) {
  return (
    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||
    (attr === 'selected' && tag === 'option') ||
    (attr === 'checked' && tag === 'input') ||
    (attr === 'muted' && tag === 'video')
  )
};

var isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');

var isBooleanAttr = makeMap(
  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +
  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +
  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +
  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +
  'required,reversed,scoped,seamless,selected,sortable,translate,' +
  'truespeed,typemustmatch,visible'
);

var xlinkNS = 'http://www.w3.org/1999/xlink';

var isXlink = function (name) {
  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'
};

var getXlinkProp = function (name) {
  return isXlink(name) ? name.slice(6, name.length) : ''
};

var isFalsyAttrValue = function (val) {
  return val == null || val === false
};

/*  */

function genClassForVnode (vnode) {
  var data = vnode.data;
  var parentNode = vnode;
  var childNode = vnode;
  while (isDef(childNode.componentInstance)) {
    childNode = childNode.componentInstance._vnode;
    if (childNode.data) {
      data = mergeClassData(childNode.data, data);
    }
  }
  while (isDef(parentNode = parentNode.parent)) {
    if (parentNode.data) {
      data = mergeClassData(data, parentNode.data);
    }
  }
  return genClassFromData(data)
}

function mergeClassData (child, parent) {
  return {
    staticClass: concat(child.staticClass, parent.staticClass),
    class: isDef(child.class)
      ? [child.class, parent.class]
      : parent.class
  }
}

function genClassFromData (data) {
  var dynamicClass = data.class;
  var staticClass = data.staticClass;
  if (isDef(staticClass) || isDef(dynamicClass)) {
    return concat(staticClass, stringifyClass(dynamicClass))
  }
  /* istanbul ignore next */
  return ''
}

function concat (a, b) {
  return a ? b ? (a + ' ' + b) : a : (b || '')
}

function stringifyClass (value) {
  if (isUndef(value)) {
    return ''
  }
  if (typeof value === 'string') {
    return value
  }
  var res = '';
  if (Array.isArray(value)) {
    var stringified;
    for (var i = 0, l = value.length; i < l; i++) {
      if (isDef(value[i])) {
        if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {
          res += stringified + ' ';
        }
      }
    }
    return res.slice(0, -1)
  }
  if (isObject(value)) {
    for (var key in value) {
      if (value[key]) { res += key + ' '; }
    }
    return res.slice(0, -1)
  }
  /* istanbul ignore next */
  return res
}

/*  */

var namespaceMap = {
  svg: 'http://www.w3.org/2000/svg',
  math: 'http://www.w3.org/1998/Math/MathML'
};

var isHTMLTag = makeMap(
  'html,body,base,head,link,meta,style,title,' +
  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +
  'div,dd,dl,dt,figcaption,figure,hr,img,li,main,ol,p,pre,ul,' +
  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +
  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +
  'embed,object,param,source,canvas,script,noscript,del,ins,' +
  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +
  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +
  'output,progress,select,textarea,' +
  'details,dialog,menu,menuitem,summary,' +
  'content,element,shadow,template'
);

// this map is intentionally selective, only covering SVG elements that may
// contain child elements.
var isSVG = makeMap(
  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +
  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +
  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',
  true
);

var isPreTag = function (tag) { return tag === 'pre'; };

var isReservedTag = function (tag) {
  return isHTMLTag(tag) || isSVG(tag)
};

function getTagNamespace (tag) {
  if (isSVG(tag)) {
    return 'svg'
  }
  // basic support for MathML
  // note it doesn't support other MathML elements being component roots
  if (tag === 'math') {
    return 'math'
  }
}

var unknownElementCache = Object.create(null);
function isUnknownElement (tag) {
  /* istanbul ignore if */
  if (!inBrowser) {
    return true
  }
  if (isReservedTag(tag)) {
    return false
  }
  tag = tag.toLowerCase();
  /* istanbul ignore if */
  if (unknownElementCache[tag] != null) {
    return unknownElementCache[tag]
  }
  var el = document.createElement(tag);
  if (tag.indexOf('-') > -1) {
    // http://stackoverflow.com/a/28210364/1070244
    return (unknownElementCache[tag] = (
      el.constructor === window.HTMLUnknownElement ||
      el.constructor === window.HTMLElement
    ))
  } else {
    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))
  }
}

/*  */

/**
 * Query an element selector if it's not an element already.
 */
function query (el) {
  if (typeof el === 'string') {
    var selected = document.querySelector(el);
    if (!selected) {
      "production" !== 'production' && warn(
        'Cannot find element: ' + el
      );
      return document.createElement('div')
    }
    return selected
  } else {
    return el
  }
}

/*  */

function createElement$1 (tagName, vnode) {
  var elm = document.createElement(tagName);
  if (tagName !== 'select') {
    return elm
  }
  // false or null will remove the attribute but undefined will not
  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {
    elm.setAttribute('multiple', 'multiple');
  }
  return elm
}

function createElementNS (namespace, tagName) {
  return document.createElementNS(namespaceMap[namespace], tagName)
}

function createTextNode (text) {
  return document.createTextNode(text)
}

function createComment (text) {
  return document.createComment(text)
}

function insertBefore (parentNode, newNode, referenceNode) {
  parentNode.insertBefore(newNode, referenceNode);
}

function removeChild (node, child) {
  node.removeChild(child);
}

function appendChild (node, child) {
  node.appendChild(child);
}

function parentNode (node) {
  return node.parentNode
}

function nextSibling (node) {
  return node.nextSibling
}

function tagName (node) {
  return node.tagName
}

function setTextContent (node, text) {
  node.textContent = text;
}

function setAttribute (node, key, val) {
  node.setAttribute(key, val);
}


var nodeOps = Object.freeze({
	createElement: createElement$1,
	createElementNS: createElementNS,
	createTextNode: createTextNode,
	createComment: createComment,
	insertBefore: insertBefore,
	removeChild: removeChild,
	appendChild: appendChild,
	parentNode: parentNode,
	nextSibling: nextSibling,
	tagName: tagName,
	setTextContent: setTextContent,
	setAttribute: setAttribute
});

/*  */

var ref = {
  create: function create (_, vnode) {
    registerRef(vnode);
  },
  update: function update (oldVnode, vnode) {
    if (oldVnode.data.ref !== vnode.data.ref) {
      registerRef(oldVnode, true);
      registerRef(vnode);
    }
  },
  destroy: function destroy (vnode) {
    registerRef(vnode, true);
  }
};

function registerRef (vnode, isRemoval) {
  var key = vnode.data.ref;
  if (!key) { return }

  var vm = vnode.context;
  var ref = vnode.componentInstance || vnode.elm;
  var refs = vm.$refs;
  if (isRemoval) {
    if (Array.isArray(refs[key])) {
      remove(refs[key], ref);
    } else if (refs[key] === ref) {
      refs[key] = undefined;
    }
  } else {
    if (vnode.data.refInFor) {
      if (Array.isArray(refs[key]) && refs[key].indexOf(ref) < 0) {
        refs[key].push(ref);
      } else {
        refs[key] = [ref];
      }
    } else {
      refs[key] = ref;
    }
  }
}

/**
 * Virtual DOM patching algorithm based on Snabbdom by
 * Simon Friis Vindum (@paldepind)
 * Licensed under the MIT License
 * https://github.com/paldepind/snabbdom/blob/master/LICENSE
 *
 * modified by Evan You (@yyx990803)
 *

/*
 * Not type-checking this because this file is perf-critical and the cost
 * of making flow understand it is not worth it.
 */

var emptyNode = new VNode('', {}, []);

var hooks = ['create', 'activate', 'update', 'remove', 'destroy'];

function sameVnode (a, b) {
  return (
    a.key === b.key &&
    a.tag === b.tag &&
    a.isComment === b.isComment &&
    isDef(a.data) === isDef(b.data) &&
    sameInputType(a, b)
  )
}

// Some browsers do not support dynamically changing type for <input>
// so they need to be treated as different nodes
function sameInputType (a, b) {
  if (a.tag !== 'input') { return true }
  var i;
  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;
  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;
  return typeA === typeB
}

function createKeyToOldIdx (children, beginIdx, endIdx) {
  var i, key;
  var map = {};
  for (i = beginIdx; i <= endIdx; ++i) {
    key = children[i].key;
    if (isDef(key)) { map[key] = i; }
  }
  return map
}

function createPatchFunction (backend) {
  var i, j;
  var cbs = {};

  var modules = backend.modules;
  var nodeOps = backend.nodeOps;

  for (i = 0; i < hooks.length; ++i) {
    cbs[hooks[i]] = [];
    for (j = 0; j < modules.length; ++j) {
      if (isDef(modules[j][hooks[i]])) {
        cbs[hooks[i]].push(modules[j][hooks[i]]);
      }
    }
  }

  function emptyNodeAt (elm) {
    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)
  }

  function createRmCb (childElm, listeners) {
    function remove$$1 () {
      if (--remove$$1.listeners === 0) {
        removeNode(childElm);
      }
    }
    remove$$1.listeners = listeners;
    return remove$$1
  }

  function removeNode (el) {
    var parent = nodeOps.parentNode(el);
    // element may have already been removed due to v-html / v-text
    if (isDef(parent)) {
      nodeOps.removeChild(parent, el);
    }
  }

  var inPre = 0;
  function createElm (vnode, insertedVnodeQueue, parentElm, refElm, nested) {
    vnode.isRootInsert = !nested; // for transition enter check
    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {
      return
    }

    var data = vnode.data;
    var children = vnode.children;
    var tag = vnode.tag;
    if (isDef(tag)) {
      if (false) {
        if (data && data.pre) {
          inPre++;
        }
        if (
          !inPre &&
          !vnode.ns &&
          !(config.ignoredElements.length && config.ignoredElements.indexOf(tag) > -1) &&
          config.isUnknownElement(tag)
        ) {
          warn(
            'Unknown custom element: <' + tag + '> - did you ' +
            'register the component correctly? For recursive components, ' +
            'make sure to provide the "name" option.',
            vnode.context
          );
        }
      }
      vnode.elm = vnode.ns
        ? nodeOps.createElementNS(vnode.ns, tag)
        : nodeOps.createElement(tag, vnode);
      setScope(vnode);

      /* istanbul ignore if */
      {
        createChildren(vnode, children, insertedVnodeQueue);
        if (isDef(data)) {
          invokeCreateHooks(vnode, insertedVnodeQueue);
        }
        insert(parentElm, vnode.elm, refElm);
      }

      if (false) {
        inPre--;
      }
    } else if (isTrue(vnode.isComment)) {
      vnode.elm = nodeOps.createComment(vnode.text);
      insert(parentElm, vnode.elm, refElm);
    } else {
      vnode.elm = nodeOps.createTextNode(vnode.text);
      insert(parentElm, vnode.elm, refElm);
    }
  }

  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {
    var i = vnode.data;
    if (isDef(i)) {
      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;
      if (isDef(i = i.hook) && isDef(i = i.init)) {
        i(vnode, false /* hydrating */, parentElm, refElm);
      }
      // after calling the init hook, if the vnode is a child component
      // it should've created a child instance and mounted it. the child
      // component also has set the placeholder vnode's elm.
      // in that case we can just return the element and be done.
      if (isDef(vnode.componentInstance)) {
        initComponent(vnode, insertedVnodeQueue);
        if (isTrue(isReactivated)) {
          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);
        }
        return true
      }
    }
  }

  function initComponent (vnode, insertedVnodeQueue) {
    if (isDef(vnode.data.pendingInsert)) {
      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);
    }
    vnode.elm = vnode.componentInstance.$el;
    if (isPatchable(vnode)) {
      invokeCreateHooks(vnode, insertedVnodeQueue);
      setScope(vnode);
    } else {
      // empty component root.
      // skip all element-related modules except for ref (#3455)
      registerRef(vnode);
      // make sure to invoke the insert hook
      insertedVnodeQueue.push(vnode);
    }
  }

  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {
    var i;
    // hack for #4339: a reactivated component with inner transition
    // does not trigger because the inner node's created hooks are not called
    // again. It's not ideal to involve module-specific logic in here but
    // there doesn't seem to be a better way to do it.
    var innerNode = vnode;
    while (innerNode.componentInstance) {
      innerNode = innerNode.componentInstance._vnode;
      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {
        for (i = 0; i < cbs.activate.length; ++i) {
          cbs.activate[i](emptyNode, innerNode);
        }
        insertedVnodeQueue.push(innerNode);
        break
      }
    }
    // unlike a newly created component,
    // a reactivated keep-alive component doesn't insert itself
    insert(parentElm, vnode.elm, refElm);
  }

  function insert (parent, elm, ref) {
    if (isDef(parent)) {
      if (isDef(ref)) {
        if (ref.parentNode === parent) {
          nodeOps.insertBefore(parent, elm, ref);
        }
      } else {
        nodeOps.appendChild(parent, elm);
      }
    }
  }

  function createChildren (vnode, children, insertedVnodeQueue) {
    if (Array.isArray(children)) {
      for (var i = 0; i < children.length; ++i) {
        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true);
      }
    } else if (isPrimitive(vnode.text)) {
      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(vnode.text));
    }
  }

  function isPatchable (vnode) {
    while (vnode.componentInstance) {
      vnode = vnode.componentInstance._vnode;
    }
    return isDef(vnode.tag)
  }

  function invokeCreateHooks (vnode, insertedVnodeQueue) {
    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {
      cbs.create[i$1](emptyNode, vnode);
    }
    i = vnode.data.hook; // Reuse variable
    if (isDef(i)) {
      if (isDef(i.create)) { i.create(emptyNode, vnode); }
      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }
    }
  }

  // set scope id attribute for scoped CSS.
  // this is implemented as a special case to avoid the overhead
  // of going through the normal attribute patching process.
  function setScope (vnode) {
    var i;
    var ancestor = vnode;
    while (ancestor) {
      if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {
        nodeOps.setAttribute(vnode.elm, i, '');
      }
      ancestor = ancestor.parent;
    }
    // for slot content they should also get the scopeId from the host instance.
    if (isDef(i = activeInstance) &&
        i !== vnode.context &&
        isDef(i = i.$options._scopeId)) {
      nodeOps.setAttribute(vnode.elm, i, '');
    }
  }

  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {
    for (; startIdx <= endIdx; ++startIdx) {
      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm);
    }
  }

  function invokeDestroyHook (vnode) {
    var i, j;
    var data = vnode.data;
    if (isDef(data)) {
      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }
      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }
    }
    if (isDef(i = vnode.children)) {
      for (j = 0; j < vnode.children.length; ++j) {
        invokeDestroyHook(vnode.children[j]);
      }
    }
  }

  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {
    for (; startIdx <= endIdx; ++startIdx) {
      var ch = vnodes[startIdx];
      if (isDef(ch)) {
        if (isDef(ch.tag)) {
          removeAndInvokeRemoveHook(ch);
          invokeDestroyHook(ch);
        } else { // Text node
          removeNode(ch.elm);
        }
      }
    }
  }

  function removeAndInvokeRemoveHook (vnode, rm) {
    if (isDef(rm) || isDef(vnode.data)) {
      var i;
      var listeners = cbs.remove.length + 1;
      if (isDef(rm)) {
        // we have a recursively passed down rm callback
        // increase the listeners count
        rm.listeners += listeners;
      } else {
        // directly removing
        rm = createRmCb(vnode.elm, listeners);
      }
      // recursively invoke hooks on child component root node
      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {
        removeAndInvokeRemoveHook(i, rm);
      }
      for (i = 0; i < cbs.remove.length; ++i) {
        cbs.remove[i](vnode, rm);
      }
      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {
        i(vnode, rm);
      } else {
        rm();
      }
    } else {
      removeNode(vnode.elm);
    }
  }

  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {
    var oldStartIdx = 0;
    var newStartIdx = 0;
    var oldEndIdx = oldCh.length - 1;
    var oldStartVnode = oldCh[0];
    var oldEndVnode = oldCh[oldEndIdx];
    var newEndIdx = newCh.length - 1;
    var newStartVnode = newCh[0];
    var newEndVnode = newCh[newEndIdx];
    var oldKeyToIdx, idxInOld, elmToMove, refElm;

    // removeOnly is a special flag used only by <transition-group>
    // to ensure removed elements stay in correct relative positions
    // during leaving transitions
    var canMove = !removeOnly;

    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {
      if (isUndef(oldStartVnode)) {
        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left
      } else if (isUndef(oldEndVnode)) {
        oldEndVnode = oldCh[--oldEndIdx];
      } else if (sameVnode(oldStartVnode, newStartVnode)) {
        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);
        oldStartVnode = oldCh[++oldStartIdx];
        newStartVnode = newCh[++newStartIdx];
      } else if (sameVnode(oldEndVnode, newEndVnode)) {
        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);
        oldEndVnode = oldCh[--oldEndIdx];
        newEndVnode = newCh[--newEndIdx];
      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right
        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);
        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));
        oldStartVnode = oldCh[++oldStartIdx];
        newEndVnode = newCh[--newEndIdx];
      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left
        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);
        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);
        oldEndVnode = oldCh[--oldEndIdx];
        newStartVnode = newCh[++newStartIdx];
      } else {
        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }
        idxInOld = isDef(newStartVnode.key) ? oldKeyToIdx[newStartVnode.key] : null;
        if (isUndef(idxInOld)) { // New element
          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);
          newStartVnode = newCh[++newStartIdx];
        } else {
          elmToMove = oldCh[idxInOld];
          /* istanbul ignore if */
          if (false) {
            warn(
              'It seems there are duplicate keys that is causing an update error. ' +
              'Make sure each v-for item has a unique key.'
            );
          }
          if (sameVnode(elmToMove, newStartVnode)) {
            patchVnode(elmToMove, newStartVnode, insertedVnodeQueue);
            oldCh[idxInOld] = undefined;
            canMove && nodeOps.insertBefore(parentElm, newStartVnode.elm, oldStartVnode.elm);
            newStartVnode = newCh[++newStartIdx];
          } else {
            // same key but different element. treat as new element
            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);
            newStartVnode = newCh[++newStartIdx];
          }
        }
      }
    }
    if (oldStartIdx > oldEndIdx) {
      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;
      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);
    } else if (newStartIdx > newEndIdx) {
      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);
    }
  }

  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {
    if (oldVnode === vnode) {
      return
    }
    // reuse element for static trees.
    // note we only do this if the vnode is cloned -
    // if the new node is not cloned it means the render functions have been
    // reset by the hot-reload-api and we need to do a proper re-render.
    if (isTrue(vnode.isStatic) &&
        isTrue(oldVnode.isStatic) &&
        vnode.key === oldVnode.key &&
        (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))) {
      vnode.elm = oldVnode.elm;
      vnode.componentInstance = oldVnode.componentInstance;
      return
    }
    var i;
    var data = vnode.data;
    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {
      i(oldVnode, vnode);
    }
    var elm = vnode.elm = oldVnode.elm;
    var oldCh = oldVnode.children;
    var ch = vnode.children;
    if (isDef(data) && isPatchable(vnode)) {
      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }
      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }
    }
    if (isUndef(vnode.text)) {
      if (isDef(oldCh) && isDef(ch)) {
        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }
      } else if (isDef(ch)) {
        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }
        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);
      } else if (isDef(oldCh)) {
        removeVnodes(elm, oldCh, 0, oldCh.length - 1);
      } else if (isDef(oldVnode.text)) {
        nodeOps.setTextContent(elm, '');
      }
    } else if (oldVnode.text !== vnode.text) {
      nodeOps.setTextContent(elm, vnode.text);
    }
    if (isDef(data)) {
      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }
    }
  }

  function invokeInsertHook (vnode, queue, initial) {
    // delay insert hooks for component root nodes, invoke them after the
    // element is really inserted
    if (isTrue(initial) && isDef(vnode.parent)) {
      vnode.parent.data.pendingInsert = queue;
    } else {
      for (var i = 0; i < queue.length; ++i) {
        queue[i].data.hook.insert(queue[i]);
      }
    }
  }

  var bailed = false;
  // list of modules that can skip create hook during hydration because they
  // are already rendered on the client or has no need for initialization
  var isRenderedModule = makeMap('attrs,style,class,staticClass,staticStyle,key');

  // Note: this is a browser-only function so we can assume elms are DOM nodes.
  function hydrate (elm, vnode, insertedVnodeQueue) {
    if (false) {
      if (!assertNodeMatch(elm, vnode)) {
        return false
      }
    }
    vnode.elm = elm;
    var tag = vnode.tag;
    var data = vnode.data;
    var children = vnode.children;
    if (isDef(data)) {
      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }
      if (isDef(i = vnode.componentInstance)) {
        // child component. it should have hydrated its own tree.
        initComponent(vnode, insertedVnodeQueue);
        return true
      }
    }
    if (isDef(tag)) {
      if (isDef(children)) {
        // empty element, allow client to pick up and populate children
        if (!elm.hasChildNodes()) {
          createChildren(vnode, children, insertedVnodeQueue);
        } else {
          var childrenMatch = true;
          var childNode = elm.firstChild;
          for (var i$1 = 0; i$1 < children.length; i$1++) {
            if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue)) {
              childrenMatch = false;
              break
            }
            childNode = childNode.nextSibling;
          }
          // if childNode is not null, it means the actual childNodes list is
          // longer than the virtual children list.
          if (!childrenMatch || childNode) {
            if (false) {
              bailed = true;
              console.warn('Parent: ', elm);
              console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);
            }
            return false
          }
        }
      }
      if (isDef(data)) {
        for (var key in data) {
          if (!isRenderedModule(key)) {
            invokeCreateHooks(vnode, insertedVnodeQueue);
            break
          }
        }
      }
    } else if (elm.data !== vnode.text) {
      elm.data = vnode.text;
    }
    return true
  }

  function assertNodeMatch (node, vnode) {
    if (isDef(vnode.tag)) {
      return (
        vnode.tag.indexOf('vue-component') === 0 ||
        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())
      )
    } else {
      return node.nodeType === (vnode.isComment ? 8 : 3)
    }
  }

  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {
    if (isUndef(vnode)) {
      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }
      return
    }

    var isInitialPatch = false;
    var insertedVnodeQueue = [];

    if (isUndef(oldVnode)) {
      // empty mount (likely as component), create new root element
      isInitialPatch = true;
      createElm(vnode, insertedVnodeQueue, parentElm, refElm);
    } else {
      var isRealElement = isDef(oldVnode.nodeType);
      if (!isRealElement && sameVnode(oldVnode, vnode)) {
        // patch existing root node
        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);
      } else {
        if (isRealElement) {
          // mounting to a real element
          // check if this is server-rendered content and if we can perform
          // a successful hydration.
          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {
            oldVnode.removeAttribute(SSR_ATTR);
            hydrating = true;
          }
          if (isTrue(hydrating)) {
            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {
              invokeInsertHook(vnode, insertedVnodeQueue, true);
              return oldVnode
            } else if (false) {
              warn(
                'The client-side rendered virtual DOM tree is not matching ' +
                'server-rendered content. This is likely caused by incorrect ' +
                'HTML markup, for example nesting block-level elements inside ' +
                '<p>, or missing <tbody>. Bailing hydration and performing ' +
                'full client-side render.'
              );
            }
          }
          // either not server-rendered, or hydration failed.
          // create an empty node and replace it
          oldVnode = emptyNodeAt(oldVnode);
        }
        // replacing existing element
        var oldElm = oldVnode.elm;
        var parentElm$1 = nodeOps.parentNode(oldElm);
        createElm(
          vnode,
          insertedVnodeQueue,
          // extremely rare edge case: do not insert if old element is in a
          // leaving transition. Only happens when combining transition +
          // keep-alive + HOCs. (#4590)
          oldElm._leaveCb ? null : parentElm$1,
          nodeOps.nextSibling(oldElm)
        );

        if (isDef(vnode.parent)) {
          // component root element replaced.
          // update parent placeholder node element, recursively
          var ancestor = vnode.parent;
          while (ancestor) {
            ancestor.elm = vnode.elm;
            ancestor = ancestor.parent;
          }
          if (isPatchable(vnode)) {
            for (var i = 0; i < cbs.create.length; ++i) {
              cbs.create[i](emptyNode, vnode.parent);
            }
          }
        }

        if (isDef(parentElm$1)) {
          removeVnodes(parentElm$1, [oldVnode], 0, 0);
        } else if (isDef(oldVnode.tag)) {
          invokeDestroyHook(oldVnode);
        }
      }
    }

    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);
    return vnode.elm
  }
}

/*  */

var directives = {
  create: updateDirectives,
  update: updateDirectives,
  destroy: function unbindDirectives (vnode) {
    updateDirectives(vnode, emptyNode);
  }
};

function updateDirectives (oldVnode, vnode) {
  if (oldVnode.data.directives || vnode.data.directives) {
    _update(oldVnode, vnode);
  }
}

function _update (oldVnode, vnode) {
  var isCreate = oldVnode === emptyNode;
  var isDestroy = vnode === emptyNode;
  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);
  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);

  var dirsWithInsert = [];
  var dirsWithPostpatch = [];

  var key, oldDir, dir;
  for (key in newDirs) {
    oldDir = oldDirs[key];
    dir = newDirs[key];
    if (!oldDir) {
      // new directive, bind
      callHook$1(dir, 'bind', vnode, oldVnode);
      if (dir.def && dir.def.inserted) {
        dirsWithInsert.push(dir);
      }
    } else {
      // existing directive, update
      dir.oldValue = oldDir.value;
      callHook$1(dir, 'update', vnode, oldVnode);
      if (dir.def && dir.def.componentUpdated) {
        dirsWithPostpatch.push(dir);
      }
    }
  }

  if (dirsWithInsert.length) {
    var callInsert = function () {
      for (var i = 0; i < dirsWithInsert.length; i++) {
        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);
      }
    };
    if (isCreate) {
      mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', callInsert);
    } else {
      callInsert();
    }
  }

  if (dirsWithPostpatch.length) {
    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'postpatch', function () {
      for (var i = 0; i < dirsWithPostpatch.length; i++) {
        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);
      }
    });
  }

  if (!isCreate) {
    for (key in oldDirs) {
      if (!newDirs[key]) {
        // no longer present, unbind
        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);
      }
    }
  }
}

var emptyModifiers = Object.create(null);

function normalizeDirectives$1 (
  dirs,
  vm
) {
  var res = Object.create(null);
  if (!dirs) {
    return res
  }
  var i, dir;
  for (i = 0; i < dirs.length; i++) {
    dir = dirs[i];
    if (!dir.modifiers) {
      dir.modifiers = emptyModifiers;
    }
    res[getRawDirName(dir)] = dir;
    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);
  }
  return res
}

function getRawDirName (dir) {
  return dir.rawName || ((dir.name) + "." + (Object.keys(dir.modifiers || {}).join('.')))
}

function callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {
  var fn = dir.def && dir.def[hook];
  if (fn) {
    try {
      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);
    } catch (e) {
      handleError(e, vnode.context, ("directive " + (dir.name) + " " + hook + " hook"));
    }
  }
}

var baseModules = [
  ref,
  directives
];

/*  */

function updateAttrs (oldVnode, vnode) {
  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {
    return
  }
  var key, cur, old;
  var elm = vnode.elm;
  var oldAttrs = oldVnode.data.attrs || {};
  var attrs = vnode.data.attrs || {};
  // clone observed objects, as the user probably wants to mutate it
  if (isDef(attrs.__ob__)) {
    attrs = vnode.data.attrs = extend({}, attrs);
  }

  for (key in attrs) {
    cur = attrs[key];
    old = oldAttrs[key];
    if (old !== cur) {
      setAttr(elm, key, cur);
    }
  }
  // #4391: in IE9, setting type can reset value for input[type=radio]
  /* istanbul ignore if */
  if (isIE9 && attrs.value !== oldAttrs.value) {
    setAttr(elm, 'value', attrs.value);
  }
  for (key in oldAttrs) {
    if (isUndef(attrs[key])) {
      if (isXlink(key)) {
        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));
      } else if (!isEnumeratedAttr(key)) {
        elm.removeAttribute(key);
      }
    }
  }
}

function setAttr (el, key, value) {
  if (isBooleanAttr(key)) {
    // set attribute for blank value
    // e.g. <option disabled>Select one</option>
    if (isFalsyAttrValue(value)) {
      el.removeAttribute(key);
    } else {
      el.setAttribute(key, key);
    }
  } else if (isEnumeratedAttr(key)) {
    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');
  } else if (isXlink(key)) {
    if (isFalsyAttrValue(value)) {
      el.removeAttributeNS(xlinkNS, getXlinkProp(key));
    } else {
      el.setAttributeNS(xlinkNS, key, value);
    }
  } else {
    if (isFalsyAttrValue(value)) {
      el.removeAttribute(key);
    } else {
      el.setAttribute(key, value);
    }
  }
}

var attrs = {
  create: updateAttrs,
  update: updateAttrs
};

/*  */

function updateClass (oldVnode, vnode) {
  var el = vnode.elm;
  var data = vnode.data;
  var oldData = oldVnode.data;
  if (
    isUndef(data.staticClass) &&
    isUndef(data.class) && (
      isUndef(oldData) || (
        isUndef(oldData.staticClass) &&
        isUndef(oldData.class)
      )
    )
  ) {
    return
  }

  var cls = genClassForVnode(vnode);

  // handle transition classes
  var transitionClass = el._transitionClasses;
  if (isDef(transitionClass)) {
    cls = concat(cls, stringifyClass(transitionClass));
  }

  // set the class
  if (cls !== el._prevClass) {
    el.setAttribute('class', cls);
    el._prevClass = cls;
  }
}

var klass = {
  create: updateClass,
  update: updateClass
};

/*  */

var validDivisionCharRE = /[\w).+\-_$\]]/;

function parseFilters (exp) {
  var inSingle = false;
  var inDouble = false;
  var inTemplateString = false;
  var inRegex = false;
  var curly = 0;
  var square = 0;
  var paren = 0;
  var lastFilterIndex = 0;
  var c, prev, i, expression, filters;

  for (i = 0; i < exp.length; i++) {
    prev = c;
    c = exp.charCodeAt(i);
    if (inSingle) {
      if (c === 0x27 && prev !== 0x5C) { inSingle = false; }
    } else if (inDouble) {
      if (c === 0x22 && prev !== 0x5C) { inDouble = false; }
    } else if (inTemplateString) {
      if (c === 0x60 && prev !== 0x5C) { inTemplateString = false; }
    } else if (inRegex) {
      if (c === 0x2f && prev !== 0x5C) { inRegex = false; }
    } else if (
      c === 0x7C && // pipe
      exp.charCodeAt(i + 1) !== 0x7C &&
      exp.charCodeAt(i - 1) !== 0x7C &&
      !curly && !square && !paren
    ) {
      if (expression === undefined) {
        // first filter, end of expression
        lastFilterIndex = i + 1;
        expression = exp.slice(0, i).trim();
      } else {
        pushFilter();
      }
    } else {
      switch (c) {
        case 0x22: inDouble = true; break         // "
        case 0x27: inSingle = true; break         // '
        case 0x60: inTemplateString = true; break // `
        case 0x28: paren++; break                 // (
        case 0x29: paren--; break                 // )
        case 0x5B: square++; break                // [
        case 0x5D: square--; break                // ]
        case 0x7B: curly++; break                 // {
        case 0x7D: curly--; break                 // }
      }
      if (c === 0x2f) { // /
        var j = i - 1;
        var p = (void 0);
        // find first non-whitespace prev char
        for (; j >= 0; j--) {
          p = exp.charAt(j);
          if (p !== ' ') { break }
        }
        if (!p || !validDivisionCharRE.test(p)) {
          inRegex = true;
        }
      }
    }
  }

  if (expression === undefined) {
    expression = exp.slice(0, i).trim();
  } else if (lastFilterIndex !== 0) {
    pushFilter();
  }

  function pushFilter () {
    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());
    lastFilterIndex = i + 1;
  }

  if (filters) {
    for (i = 0; i < filters.length; i++) {
      expression = wrapFilter(expression, filters[i]);
    }
  }

  return expression
}

function wrapFilter (exp, filter) {
  var i = filter.indexOf('(');
  if (i < 0) {
    // _f: resolveFilter
    return ("_f(\"" + filter + "\")(" + exp + ")")
  } else {
    var name = filter.slice(0, i);
    var args = filter.slice(i + 1);
    return ("_f(\"" + name + "\")(" + exp + "," + args)
  }
}

/*  */

function baseWarn (msg) {
  console.error(("[Vue compiler]: " + msg));
}

function pluckModuleFunction (
  modules,
  key
) {
  return modules
    ? modules.map(function (m) { return m[key]; }).filter(function (_) { return _; })
    : []
}

function addProp (el, name, value) {
  (el.props || (el.props = [])).push({ name: name, value: value });
}

function addAttr (el, name, value) {
  (el.attrs || (el.attrs = [])).push({ name: name, value: value });
}

function addDirective (
  el,
  name,
  rawName,
  value,
  arg,
  modifiers
) {
  (el.directives || (el.directives = [])).push({ name: name, rawName: rawName, value: value, arg: arg, modifiers: modifiers });
}

function addHandler (
  el,
  name,
  value,
  modifiers,
  important,
  warn
) {
  // warn prevent and passive modifier
  /* istanbul ignore if */
  if (
    false
  ) {
    warn(
      'passive and prevent can\'t be used together. ' +
      'Passive handler can\'t prevent default event.'
    );
  }
  // check capture modifier
  if (modifiers && modifiers.capture) {
    delete modifiers.capture;
    name = '!' + name; // mark the event as captured
  }
  if (modifiers && modifiers.once) {
    delete modifiers.once;
    name = '~' + name; // mark the event as once
  }
  /* istanbul ignore if */
  if (modifiers && modifiers.passive) {
    delete modifiers.passive;
    name = '&' + name; // mark the event as passive
  }
  var events;
  if (modifiers && modifiers.native) {
    delete modifiers.native;
    events = el.nativeEvents || (el.nativeEvents = {});
  } else {
    events = el.events || (el.events = {});
  }
  var newHandler = { value: value, modifiers: modifiers };
  var handlers = events[name];
  /* istanbul ignore if */
  if (Array.isArray(handlers)) {
    important ? handlers.unshift(newHandler) : handlers.push(newHandler);
  } else if (handlers) {
    events[name] = important ? [newHandler, handlers] : [handlers, newHandler];
  } else {
    events[name] = newHandler;
  }
}

function getBindingAttr (
  el,
  name,
  getStatic
) {
  var dynamicValue =
    getAndRemoveAttr(el, ':' + name) ||
    getAndRemoveAttr(el, 'v-bind:' + name);
  if (dynamicValue != null) {
    return parseFilters(dynamicValue)
  } else if (getStatic !== false) {
    var staticValue = getAndRemoveAttr(el, name);
    if (staticValue != null) {
      return JSON.stringify(staticValue)
    }
  }
}

function getAndRemoveAttr (el, name) {
  var val;
  if ((val = el.attrsMap[name]) != null) {
    var list = el.attrsList;
    for (var i = 0, l = list.length; i < l; i++) {
      if (list[i].name === name) {
        list.splice(i, 1);
        break
      }
    }
  }
  return val
}

/*  */

/**
 * Cross-platform code generation for component v-model
 */
function genComponentModel (
  el,
  value,
  modifiers
) {
  var ref = modifiers || {};
  var number = ref.number;
  var trim = ref.trim;

  var baseValueExpression = '$$v';
  var valueExpression = baseValueExpression;
  if (trim) {
    valueExpression =
      "(typeof " + baseValueExpression + " === 'string'" +
        "? " + baseValueExpression + ".trim()" +
        ": " + baseValueExpression + ")";
  }
  if (number) {
    valueExpression = "_n(" + valueExpression + ")";
  }
  var assignment = genAssignmentCode(value, valueExpression);

  el.model = {
    value: ("(" + value + ")"),
    expression: ("\"" + value + "\""),
    callback: ("function (" + baseValueExpression + ") {" + assignment + "}")
  };
}

/**
 * Cross-platform codegen helper for generating v-model value assignment code.
 */
function genAssignmentCode (
  value,
  assignment
) {
  var modelRs = parseModel(value);
  if (modelRs.idx === null) {
    return (value + "=" + assignment)
  } else {
    return "var $$exp = " + (modelRs.exp) + ", $$idx = " + (modelRs.idx) + ";" +
      "if (!Array.isArray($$exp)){" +
        value + "=" + assignment + "}" +
      "else{$$exp.splice($$idx, 1, " + assignment + ")}"
  }
}

/**
 * parse directive model to do the array update transform. a[idx] = val => $$a.splice($$idx, 1, val)
 *
 * for loop possible cases:
 *
 * - test
 * - test[idx]
 * - test[test1[idx]]
 * - test["a"][idx]
 * - xxx.test[a[a].test1[idx]]
 * - test.xxx.a["asa"][test1[idx]]
 *
 */

var len;
var str;
var chr;
var index$1;
var expressionPos;
var expressionEndPos;

function parseModel (val) {
  str = val;
  len = str.length;
  index$1 = expressionPos = expressionEndPos = 0;

  if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {
    return {
      exp: val,
      idx: null
    }
  }

  while (!eof()) {
    chr = next();
    /* istanbul ignore if */
    if (isStringStart(chr)) {
      parseString(chr);
    } else if (chr === 0x5B) {
      parseBracket(chr);
    }
  }

  return {
    exp: val.substring(0, expressionPos),
    idx: val.substring(expressionPos + 1, expressionEndPos)
  }
}

function next () {
  return str.charCodeAt(++index$1)
}

function eof () {
  return index$1 >= len
}

function isStringStart (chr) {
  return chr === 0x22 || chr === 0x27
}

function parseBracket (chr) {
  var inBracket = 1;
  expressionPos = index$1;
  while (!eof()) {
    chr = next();
    if (isStringStart(chr)) {
      parseString(chr);
      continue
    }
    if (chr === 0x5B) { inBracket++; }
    if (chr === 0x5D) { inBracket--; }
    if (inBracket === 0) {
      expressionEndPos = index$1;
      break
    }
  }
}

function parseString (chr) {
  var stringQuote = chr;
  while (!eof()) {
    chr = next();
    if (chr === stringQuote) {
      break
    }
  }
}

/*  */

var warn$1;

// in some cases, the event used has to be determined at runtime
// so we used some reserved tokens during compile.
var RANGE_TOKEN = '__r';
var CHECKBOX_RADIO_TOKEN = '__c';

function model (
  el,
  dir,
  _warn
) {
  warn$1 = _warn;
  var value = dir.value;
  var modifiers = dir.modifiers;
  var tag = el.tag;
  var type = el.attrsMap.type;

  if (false) {
    var dynamicType = el.attrsMap['v-bind:type'] || el.attrsMap[':type'];
    if (tag === 'input' && dynamicType) {
      warn$1(
        "<input :type=\"" + dynamicType + "\" v-model=\"" + value + "\">:\n" +
        "v-model does not support dynamic input types. Use v-if branches instead."
      );
    }
    // inputs with type="file" are read only and setting the input's
    // value will throw an error.
    if (tag === 'input' && type === 'file') {
      warn$1(
        "<" + (el.tag) + " v-model=\"" + value + "\" type=\"file\">:\n" +
        "File inputs are read only. Use a v-on:change listener instead."
      );
    }
  }

  if (tag === 'select') {
    genSelect(el, value, modifiers);
  } else if (tag === 'input' && type === 'checkbox') {
    genCheckboxModel(el, value, modifiers);
  } else if (tag === 'input' && type === 'radio') {
    genRadioModel(el, value, modifiers);
  } else if (tag === 'input' || tag === 'textarea') {
    genDefaultModel(el, value, modifiers);
  } else if (!config.isReservedTag(tag)) {
    genComponentModel(el, value, modifiers);
    // component v-model doesn't need extra runtime
    return false
  } else if (false) {
    warn$1(
      "<" + (el.tag) + " v-model=\"" + value + "\">: " +
      "v-model is not supported on this element type. " +
      'If you are working with contenteditable, it\'s recommended to ' +
      'wrap a library dedicated for that purpose inside a custom component.'
    );
  }

  // ensure runtime directive metadata
  return true
}

function genCheckboxModel (
  el,
  value,
  modifiers
) {
  var number = modifiers && modifiers.number;
  var valueBinding = getBindingAttr(el, 'value') || 'null';
  var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';
  var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';
  addProp(el, 'checked',
    "Array.isArray(" + value + ")" +
      "?_i(" + value + "," + valueBinding + ")>-1" + (
        trueValueBinding === 'true'
          ? (":(" + value + ")")
          : (":_q(" + value + "," + trueValueBinding + ")")
      )
  );
  addHandler(el, CHECKBOX_RADIO_TOKEN,
    "var $$a=" + value + "," +
        '$$el=$event.target,' +
        "$$c=$$el.checked?(" + trueValueBinding + "):(" + falseValueBinding + ");" +
    'if(Array.isArray($$a)){' +
      "var $$v=" + (number ? '_n(' + valueBinding + ')' : valueBinding) + "," +
          '$$i=_i($$a,$$v);' +
      "if($$c){$$i<0&&(" + value + "=$$a.concat($$v))}" +
      "else{$$i>-1&&(" + value + "=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}" +
    "}else{" + (genAssignmentCode(value, '$$c')) + "}",
    null, true
  );
}

function genRadioModel (
    el,
    value,
    modifiers
) {
  var number = modifiers && modifiers.number;
  var valueBinding = getBindingAttr(el, 'value') || 'null';
  valueBinding = number ? ("_n(" + valueBinding + ")") : valueBinding;
  addProp(el, 'checked', ("_q(" + value + "," + valueBinding + ")"));
  addHandler(el, CHECKBOX_RADIO_TOKEN, genAssignmentCode(value, valueBinding), null, true);
}

function genSelect (
    el,
    value,
    modifiers
) {
  var number = modifiers && modifiers.number;
  var selectedVal = "Array.prototype.filter" +
    ".call($event.target.options,function(o){return o.selected})" +
    ".map(function(o){var val = \"_value\" in o ? o._value : o.value;" +
    "return " + (number ? '_n(val)' : 'val') + "})";

  var assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]';
  var code = "var $$selectedVal = " + selectedVal + ";";
  code = code + " " + (genAssignmentCode(value, assignment));
  addHandler(el, 'change', code, null, true);
}

function genDefaultModel (
  el,
  value,
  modifiers
) {
  var type = el.attrsMap.type;
  var ref = modifiers || {};
  var lazy = ref.lazy;
  var number = ref.number;
  var trim = ref.trim;
  var needCompositionGuard = !lazy && type !== 'range';
  var event = lazy
    ? 'change'
    : type === 'range'
      ? RANGE_TOKEN
      : 'input';

  var valueExpression = '$event.target.value';
  if (trim) {
    valueExpression = "$event.target.value.trim()";
  }
  if (number) {
    valueExpression = "_n(" + valueExpression + ")";
  }

  var code = genAssignmentCode(value, valueExpression);
  if (needCompositionGuard) {
    code = "if($event.target.composing)return;" + code;
  }

  addProp(el, 'value', ("(" + value + ")"));
  addHandler(el, event, code, null, true);
  if (trim || number || type === 'number') {
    addHandler(el, 'blur', '$forceUpdate()');
  }
}

/*  */

// normalize v-model event tokens that can only be determined at runtime.
// it's important to place the event as the first in the array because
// the whole point is ensuring the v-model callback gets called before
// user-attached handlers.
function normalizeEvents (on) {
  var event;
  /* istanbul ignore if */
  if (isDef(on[RANGE_TOKEN])) {
    // IE input[type=range] only supports `change` event
    event = isIE ? 'change' : 'input';
    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);
    delete on[RANGE_TOKEN];
  }
  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {
    // Chrome fires microtasks in between click/change, leads to #4521
    event = isChrome ? 'click' : 'change';
    on[event] = [].concat(on[CHECKBOX_RADIO_TOKEN], on[event] || []);
    delete on[CHECKBOX_RADIO_TOKEN];
  }
}

var target$1;

function add$1 (
  event,
  handler,
  once$$1,
  capture,
  passive
) {
  if (once$$1) {
    var oldHandler = handler;
    var _target = target$1; // save current target element in closure
    handler = function (ev) {
      var res = arguments.length === 1
        ? oldHandler(ev)
        : oldHandler.apply(null, arguments);
      if (res !== null) {
        remove$2(event, handler, capture, _target);
      }
    };
  }
  target$1.addEventListener(
    event,
    handler,
    supportsPassive
      ? { capture: capture, passive: passive }
      : capture
  );
}

function remove$2 (
  event,
  handler,
  capture,
  _target
) {
  (_target || target$1).removeEventListener(event, handler, capture);
}

function updateDOMListeners (oldVnode, vnode) {
  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {
    return
  }
  var on = vnode.data.on || {};
  var oldOn = oldVnode.data.on || {};
  target$1 = vnode.elm;
  normalizeEvents(on);
  updateListeners(on, oldOn, add$1, remove$2, vnode.context);
}

var events = {
  create: updateDOMListeners,
  update: updateDOMListeners
};

/*  */

function updateDOMProps (oldVnode, vnode) {
  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {
    return
  }
  var key, cur;
  var elm = vnode.elm;
  var oldProps = oldVnode.data.domProps || {};
  var props = vnode.data.domProps || {};
  // clone observed objects, as the user probably wants to mutate it
  if (isDef(props.__ob__)) {
    props = vnode.data.domProps = extend({}, props);
  }

  for (key in oldProps) {
    if (isUndef(props[key])) {
      elm[key] = '';
    }
  }
  for (key in props) {
    cur = props[key];
    // ignore children if the node has textContent or innerHTML,
    // as these will throw away existing DOM nodes and cause removal errors
    // on subsequent patches (#3360)
    if (key === 'textContent' || key === 'innerHTML') {
      if (vnode.children) { vnode.children.length = 0; }
      if (cur === oldProps[key]) { continue }
    }

    if (key === 'value') {
      // store value as _value as well since
      // non-string values will be stringified
      elm._value = cur;
      // avoid resetting cursor position when value is the same
      var strCur = cur == null ? '' : String(cur);
      if (shouldUpdateValue(elm, vnode, strCur)) {
        elm.value = strCur;
      }
    } else {
      elm[key] = cur;
    }
  }
}

// check platforms/web/util/attrs.js acceptValue


function shouldUpdateValue (
  elm,
  vnode,
  checkVal
) {
  return (!elm.composing && (
    vnode.tag === 'option' ||
    isDirty(elm, checkVal) ||
    isInputChanged(elm, checkVal)
  ))
}

function isDirty (elm, checkVal) {
  // return true when textbox (.number and .trim) loses focus and its value is not equal to the updated value
  return document.activeElement !== elm && elm.value !== checkVal
}

function isInputChanged (elm, newVal) {
  var value = elm.value;
  var modifiers = elm._vModifiers; // injected by v-model runtime
  if ((isDef(modifiers) && modifiers.number) || elm.type === 'number') {
    return toNumber(value) !== toNumber(newVal)
  }
  if (isDef(modifiers) && modifiers.trim) {
    return value.trim() !== newVal.trim()
  }
  return value !== newVal
}

var domProps = {
  create: updateDOMProps,
  update: updateDOMProps
};

/*  */

var parseStyleText = cached(function (cssText) {
  var res = {};
  var listDelimiter = /;(?![^(]*\))/g;
  var propertyDelimiter = /:(.+)/;
  cssText.split(listDelimiter).forEach(function (item) {
    if (item) {
      var tmp = item.split(propertyDelimiter);
      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());
    }
  });
  return res
});

// merge static and dynamic style data on the same vnode
function normalizeStyleData (data) {
  var style = normalizeStyleBinding(data.style);
  // static style is pre-processed into an object during compilation
  // and is always a fresh object, so it's safe to merge into it
  return data.staticStyle
    ? extend(data.staticStyle, style)
    : style
}

// normalize possible array / string values into Object
function normalizeStyleBinding (bindingStyle) {
  if (Array.isArray(bindingStyle)) {
    return toObject(bindingStyle)
  }
  if (typeof bindingStyle === 'string') {
    return parseStyleText(bindingStyle)
  }
  return bindingStyle
}

/**
 * parent component style should be after child's
 * so that parent component's style could override it
 */
function getStyle (vnode, checkChild) {
  var res = {};
  var styleData;

  if (checkChild) {
    var childNode = vnode;
    while (childNode.componentInstance) {
      childNode = childNode.componentInstance._vnode;
      if (childNode.data && (styleData = normalizeStyleData(childNode.data))) {
        extend(res, styleData);
      }
    }
  }

  if ((styleData = normalizeStyleData(vnode.data))) {
    extend(res, styleData);
  }

  var parentNode = vnode;
  while ((parentNode = parentNode.parent)) {
    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {
      extend(res, styleData);
    }
  }
  return res
}

/*  */

var cssVarRE = /^--/;
var importantRE = /\s*!important$/;
var setProp = function (el, name, val) {
  /* istanbul ignore if */
  if (cssVarRE.test(name)) {
    el.style.setProperty(name, val);
  } else if (importantRE.test(val)) {
    el.style.setProperty(name, val.replace(importantRE, ''), 'important');
  } else {
    var normalizedName = normalize(name);
    if (Array.isArray(val)) {
      // Support values array created by autoprefixer, e.g.
      // {display: ["-webkit-box", "-ms-flexbox", "flex"]}
      // Set them one by one, and the browser will only set those it can recognize
      for (var i = 0, len = val.length; i < len; i++) {
        el.style[normalizedName] = val[i];
      }
    } else {
      el.style[normalizedName] = val;
    }
  }
};

var prefixes = ['Webkit', 'Moz', 'ms'];

var testEl;
var normalize = cached(function (prop) {
  testEl = testEl || document.createElement('div');
  prop = camelize(prop);
  if (prop !== 'filter' && (prop in testEl.style)) {
    return prop
  }
  var upper = prop.charAt(0).toUpperCase() + prop.slice(1);
  for (var i = 0; i < prefixes.length; i++) {
    var prefixed = prefixes[i] + upper;
    if (prefixed in testEl.style) {
      return prefixed
    }
  }
});

function updateStyle (oldVnode, vnode) {
  var data = vnode.data;
  var oldData = oldVnode.data;

  if (isUndef(data.staticStyle) && isUndef(data.style) &&
      isUndef(oldData.staticStyle) && isUndef(oldData.style)) {
    return
  }

  var cur, name;
  var el = vnode.elm;
  var oldStaticStyle = oldData.staticStyle;
  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};

  // if static style exists, stylebinding already merged into it when doing normalizeStyleData
  var oldStyle = oldStaticStyle || oldStyleBinding;

  var style = normalizeStyleBinding(vnode.data.style) || {};

  // store normalized style under a different key for next diff
  // make sure to clone it if it's reactive, since the user likley wants
  // to mutate it.
  vnode.data.normalizedStyle = isDef(style.__ob__)
    ? extend({}, style)
    : style;

  var newStyle = getStyle(vnode, true);

  for (name in oldStyle) {
    if (isUndef(newStyle[name])) {
      setProp(el, name, '');
    }
  }
  for (name in newStyle) {
    cur = newStyle[name];
    if (cur !== oldStyle[name]) {
      // ie9 setting to null has no effect, must use empty string
      setProp(el, name, cur == null ? '' : cur);
    }
  }
}

var style = {
  create: updateStyle,
  update: updateStyle
};

/*  */

/**
 * Add class with compatibility for SVG since classList is not supported on
 * SVG elements in IE
 */
function addClass (el, cls) {
  /* istanbul ignore if */
  if (!cls || !(cls = cls.trim())) {
    return
  }

  /* istanbul ignore else */
  if (el.classList) {
    if (cls.indexOf(' ') > -1) {
      cls.split(/\s+/).forEach(function (c) { return el.classList.add(c); });
    } else {
      el.classList.add(cls);
    }
  } else {
    var cur = " " + (el.getAttribute('class') || '') + " ";
    if (cur.indexOf(' ' + cls + ' ') < 0) {
      el.setAttribute('class', (cur + cls).trim());
    }
  }
}

/**
 * Remove class with compatibility for SVG since classList is not supported on
 * SVG elements in IE
 */
function removeClass (el, cls) {
  /* istanbul ignore if */
  if (!cls || !(cls = cls.trim())) {
    return
  }

  /* istanbul ignore else */
  if (el.classList) {
    if (cls.indexOf(' ') > -1) {
      cls.split(/\s+/).forEach(function (c) { return el.classList.remove(c); });
    } else {
      el.classList.remove(cls);
    }
  } else {
    var cur = " " + (el.getAttribute('class') || '') + " ";
    var tar = ' ' + cls + ' ';
    while (cur.indexOf(tar) >= 0) {
      cur = cur.replace(tar, ' ');
    }
    el.setAttribute('class', cur.trim());
  }
}

/*  */

function resolveTransition (def$$1) {
  if (!def$$1) {
    return
  }
  /* istanbul ignore else */
  if (typeof def$$1 === 'object') {
    var res = {};
    if (def$$1.css !== false) {
      extend(res, autoCssTransition(def$$1.name || 'v'));
    }
    extend(res, def$$1);
    return res
  } else if (typeof def$$1 === 'string') {
    return autoCssTransition(def$$1)
  }
}

var autoCssTransition = cached(function (name) {
  return {
    enterClass: (name + "-enter"),
    enterToClass: (name + "-enter-to"),
    enterActiveClass: (name + "-enter-active"),
    leaveClass: (name + "-leave"),
    leaveToClass: (name + "-leave-to"),
    leaveActiveClass: (name + "-leave-active")
  }
});

var hasTransition = inBrowser && !isIE9;
var TRANSITION = 'transition';
var ANIMATION = 'animation';

// Transition property/event sniffing
var transitionProp = 'transition';
var transitionEndEvent = 'transitionend';
var animationProp = 'animation';
var animationEndEvent = 'animationend';
if (hasTransition) {
  /* istanbul ignore if */
  if (window.ontransitionend === undefined &&
    window.onwebkittransitionend !== undefined) {
    transitionProp = 'WebkitTransition';
    transitionEndEvent = 'webkitTransitionEnd';
  }
  if (window.onanimationend === undefined &&
    window.onwebkitanimationend !== undefined) {
    animationProp = 'WebkitAnimation';
    animationEndEvent = 'webkitAnimationEnd';
  }
}

// binding to window is necessary to make hot reload work in IE in strict mode
var raf = inBrowser && window.requestAnimationFrame
  ? window.requestAnimationFrame.bind(window)
  : setTimeout;

function nextFrame (fn) {
  raf(function () {
    raf(fn);
  });
}

function addTransitionClass (el, cls) {
  (el._transitionClasses || (el._transitionClasses = [])).push(cls);
  addClass(el, cls);
}

function removeTransitionClass (el, cls) {
  if (el._transitionClasses) {
    remove(el._transitionClasses, cls);
  }
  removeClass(el, cls);
}

function whenTransitionEnds (
  el,
  expectedType,
  cb
) {
  var ref = getTransitionInfo(el, expectedType);
  var type = ref.type;
  var timeout = ref.timeout;
  var propCount = ref.propCount;
  if (!type) { return cb() }
  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;
  var ended = 0;
  var end = function () {
    el.removeEventListener(event, onEnd);
    cb();
  };
  var onEnd = function (e) {
    if (e.target === el) {
      if (++ended >= propCount) {
        end();
      }
    }
  };
  setTimeout(function () {
    if (ended < propCount) {
      end();
    }
  }, timeout + 1);
  el.addEventListener(event, onEnd);
}

var transformRE = /\b(transform|all)(,|$)/;

function getTransitionInfo (el, expectedType) {
  var styles = window.getComputedStyle(el);
  var transitionDelays = styles[transitionProp + 'Delay'].split(', ');
  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');
  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);
  var animationDelays = styles[animationProp + 'Delay'].split(', ');
  var animationDurations = styles[animationProp + 'Duration'].split(', ');
  var animationTimeout = getTimeout(animationDelays, animationDurations);

  var type;
  var timeout = 0;
  var propCount = 0;
  /* istanbul ignore if */
  if (expectedType === TRANSITION) {
    if (transitionTimeout > 0) {
      type = TRANSITION;
      timeout = transitionTimeout;
      propCount = transitionDurations.length;
    }
  } else if (expectedType === ANIMATION) {
    if (animationTimeout > 0) {
      type = ANIMATION;
      timeout = animationTimeout;
      propCount = animationDurations.length;
    }
  } else {
    timeout = Math.max(transitionTimeout, animationTimeout);
    type = timeout > 0
      ? transitionTimeout > animationTimeout
        ? TRANSITION
        : ANIMATION
      : null;
    propCount = type
      ? type === TRANSITION
        ? transitionDurations.length
        : animationDurations.length
      : 0;
  }
  var hasTransform =
    type === TRANSITION &&
    transformRE.test(styles[transitionProp + 'Property']);
  return {
    type: type,
    timeout: timeout,
    propCount: propCount,
    hasTransform: hasTransform
  }
}

function getTimeout (delays, durations) {
  /* istanbul ignore next */
  while (delays.length < durations.length) {
    delays = delays.concat(delays);
  }

  return Math.max.apply(null, durations.map(function (d, i) {
    return toMs(d) + toMs(delays[i])
  }))
}

function toMs (s) {
  return Number(s.slice(0, -1)) * 1000
}

/*  */

function enter (vnode, toggleDisplay) {
  var el = vnode.elm;

  // call leave callback now
  if (isDef(el._leaveCb)) {
    el._leaveCb.cancelled = true;
    el._leaveCb();
  }

  var data = resolveTransition(vnode.data.transition);
  if (isUndef(data)) {
    return
  }

  /* istanbul ignore if */
  if (isDef(el._enterCb) || el.nodeType !== 1) {
    return
  }

  var ref = (data);
  var css = ref.css;
  var type = ref.type;
  var enterClass = ref.enterClass;
  var enterToClass = ref.enterToClass;
  var enterActiveClass = ref.enterActiveClass;
  var appearClass = ref.appearClass;
  var appearToClass = ref.appearToClass;
  var appearActiveClass = ref.appearActiveClass;
  var beforeEnter = ref.beforeEnter;
  var enter = ref.enter;
  var afterEnter = ref.afterEnter;
  var enterCancelled = ref.enterCancelled;
  var beforeAppear = ref.beforeAppear;
  var appear = ref.appear;
  var afterAppear = ref.afterAppear;
  var appearCancelled = ref.appearCancelled;
  var duration = ref.duration;

  // activeInstance will always be the <transition> component managing this
  // transition. One edge case to check is when the <transition> is placed
  // as the root node of a child component. In that case we need to check
  // <transition>'s parent for appear check.
  var context = activeInstance;
  var transitionNode = activeInstance.$vnode;
  while (transitionNode && transitionNode.parent) {
    transitionNode = transitionNode.parent;
    context = transitionNode.context;
  }

  var isAppear = !context._isMounted || !vnode.isRootInsert;

  if (isAppear && !appear && appear !== '') {
    return
  }

  var startClass = isAppear && appearClass
    ? appearClass
    : enterClass;
  var activeClass = isAppear && appearActiveClass
    ? appearActiveClass
    : enterActiveClass;
  var toClass = isAppear && appearToClass
    ? appearToClass
    : enterToClass;

  var beforeEnterHook = isAppear
    ? (beforeAppear || beforeEnter)
    : beforeEnter;
  var enterHook = isAppear
    ? (typeof appear === 'function' ? appear : enter)
    : enter;
  var afterEnterHook = isAppear
    ? (afterAppear || afterEnter)
    : afterEnter;
  var enterCancelledHook = isAppear
    ? (appearCancelled || enterCancelled)
    : enterCancelled;

  var explicitEnterDuration = toNumber(
    isObject(duration)
      ? duration.enter
      : duration
  );

  if (false) {
    checkDuration(explicitEnterDuration, 'enter', vnode);
  }

  var expectsCSS = css !== false && !isIE9;
  var userWantsControl = getHookArgumentsLength(enterHook);

  var cb = el._enterCb = once(function () {
    if (expectsCSS) {
      removeTransitionClass(el, toClass);
      removeTransitionClass(el, activeClass);
    }
    if (cb.cancelled) {
      if (expectsCSS) {
        removeTransitionClass(el, startClass);
      }
      enterCancelledHook && enterCancelledHook(el);
    } else {
      afterEnterHook && afterEnterHook(el);
    }
    el._enterCb = null;
  });

  if (!vnode.data.show) {
    // remove pending leave element on enter by injecting an insert hook
    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', function () {
      var parent = el.parentNode;
      var pendingNode = parent && parent._pending && parent._pending[vnode.key];
      if (pendingNode &&
          pendingNode.tag === vnode.tag &&
          pendingNode.elm._leaveCb) {
        pendingNode.elm._leaveCb();
      }
      enterHook && enterHook(el, cb);
    });
  }

  // start enter transition
  beforeEnterHook && beforeEnterHook(el);
  if (expectsCSS) {
    addTransitionClass(el, startClass);
    addTransitionClass(el, activeClass);
    nextFrame(function () {
      addTransitionClass(el, toClass);
      removeTransitionClass(el, startClass);
      if (!cb.cancelled && !userWantsControl) {
        if (isValidDuration(explicitEnterDuration)) {
          setTimeout(cb, explicitEnterDuration);
        } else {
          whenTransitionEnds(el, type, cb);
        }
      }
    });
  }

  if (vnode.data.show) {
    toggleDisplay && toggleDisplay();
    enterHook && enterHook(el, cb);
  }

  if (!expectsCSS && !userWantsControl) {
    cb();
  }
}

function leave (vnode, rm) {
  var el = vnode.elm;

  // call enter callback now
  if (isDef(el._enterCb)) {
    el._enterCb.cancelled = true;
    el._enterCb();
  }

  var data = resolveTransition(vnode.data.transition);
  if (isUndef(data)) {
    return rm()
  }

  /* istanbul ignore if */
  if (isDef(el._leaveCb) || el.nodeType !== 1) {
    return
  }

  var ref = (data);
  var css = ref.css;
  var type = ref.type;
  var leaveClass = ref.leaveClass;
  var leaveToClass = ref.leaveToClass;
  var leaveActiveClass = ref.leaveActiveClass;
  var beforeLeave = ref.beforeLeave;
  var leave = ref.leave;
  var afterLeave = ref.afterLeave;
  var leaveCancelled = ref.leaveCancelled;
  var delayLeave = ref.delayLeave;
  var duration = ref.duration;

  var expectsCSS = css !== false && !isIE9;
  var userWantsControl = getHookArgumentsLength(leave);

  var explicitLeaveDuration = toNumber(
    isObject(duration)
      ? duration.leave
      : duration
  );

  if (false) {
    checkDuration(explicitLeaveDuration, 'leave', vnode);
  }

  var cb = el._leaveCb = once(function () {
    if (el.parentNode && el.parentNode._pending) {
      el.parentNode._pending[vnode.key] = null;
    }
    if (expectsCSS) {
      removeTransitionClass(el, leaveToClass);
      removeTransitionClass(el, leaveActiveClass);
    }
    if (cb.cancelled) {
      if (expectsCSS) {
        removeTransitionClass(el, leaveClass);
      }
      leaveCancelled && leaveCancelled(el);
    } else {
      rm();
      afterLeave && afterLeave(el);
    }
    el._leaveCb = null;
  });

  if (delayLeave) {
    delayLeave(performLeave);
  } else {
    performLeave();
  }

  function performLeave () {
    // the delayed leave may have already been cancelled
    if (cb.cancelled) {
      return
    }
    // record leaving element
    if (!vnode.data.show) {
      (el.parentNode._pending || (el.parentNode._pending = {}))[vnode.key] = vnode;
    }
    beforeLeave && beforeLeave(el);
    if (expectsCSS) {
      addTransitionClass(el, leaveClass);
      addTransitionClass(el, leaveActiveClass);
      nextFrame(function () {
        addTransitionClass(el, leaveToClass);
        removeTransitionClass(el, leaveClass);
        if (!cb.cancelled && !userWantsControl) {
          if (isValidDuration(explicitLeaveDuration)) {
            setTimeout(cb, explicitLeaveDuration);
          } else {
            whenTransitionEnds(el, type, cb);
          }
        }
      });
    }
    leave && leave(el, cb);
    if (!expectsCSS && !userWantsControl) {
      cb();
    }
  }
}

// only used in dev mode
function checkDuration (val, name, vnode) {
  if (typeof val !== 'number') {
    warn(
      "<transition> explicit " + name + " duration is not a valid number - " +
      "got " + (JSON.stringify(val)) + ".",
      vnode.context
    );
  } else if (isNaN(val)) {
    warn(
      "<transition> explicit " + name + " duration is NaN - " +
      'the duration expression might be incorrect.',
      vnode.context
    );
  }
}

function isValidDuration (val) {
  return typeof val === 'number' && !isNaN(val)
}

/**
 * Normalize a transition hook's argument length. The hook may be:
 * - a merged hook (invoker) with the original in .fns
 * - a wrapped component method (check ._length)
 * - a plain function (.length)
 */
function getHookArgumentsLength (fn) {
  if (isUndef(fn)) {
    return false
  }
  var invokerFns = fn.fns;
  if (isDef(invokerFns)) {
    // invoker
    return getHookArgumentsLength(
      Array.isArray(invokerFns)
        ? invokerFns[0]
        : invokerFns
    )
  } else {
    return (fn._length || fn.length) > 1
  }
}

function _enter (_, vnode) {
  if (vnode.data.show !== true) {
    enter(vnode);
  }
}

var transition = inBrowser ? {
  create: _enter,
  activate: _enter,
  remove: function remove$$1 (vnode, rm) {
    /* istanbul ignore else */
    if (vnode.data.show !== true) {
      leave(vnode, rm);
    } else {
      rm();
    }
  }
} : {};

var platformModules = [
  attrs,
  klass,
  events,
  domProps,
  style,
  transition
];

/*  */

// the directive module should be applied last, after all
// built-in modules have been applied.
var modules = platformModules.concat(baseModules);

var patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });

/**
 * Not type checking this file because flow doesn't like attaching
 * properties to Elements.
 */

/* istanbul ignore if */
if (isIE9) {
  // http://www.matts411.com/post/internet-explorer-9-oninput/
  document.addEventListener('selectionchange', function () {
    var el = document.activeElement;
    if (el && el.vmodel) {
      trigger(el, 'input');
    }
  });
}

var model$1 = {
  inserted: function inserted (el, binding, vnode) {
    if (vnode.tag === 'select') {
      var cb = function () {
        setSelected(el, binding, vnode.context);
      };
      cb();
      /* istanbul ignore if */
      if (isIE || isEdge) {
        setTimeout(cb, 0);
      }
    } else if (vnode.tag === 'textarea' || el.type === 'text' || el.type === 'password') {
      el._vModifiers = binding.modifiers;
      if (!binding.modifiers.lazy) {
        // Safari < 10.2 & UIWebView doesn't fire compositionend when
        // switching focus before confirming composition choice
        // this also fixes the issue where some browsers e.g. iOS Chrome
        // fires "change" instead of "input" on autocomplete.
        el.addEventListener('change', onCompositionEnd);
        if (!isAndroid) {
          el.addEventListener('compositionstart', onCompositionStart);
          el.addEventListener('compositionend', onCompositionEnd);
        }
        /* istanbul ignore if */
        if (isIE9) {
          el.vmodel = true;
        }
      }
    }
  },
  componentUpdated: function componentUpdated (el, binding, vnode) {
    if (vnode.tag === 'select') {
      setSelected(el, binding, vnode.context);
      // in case the options rendered by v-for have changed,
      // it's possible that the value is out-of-sync with the rendered options.
      // detect such cases and filter out values that no longer has a matching
      // option in the DOM.
      var needReset = el.multiple
        ? binding.value.some(function (v) { return hasNoMatchingOption(v, el.options); })
        : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, el.options);
      if (needReset) {
        trigger(el, 'change');
      }
    }
  }
};

function setSelected (el, binding, vm) {
  var value = binding.value;
  var isMultiple = el.multiple;
  if (isMultiple && !Array.isArray(value)) {
    "production" !== 'production' && warn(
      "<select multiple v-model=\"" + (binding.expression) + "\"> " +
      "expects an Array value for its binding, but got " + (Object.prototype.toString.call(value).slice(8, -1)),
      vm
    );
    return
  }
  var selected, option;
  for (var i = 0, l = el.options.length; i < l; i++) {
    option = el.options[i];
    if (isMultiple) {
      selected = looseIndexOf(value, getValue(option)) > -1;
      if (option.selected !== selected) {
        option.selected = selected;
      }
    } else {
      if (looseEqual(getValue(option), value)) {
        if (el.selectedIndex !== i) {
          el.selectedIndex = i;
        }
        return
      }
    }
  }
  if (!isMultiple) {
    el.selectedIndex = -1;
  }
}

function hasNoMatchingOption (value, options) {
  for (var i = 0, l = options.length; i < l; i++) {
    if (looseEqual(getValue(options[i]), value)) {
      return false
    }
  }
  return true
}

function getValue (option) {
  return '_value' in option
    ? option._value
    : option.value
}

function onCompositionStart (e) {
  e.target.composing = true;
}

function onCompositionEnd (e) {
  e.target.composing = false;
  trigger(e.target, 'input');
}

function trigger (el, type) {
  var e = document.createEvent('HTMLEvents');
  e.initEvent(type, true, true);
  el.dispatchEvent(e);
}

/*  */

// recursively search for possible transition defined inside the component root
function locateNode (vnode) {
  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)
    ? locateNode(vnode.componentInstance._vnode)
    : vnode
}

var show = {
  bind: function bind (el, ref, vnode) {
    var value = ref.value;

    vnode = locateNode(vnode);
    var transition = vnode.data && vnode.data.transition;
    var originalDisplay = el.__vOriginalDisplay =
      el.style.display === 'none' ? '' : el.style.display;
    if (value && transition && !isIE9) {
      vnode.data.show = true;
      enter(vnode, function () {
        el.style.display = originalDisplay;
      });
    } else {
      el.style.display = value ? originalDisplay : 'none';
    }
  },

  update: function update (el, ref, vnode) {
    var value = ref.value;
    var oldValue = ref.oldValue;

    /* istanbul ignore if */
    if (value === oldValue) { return }
    vnode = locateNode(vnode);
    var transition = vnode.data && vnode.data.transition;
    if (transition && !isIE9) {
      vnode.data.show = true;
      if (value) {
        enter(vnode, function () {
          el.style.display = el.__vOriginalDisplay;
        });
      } else {
        leave(vnode, function () {
          el.style.display = 'none';
        });
      }
    } else {
      el.style.display = value ? el.__vOriginalDisplay : 'none';
    }
  },

  unbind: function unbind (
    el,
    binding,
    vnode,
    oldVnode,
    isDestroy
  ) {
    if (!isDestroy) {
      el.style.display = el.__vOriginalDisplay;
    }
  }
};

var platformDirectives = {
  model: model$1,
  show: show
};

/*  */

// Provides transition support for a single element/component.
// supports transition mode (out-in / in-out)

var transitionProps = {
  name: String,
  appear: Boolean,
  css: Boolean,
  mode: String,
  type: String,
  enterClass: String,
  leaveClass: String,
  enterToClass: String,
  leaveToClass: String,
  enterActiveClass: String,
  leaveActiveClass: String,
  appearClass: String,
  appearActiveClass: String,
  appearToClass: String,
  duration: [Number, String, Object]
};

// in case the child is also an abstract component, e.g. <keep-alive>
// we want to recursively retrieve the real component to be rendered
function getRealChild (vnode) {
  var compOptions = vnode && vnode.componentOptions;
  if (compOptions && compOptions.Ctor.options.abstract) {
    return getRealChild(getFirstComponentChild(compOptions.children))
  } else {
    return vnode
  }
}

function extractTransitionData (comp) {
  var data = {};
  var options = comp.$options;
  // props
  for (var key in options.propsData) {
    data[key] = comp[key];
  }
  // events.
  // extract listeners and pass them directly to the transition methods
  var listeners = options._parentListeners;
  for (var key$1 in listeners) {
    data[camelize(key$1)] = listeners[key$1];
  }
  return data
}

function placeholder (h, rawChild) {
  if (/\d-keep-alive$/.test(rawChild.tag)) {
    return h('keep-alive', {
      props: rawChild.componentOptions.propsData
    })
  }
}

function hasParentTransition (vnode) {
  while ((vnode = vnode.parent)) {
    if (vnode.data.transition) {
      return true
    }
  }
}

function isSameChild (child, oldChild) {
  return oldChild.key === child.key && oldChild.tag === child.tag
}

var Transition = {
  name: 'transition',
  props: transitionProps,
  abstract: true,

  render: function render (h) {
    var this$1 = this;

    var children = this.$slots.default;
    if (!children) {
      return
    }

    // filter out text nodes (possible whitespaces)
    children = children.filter(function (c) { return c.tag; });
    /* istanbul ignore if */
    if (!children.length) {
      return
    }

    // warn multiple elements
    if (false) {
      warn(
        '<transition> can only be used on a single element. Use ' +
        '<transition-group> for lists.',
        this.$parent
      );
    }

    var mode = this.mode;

    // warn invalid mode
    if (false) {
      warn(
        'invalid <transition> mode: ' + mode,
        this.$parent
      );
    }

    var rawChild = children[0];

    // if this is a component root node and the component's
    // parent container node also has transition, skip.
    if (hasParentTransition(this.$vnode)) {
      return rawChild
    }

    // apply transition data to child
    // use getRealChild() to ignore abstract components e.g. keep-alive
    var child = getRealChild(rawChild);
    /* istanbul ignore if */
    if (!child) {
      return rawChild
    }

    if (this._leaving) {
      return placeholder(h, rawChild)
    }

    // ensure a key that is unique to the vnode type and to this transition
    // component instance. This key will be used to remove pending leaving nodes
    // during entering.
    var id = "__transition-" + (this._uid) + "-";
    child.key = child.key == null
      ? id + child.tag
      : isPrimitive(child.key)
        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)
        : child.key;

    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);
    var oldRawChild = this._vnode;
    var oldChild = getRealChild(oldRawChild);

    // mark v-show
    // so that the transition module can hand over the control to the directive
    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {
      child.data.show = true;
    }

    if (oldChild && oldChild.data && !isSameChild(child, oldChild)) {
      // replace old child transition data with fresh one
      // important for dynamic transitions!
      var oldData = oldChild && (oldChild.data.transition = extend({}, data));
      // handle transition mode
      if (mode === 'out-in') {
        // return placeholder node and queue update when leave finishes
        this._leaving = true;
        mergeVNodeHook(oldData, 'afterLeave', function () {
          this$1._leaving = false;
          this$1.$forceUpdate();
        });
        return placeholder(h, rawChild)
      } else if (mode === 'in-out') {
        var delayedLeave;
        var performLeave = function () { delayedLeave(); };
        mergeVNodeHook(data, 'afterEnter', performLeave);
        mergeVNodeHook(data, 'enterCancelled', performLeave);
        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });
      }
    }

    return rawChild
  }
};

/*  */

// Provides transition support for list items.
// supports move transitions using the FLIP technique.

// Because the vdom's children update algorithm is "unstable" - i.e.
// it doesn't guarantee the relative positioning of removed elements,
// we force transition-group to update its children into two passes:
// in the first pass, we remove all nodes that need to be removed,
// triggering their leaving transition; in the second pass, we insert/move
// into the final desired state. This way in the second pass removed
// nodes will remain where they should be.

var props = extend({
  tag: String,
  moveClass: String
}, transitionProps);

delete props.mode;

var TransitionGroup = {
  props: props,

  render: function render (h) {
    var tag = this.tag || this.$vnode.data.tag || 'span';
    var map = Object.create(null);
    var prevChildren = this.prevChildren = this.children;
    var rawChildren = this.$slots.default || [];
    var children = this.children = [];
    var transitionData = extractTransitionData(this);

    for (var i = 0; i < rawChildren.length; i++) {
      var c = rawChildren[i];
      if (c.tag) {
        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {
          children.push(c);
          map[c.key] = c
          ;(c.data || (c.data = {})).transition = transitionData;
        } else if (false) {
          var opts = c.componentOptions;
          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;
          warn(("<transition-group> children must be keyed: <" + name + ">"));
        }
      }
    }

    if (prevChildren) {
      var kept = [];
      var removed = [];
      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {
        var c$1 = prevChildren[i$1];
        c$1.data.transition = transitionData;
        c$1.data.pos = c$1.elm.getBoundingClientRect();
        if (map[c$1.key]) {
          kept.push(c$1);
        } else {
          removed.push(c$1);
        }
      }
      this.kept = h(tag, null, kept);
      this.removed = removed;
    }

    return h(tag, null, children)
  },

  beforeUpdate: function beforeUpdate () {
    // force removing pass
    this.__patch__(
      this._vnode,
      this.kept,
      false, // hydrating
      true // removeOnly (!important, avoids unnecessary moves)
    );
    this._vnode = this.kept;
  },

  updated: function updated () {
    var children = this.prevChildren;
    var moveClass = this.moveClass || ((this.name || 'v') + '-move');
    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {
      return
    }

    // we divide the work into three loops to avoid mixing DOM reads and writes
    // in each iteration - which helps prevent layout thrashing.
    children.forEach(callPendingCbs);
    children.forEach(recordPosition);
    children.forEach(applyTranslation);

    // force reflow to put everything in position
    var body = document.body;
    var f = body.offsetHeight; // eslint-disable-line

    children.forEach(function (c) {
      if (c.data.moved) {
        var el = c.elm;
        var s = el.style;
        addTransitionClass(el, moveClass);
        s.transform = s.WebkitTransform = s.transitionDuration = '';
        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {
          if (!e || /transform$/.test(e.propertyName)) {
            el.removeEventListener(transitionEndEvent, cb);
            el._moveCb = null;
            removeTransitionClass(el, moveClass);
          }
        });
      }
    });
  },

  methods: {
    hasMove: function hasMove (el, moveClass) {
      /* istanbul ignore if */
      if (!hasTransition) {
        return false
      }
      if (this._hasMove != null) {
        return this._hasMove
      }
      // Detect whether an element with the move class applied has
      // CSS transitions. Since the element may be inside an entering
      // transition at this very moment, we make a clone of it and remove
      // all other transition classes applied to ensure only the move class
      // is applied.
      var clone = el.cloneNode();
      if (el._transitionClasses) {
        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });
      }
      addClass(clone, moveClass);
      clone.style.display = 'none';
      this.$el.appendChild(clone);
      var info = getTransitionInfo(clone);
      this.$el.removeChild(clone);
      return (this._hasMove = info.hasTransform)
    }
  }
};

function callPendingCbs (c) {
  /* istanbul ignore if */
  if (c.elm._moveCb) {
    c.elm._moveCb();
  }
  /* istanbul ignore if */
  if (c.elm._enterCb) {
    c.elm._enterCb();
  }
}

function recordPosition (c) {
  c.data.newPos = c.elm.getBoundingClientRect();
}

function applyTranslation (c) {
  var oldPos = c.data.pos;
  var newPos = c.data.newPos;
  var dx = oldPos.left - newPos.left;
  var dy = oldPos.top - newPos.top;
  if (dx || dy) {
    c.data.moved = true;
    var s = c.elm.style;
    s.transform = s.WebkitTransform = "translate(" + dx + "px," + dy + "px)";
    s.transitionDuration = '0s';
  }
}

var platformComponents = {
  Transition: Transition,
  TransitionGroup: TransitionGroup
};

/*  */

// install platform specific utils
Vue$3.config.mustUseProp = mustUseProp;
Vue$3.config.isReservedTag = isReservedTag;
Vue$3.config.isReservedAttr = isReservedAttr;
Vue$3.config.getTagNamespace = getTagNamespace;
Vue$3.config.isUnknownElement = isUnknownElement;

// install platform runtime directives & components
extend(Vue$3.options.directives, platformDirectives);
extend(Vue$3.options.components, platformComponents);

// install platform patch function
Vue$3.prototype.__patch__ = inBrowser ? patch : noop;

// public mount method
Vue$3.prototype.$mount = function (
  el,
  hydrating
) {
  el = el && inBrowser ? query(el) : undefined;
  return mountComponent(this, el, hydrating)
};

// devtools global hook
/* istanbul ignore next */
setTimeout(function () {
  if (config.devtools) {
    if (devtools) {
      devtools.emit('init', Vue$3);
    } else if (false) {
      console[console.info ? 'info' : 'log'](
        'Download the Vue Devtools extension for a better development experience:\n' +
        'https://github.com/vuejs/vue-devtools'
      );
    }
  }
  if (false) {
    console[console.info ? 'info' : 'log'](
      "You are running Vue in development mode.\n" +
      "Make sure to turn on production mode when deploying for production.\n" +
      "See more tips at https://vuejs.org/guide/deployment.html"
    );
  }
}, 0);

/*  */

// check whether current browser encodes a char inside attribute values
function shouldDecode (content, encoded) {
  var div = document.createElement('div');
  div.innerHTML = "<div a=\"" + content + "\">";
  return div.innerHTML.indexOf(encoded) > 0
}

// #3663
// IE encodes newlines inside attribute values while other browsers don't
var shouldDecodeNewlines = inBrowser ? shouldDecode('\n', '&#10;') : false;

/*  */

var isUnaryTag = makeMap(
  'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +
  'link,meta,param,source,track,wbr'
);

// Elements that you can, intentionally, leave open
// (and which close themselves)
var canBeLeftOpenTag = makeMap(
  'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source'
);

// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3
// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content
var isNonPhrasingTag = makeMap(
  'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +
  'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +
  'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +
  'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +
  'title,tr,track'
);

/*  */

var decoder;

function decode (html) {
  decoder = decoder || document.createElement('div');
  decoder.innerHTML = html;
  return decoder.textContent
}

/**
 * Not type-checking this file because it's mostly vendor code.
 */

/*!
 * HTML Parser By John Resig (ejohn.org)
 * Modified by Juriy "kangax" Zaytsev
 * Original code by Erik Arvidsson, Mozilla Public License
 * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js
 */

// Regular Expressions for parsing tags and attributes
var singleAttrIdentifier = /([^\s"'<>/=]+)/;
var singleAttrAssign = /(?:=)/;
var singleAttrValues = [
  // attr value double quotes
  /"([^"]*)"+/.source,
  // attr value, single quotes
  /'([^']*)'+/.source,
  // attr value, no quotes
  /([^\s"'=<>`]+)/.source
];
var attribute = new RegExp(
  '^\\s*' + singleAttrIdentifier.source +
  '(?:\\s*(' + singleAttrAssign.source + ')' +
  '\\s*(?:' + singleAttrValues.join('|') + '))?'
);

// could use https://www.w3.org/TR/1999/REC-xml-names-19990114/#NT-QName
// but for Vue templates we can enforce a simple charset
var ncname = '[a-zA-Z_][\\w\\-\\.]*';
var qnameCapture = '((?:' + ncname + '\\:)?' + ncname + ')';
var startTagOpen = new RegExp('^<' + qnameCapture);
var startTagClose = /^\s*(\/?)>/;
var endTag = new RegExp('^<\\/' + qnameCapture + '[^>]*>');
var doctype = /^<!DOCTYPE [^>]+>/i;
var comment = /^<!--/;
var conditionalComment = /^<!\[/;

var IS_REGEX_CAPTURING_BROKEN = false;
'x'.replace(/x(.)?/g, function (m, g) {
  IS_REGEX_CAPTURING_BROKEN = g === '';
});

// Special Elements (can contain anything)
var isPlainTextElement = makeMap('script,style,textarea', true);
var reCache = {};

var decodingMap = {
  '&lt;': '<',
  '&gt;': '>',
  '&quot;': '"',
  '&amp;': '&',
  '&#10;': '\n'
};
var encodedAttr = /&(?:lt|gt|quot|amp);/g;
var encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#10);/g;

function decodeAttr (value, shouldDecodeNewlines) {
  var re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr;
  return value.replace(re, function (match) { return decodingMap[match]; })
}

function parseHTML (html, options) {
  var stack = [];
  var expectHTML = options.expectHTML;
  var isUnaryTag$$1 = options.isUnaryTag || no;
  var canBeLeftOpenTag$$1 = options.canBeLeftOpenTag || no;
  var index = 0;
  var last, lastTag;
  while (html) {
    last = html;
    // Make sure we're not in a plaintext content element like script/style
    if (!lastTag || !isPlainTextElement(lastTag)) {
      var textEnd = html.indexOf('<');
      if (textEnd === 0) {
        // Comment:
        if (comment.test(html)) {
          var commentEnd = html.indexOf('-->');

          if (commentEnd >= 0) {
            advance(commentEnd + 3);
            continue
          }
        }

        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment
        if (conditionalComment.test(html)) {
          var conditionalEnd = html.indexOf(']>');

          if (conditionalEnd >= 0) {
            advance(conditionalEnd + 2);
            continue
          }
        }

        // Doctype:
        var doctypeMatch = html.match(doctype);
        if (doctypeMatch) {
          advance(doctypeMatch[0].length);
          continue
        }

        // End tag:
        var endTagMatch = html.match(endTag);
        if (endTagMatch) {
          var curIndex = index;
          advance(endTagMatch[0].length);
          parseEndTag(endTagMatch[1], curIndex, index);
          continue
        }

        // Start tag:
        var startTagMatch = parseStartTag();
        if (startTagMatch) {
          handleStartTag(startTagMatch);
          continue
        }
      }

      var text = (void 0), rest$1 = (void 0), next = (void 0);
      if (textEnd >= 0) {
        rest$1 = html.slice(textEnd);
        while (
          !endTag.test(rest$1) &&
          !startTagOpen.test(rest$1) &&
          !comment.test(rest$1) &&
          !conditionalComment.test(rest$1)
        ) {
          // < in plain text, be forgiving and treat it as text
          next = rest$1.indexOf('<', 1);
          if (next < 0) { break }
          textEnd += next;
          rest$1 = html.slice(textEnd);
        }
        text = html.substring(0, textEnd);
        advance(textEnd);
      }

      if (textEnd < 0) {
        text = html;
        html = '';
      }

      if (options.chars && text) {
        options.chars(text);
      }
    } else {
      var stackedTag = lastTag.toLowerCase();
      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\s\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));
      var endTagLength = 0;
      var rest = html.replace(reStackedTag, function (all, text, endTag) {
        endTagLength = endTag.length;
        if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {
          text = text
            .replace(/<!--([\s\S]*?)-->/g, '$1')
            .replace(/<!\[CDATA\[([\s\S]*?)]]>/g, '$1');
        }
        if (options.chars) {
          options.chars(text);
        }
        return ''
      });
      index += html.length - rest.length;
      html = rest;
      parseEndTag(stackedTag, index - endTagLength, index);
    }

    if (html === last) {
      options.chars && options.chars(html);
      if (false) {
        options.warn(("Mal-formatted tag at end of template: \"" + html + "\""));
      }
      break
    }
  }

  // Clean up any remaining tags
  parseEndTag();

  function advance (n) {
    index += n;
    html = html.substring(n);
  }

  function parseStartTag () {
    var start = html.match(startTagOpen);
    if (start) {
      var match = {
        tagName: start[1],
        attrs: [],
        start: index
      };
      advance(start[0].length);
      var end, attr;
      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {
        advance(attr[0].length);
        match.attrs.push(attr);
      }
      if (end) {
        match.unarySlash = end[1];
        advance(end[0].length);
        match.end = index;
        return match
      }
    }
  }

  function handleStartTag (match) {
    var tagName = match.tagName;
    var unarySlash = match.unarySlash;

    if (expectHTML) {
      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {
        parseEndTag(lastTag);
      }
      if (canBeLeftOpenTag$$1(tagName) && lastTag === tagName) {
        parseEndTag(tagName);
      }
    }

    var unary = isUnaryTag$$1(tagName) || tagName === 'html' && lastTag === 'head' || !!unarySlash;

    var l = match.attrs.length;
    var attrs = new Array(l);
    for (var i = 0; i < l; i++) {
      var args = match.attrs[i];
      // hackish work around FF bug https://bugzilla.mozilla.org/show_bug.cgi?id=369778
      if (IS_REGEX_CAPTURING_BROKEN && args[0].indexOf('""') === -1) {
        if (args[3] === '') { delete args[3]; }
        if (args[4] === '') { delete args[4]; }
        if (args[5] === '') { delete args[5]; }
      }
      var value = args[3] || args[4] || args[5] || '';
      attrs[i] = {
        name: args[1],
        value: decodeAttr(
          value,
          options.shouldDecodeNewlines
        )
      };
    }

    if (!unary) {
      stack.push({ tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs });
      lastTag = tagName;
    }

    if (options.start) {
      options.start(tagName, attrs, unary, match.start, match.end);
    }
  }

  function parseEndTag (tagName, start, end) {
    var pos, lowerCasedTagName;
    if (start == null) { start = index; }
    if (end == null) { end = index; }

    if (tagName) {
      lowerCasedTagName = tagName.toLowerCase();
    }

    // Find the closest opened tag of the same type
    if (tagName) {
      for (pos = stack.length - 1; pos >= 0; pos--) {
        if (stack[pos].lowerCasedTag === lowerCasedTagName) {
          break
        }
      }
    } else {
      // If no tag name is provided, clean shop
      pos = 0;
    }

    if (pos >= 0) {
      // Close all the open elements, up the stack
      for (var i = stack.length - 1; i >= pos; i--) {
        if (false) {
          options.warn(
            ("tag <" + (stack[i].tag) + "> has no matching end tag.")
          );
        }
        if (options.end) {
          options.end(stack[i].tag, start, end);
        }
      }

      // Remove the open elements from the stack
      stack.length = pos;
      lastTag = pos && stack[pos - 1].tag;
    } else if (lowerCasedTagName === 'br') {
      if (options.start) {
        options.start(tagName, [], true, start, end);
      }
    } else if (lowerCasedTagName === 'p') {
      if (options.start) {
        options.start(tagName, [], false, start, end);
      }
      if (options.end) {
        options.end(tagName, start, end);
      }
    }
  }
}

/*  */

var defaultTagRE = /\{\{((?:.|\n)+?)\}\}/g;
var regexEscapeRE = /[-.*+?^${}()|[\]\/\\]/g;

var buildRegex = cached(function (delimiters) {
  var open = delimiters[0].replace(regexEscapeRE, '\\$&');
  var close = delimiters[1].replace(regexEscapeRE, '\\$&');
  return new RegExp(open + '((?:.|\\n)+?)' + close, 'g')
});

function parseText (
  text,
  delimiters
) {
  var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;
  if (!tagRE.test(text)) {
    return
  }
  var tokens = [];
  var lastIndex = tagRE.lastIndex = 0;
  var match, index;
  while ((match = tagRE.exec(text))) {
    index = match.index;
    // push text token
    if (index > lastIndex) {
      tokens.push(JSON.stringify(text.slice(lastIndex, index)));
    }
    // tag token
    var exp = parseFilters(match[1].trim());
    tokens.push(("_s(" + exp + ")"));
    lastIndex = index + match[0].length;
  }
  if (lastIndex < text.length) {
    tokens.push(JSON.stringify(text.slice(lastIndex)));
  }
  return tokens.join('+')
}

/*  */

var onRE = /^@|^v-on:/;
var dirRE = /^v-|^@|^:/;
var forAliasRE = /(.*?)\s+(?:in|of)\s+(.*)/;
var forIteratorRE = /\((\{[^}]*\}|[^,]*),([^,]*)(?:,([^,]*))?\)/;

var argRE = /:(.*)$/;
var bindRE = /^:|^v-bind:/;
var modifierRE = /\.[^.]+/g;

var decodeHTMLCached = cached(decode);

// configurable state
var warn$2;
var delimiters;
var transforms;
var preTransforms;
var postTransforms;
var platformIsPreTag;
var platformMustUseProp;
var platformGetTagNamespace;

/**
 * Convert HTML string to AST.
 */
function parse (
  template,
  options
) {
  warn$2 = options.warn || baseWarn;
  platformGetTagNamespace = options.getTagNamespace || no;
  platformMustUseProp = options.mustUseProp || no;
  platformIsPreTag = options.isPreTag || no;
  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');
  transforms = pluckModuleFunction(options.modules, 'transformNode');
  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');
  delimiters = options.delimiters;

  var stack = [];
  var preserveWhitespace = options.preserveWhitespace !== false;
  var root;
  var currentParent;
  var inVPre = false;
  var inPre = false;
  var warned = false;

  function warnOnce (msg) {
    if (!warned) {
      warned = true;
      warn$2(msg);
    }
  }

  function endPre (element) {
    // check pre state
    if (element.pre) {
      inVPre = false;
    }
    if (platformIsPreTag(element.tag)) {
      inPre = false;
    }
  }

  parseHTML(template, {
    warn: warn$2,
    expectHTML: options.expectHTML,
    isUnaryTag: options.isUnaryTag,
    canBeLeftOpenTag: options.canBeLeftOpenTag,
    shouldDecodeNewlines: options.shouldDecodeNewlines,
    start: function start (tag, attrs, unary) {
      // check namespace.
      // inherit parent ns if there is one
      var ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag);

      // handle IE svg bug
      /* istanbul ignore if */
      if (isIE && ns === 'svg') {
        attrs = guardIESVGBug(attrs);
      }

      var element = {
        type: 1,
        tag: tag,
        attrsList: attrs,
        attrsMap: makeAttrsMap(attrs),
        parent: currentParent,
        children: []
      };
      if (ns) {
        element.ns = ns;
      }

      if (isForbiddenTag(element) && !isServerRendering()) {
        element.forbidden = true;
        "production" !== 'production' && warn$2(
          'Templates should only be responsible for mapping the state to the ' +
          'UI. Avoid placing tags with side-effects in your templates, such as ' +
          "<" + tag + ">" + ', as they will not be parsed.'
        );
      }

      // apply pre-transforms
      for (var i = 0; i < preTransforms.length; i++) {
        preTransforms[i](element, options);
      }

      if (!inVPre) {
        processPre(element);
        if (element.pre) {
          inVPre = true;
        }
      }
      if (platformIsPreTag(element.tag)) {
        inPre = true;
      }
      if (inVPre) {
        processRawAttrs(element);
      } else {
        processFor(element);
        processIf(element);
        processOnce(element);
        processKey(element);

        // determine whether this is a plain element after
        // removing structural attributes
        element.plain = !element.key && !attrs.length;

        processRef(element);
        processSlot(element);
        processComponent(element);
        for (var i$1 = 0; i$1 < transforms.length; i$1++) {
          transforms[i$1](element, options);
        }
        processAttrs(element);
      }

      function checkRootConstraints (el) {
        if (false) {
          if (el.tag === 'slot' || el.tag === 'template') {
            warnOnce(
              "Cannot use <" + (el.tag) + "> as component root element because it may " +
              'contain multiple nodes.'
            );
          }
          if (el.attrsMap.hasOwnProperty('v-for')) {
            warnOnce(
              'Cannot use v-for on stateful component root element because ' +
              'it renders multiple elements.'
            );
          }
        }
      }

      // tree management
      if (!root) {
        root = element;
        checkRootConstraints(root);
      } else if (!stack.length) {
        // allow root elements with v-if, v-else-if and v-else
        if (root.if && (element.elseif || element.else)) {
          checkRootConstraints(element);
          addIfCondition(root, {
            exp: element.elseif,
            block: element
          });
        } else if (false) {
          warnOnce(
            "Component template should contain exactly one root element. " +
            "If you are using v-if on multiple elements, " +
            "use v-else-if to chain them instead."
          );
        }
      }
      if (currentParent && !element.forbidden) {
        if (element.elseif || element.else) {
          processIfConditions(element, currentParent);
        } else if (element.slotScope) { // scoped slot
          currentParent.plain = false;
          var name = element.slotTarget || '"default"';(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;
        } else {
          currentParent.children.push(element);
          element.parent = currentParent;
        }
      }
      if (!unary) {
        currentParent = element;
        stack.push(element);
      } else {
        endPre(element);
      }
      // apply post-transforms
      for (var i$2 = 0; i$2 < postTransforms.length; i$2++) {
        postTransforms[i$2](element, options);
      }
    },

    end: function end () {
      // remove trailing whitespace
      var element = stack[stack.length - 1];
      var lastNode = element.children[element.children.length - 1];
      if (lastNode && lastNode.type === 3 && lastNode.text === ' ' && !inPre) {
        element.children.pop();
      }
      // pop stack
      stack.length -= 1;
      currentParent = stack[stack.length - 1];
      endPre(element);
    },

    chars: function chars (text) {
      if (!currentParent) {
        if (false) {
          if (text === template) {
            warnOnce(
              'Component template requires a root element, rather than just text.'
            );
          } else if ((text = text.trim())) {
            warnOnce(
              ("text \"" + text + "\" outside root element will be ignored.")
            );
          }
        }
        return
      }
      // IE textarea placeholder bug
      /* istanbul ignore if */
      if (isIE &&
          currentParent.tag === 'textarea' &&
          currentParent.attrsMap.placeholder === text) {
        return
      }
      var children = currentParent.children;
      text = inPre || text.trim()
        ? isTextTag(currentParent) ? text : decodeHTMLCached(text)
        // only preserve whitespace if its not right after a starting tag
        : preserveWhitespace && children.length ? ' ' : '';
      if (text) {
        var expression;
        if (!inVPre && text !== ' ' && (expression = parseText(text, delimiters))) {
          children.push({
            type: 2,
            expression: expression,
            text: text
          });
        } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {
          children.push({
            type: 3,
            text: text
          });
        }
      }
    }
  });
  return root
}

function processPre (el) {
  if (getAndRemoveAttr(el, 'v-pre') != null) {
    el.pre = true;
  }
}

function processRawAttrs (el) {
  var l = el.attrsList.length;
  if (l) {
    var attrs = el.attrs = new Array(l);
    for (var i = 0; i < l; i++) {
      attrs[i] = {
        name: el.attrsList[i].name,
        value: JSON.stringify(el.attrsList[i].value)
      };
    }
  } else if (!el.pre) {
    // non root node in pre blocks with no attributes
    el.plain = true;
  }
}

function processKey (el) {
  var exp = getBindingAttr(el, 'key');
  if (exp) {
    if (false) {
      warn$2("<template> cannot be keyed. Place the key on real elements instead.");
    }
    el.key = exp;
  }
}

function processRef (el) {
  var ref = getBindingAttr(el, 'ref');
  if (ref) {
    el.ref = ref;
    el.refInFor = checkInFor(el);
  }
}

function processFor (el) {
  var exp;
  if ((exp = getAndRemoveAttr(el, 'v-for'))) {
    var inMatch = exp.match(forAliasRE);
    if (!inMatch) {
      "production" !== 'production' && warn$2(
        ("Invalid v-for expression: " + exp)
      );
      return
    }
    el.for = inMatch[2].trim();
    var alias = inMatch[1].trim();
    var iteratorMatch = alias.match(forIteratorRE);
    if (iteratorMatch) {
      el.alias = iteratorMatch[1].trim();
      el.iterator1 = iteratorMatch[2].trim();
      if (iteratorMatch[3]) {
        el.iterator2 = iteratorMatch[3].trim();
      }
    } else {
      el.alias = alias;
    }
  }
}

function processIf (el) {
  var exp = getAndRemoveAttr(el, 'v-if');
  if (exp) {
    el.if = exp;
    addIfCondition(el, {
      exp: exp,
      block: el
    });
  } else {
    if (getAndRemoveAttr(el, 'v-else') != null) {
      el.else = true;
    }
    var elseif = getAndRemoveAttr(el, 'v-else-if');
    if (elseif) {
      el.elseif = elseif;
    }
  }
}

function processIfConditions (el, parent) {
  var prev = findPrevElement(parent.children);
  if (prev && prev.if) {
    addIfCondition(prev, {
      exp: el.elseif,
      block: el
    });
  } else if (false) {
    warn$2(
      "v-" + (el.elseif ? ('else-if="' + el.elseif + '"') : 'else') + " " +
      "used on element <" + (el.tag) + "> without corresponding v-if."
    );
  }
}

function findPrevElement (children) {
  var i = children.length;
  while (i--) {
    if (children[i].type === 1) {
      return children[i]
    } else {
      if (false) {
        warn$2(
          "text \"" + (children[i].text.trim()) + "\" between v-if and v-else(-if) " +
          "will be ignored."
        );
      }
      children.pop();
    }
  }
}

function addIfCondition (el, condition) {
  if (!el.ifConditions) {
    el.ifConditions = [];
  }
  el.ifConditions.push(condition);
}

function processOnce (el) {
  var once$$1 = getAndRemoveAttr(el, 'v-once');
  if (once$$1 != null) {
    el.once = true;
  }
}

function processSlot (el) {
  if (el.tag === 'slot') {
    el.slotName = getBindingAttr(el, 'name');
    if (false) {
      warn$2(
        "`key` does not work on <slot> because slots are abstract outlets " +
        "and can possibly expand into multiple elements. " +
        "Use the key on a wrapping element instead."
      );
    }
  } else {
    var slotTarget = getBindingAttr(el, 'slot');
    if (slotTarget) {
      el.slotTarget = slotTarget === '""' ? '"default"' : slotTarget;
    }
    if (el.tag === 'template') {
      el.slotScope = getAndRemoveAttr(el, 'scope');
    }
  }
}

function processComponent (el) {
  var binding;
  if ((binding = getBindingAttr(el, 'is'))) {
    el.component = binding;
  }
  if (getAndRemoveAttr(el, 'inline-template') != null) {
    el.inlineTemplate = true;
  }
}

function processAttrs (el) {
  var list = el.attrsList;
  var i, l, name, rawName, value, modifiers, isProp;
  for (i = 0, l = list.length; i < l; i++) {
    name = rawName = list[i].name;
    value = list[i].value;
    if (dirRE.test(name)) {
      // mark element as dynamic
      el.hasBindings = true;
      // modifiers
      modifiers = parseModifiers(name);
      if (modifiers) {
        name = name.replace(modifierRE, '');
      }
      if (bindRE.test(name)) { // v-bind
        name = name.replace(bindRE, '');
        value = parseFilters(value);
        isProp = false;
        if (modifiers) {
          if (modifiers.prop) {
            isProp = true;
            name = camelize(name);
            if (name === 'innerHtml') { name = 'innerHTML'; }
          }
          if (modifiers.camel) {
            name = camelize(name);
          }
          if (modifiers.sync) {
            addHandler(
              el,
              ("update:" + (camelize(name))),
              genAssignmentCode(value, "$event")
            );
          }
        }
        if (isProp || platformMustUseProp(el.tag, el.attrsMap.type, name)) {
          addProp(el, name, value);
        } else {
          addAttr(el, name, value);
        }
      } else if (onRE.test(name)) { // v-on
        name = name.replace(onRE, '');
        addHandler(el, name, value, modifiers, false, warn$2);
      } else { // normal directives
        name = name.replace(dirRE, '');
        // parse arg
        var argMatch = name.match(argRE);
        var arg = argMatch && argMatch[1];
        if (arg) {
          name = name.slice(0, -(arg.length + 1));
        }
        addDirective(el, name, rawName, value, arg, modifiers);
        if (false) {
          checkForAliasModel(el, value);
        }
      }
    } else {
      // literal attribute
      if (false) {
        var expression = parseText(value, delimiters);
        if (expression) {
          warn$2(
            name + "=\"" + value + "\": " +
            'Interpolation inside attributes has been removed. ' +
            'Use v-bind or the colon shorthand instead. For example, ' +
            'instead of <div id="{{ val }}">, use <div :id="val">.'
          );
        }
      }
      addAttr(el, name, JSON.stringify(value));
    }
  }
}

function checkInFor (el) {
  var parent = el;
  while (parent) {
    if (parent.for !== undefined) {
      return true
    }
    parent = parent.parent;
  }
  return false
}

function parseModifiers (name) {
  var match = name.match(modifierRE);
  if (match) {
    var ret = {};
    match.forEach(function (m) { ret[m.slice(1)] = true; });
    return ret
  }
}

function makeAttrsMap (attrs) {
  var map = {};
  for (var i = 0, l = attrs.length; i < l; i++) {
    if (
      false
    ) {
      warn$2('duplicate attribute: ' + attrs[i].name);
    }
    map[attrs[i].name] = attrs[i].value;
  }
  return map
}

// for script (e.g. type="x/template") or style, do not decode content
function isTextTag (el) {
  return el.tag === 'script' || el.tag === 'style'
}

function isForbiddenTag (el) {
  return (
    el.tag === 'style' ||
    (el.tag === 'script' && (
      !el.attrsMap.type ||
      el.attrsMap.type === 'text/javascript'
    ))
  )
}

var ieNSBug = /^xmlns:NS\d+/;
var ieNSPrefix = /^NS\d+:/;

/* istanbul ignore next */
function guardIESVGBug (attrs) {
  var res = [];
  for (var i = 0; i < attrs.length; i++) {
    var attr = attrs[i];
    if (!ieNSBug.test(attr.name)) {
      attr.name = attr.name.replace(ieNSPrefix, '');
      res.push(attr);
    }
  }
  return res
}

function checkForAliasModel (el, value) {
  var _el = el;
  while (_el) {
    if (_el.for && _el.alias === value) {
      warn$2(
        "<" + (el.tag) + " v-model=\"" + value + "\">: " +
        "You are binding v-model directly to a v-for iteration alias. " +
        "This will not be able to modify the v-for source array because " +
        "writing to the alias is like modifying a function local variable. " +
        "Consider using an array of objects and use v-model on an object property instead."
      );
    }
    _el = _el.parent;
  }
}

/*  */

var isStaticKey;
var isPlatformReservedTag;

var genStaticKeysCached = cached(genStaticKeys$1);

/**
 * Goal of the optimizer: walk the generated template AST tree
 * and detect sub-trees that are purely static, i.e. parts of
 * the DOM that never needs to change.
 *
 * Once we detect these sub-trees, we can:
 *
 * 1. Hoist them into constants, so that we no longer need to
 *    create fresh nodes for them on each re-render;
 * 2. Completely skip them in the patching process.
 */
function optimize (root, options) {
  if (!root) { return }
  isStaticKey = genStaticKeysCached(options.staticKeys || '');
  isPlatformReservedTag = options.isReservedTag || no;
  // first pass: mark all non-static nodes.
  markStatic$1(root);
  // second pass: mark static roots.
  markStaticRoots(root, false);
}

function genStaticKeys$1 (keys) {
  return makeMap(
    'type,tag,attrsList,attrsMap,plain,parent,children,attrs' +
    (keys ? ',' + keys : '')
  )
}

function markStatic$1 (node) {
  node.static = isStatic(node);
  if (node.type === 1) {
    // do not make component slot content static. this avoids
    // 1. components not able to mutate slot nodes
    // 2. static slot content fails for hot-reloading
    if (
      !isPlatformReservedTag(node.tag) &&
      node.tag !== 'slot' &&
      node.attrsMap['inline-template'] == null
    ) {
      return
    }
    for (var i = 0, l = node.children.length; i < l; i++) {
      var child = node.children[i];
      markStatic$1(child);
      if (!child.static) {
        node.static = false;
      }
    }
  }
}

function markStaticRoots (node, isInFor) {
  if (node.type === 1) {
    if (node.static || node.once) {
      node.staticInFor = isInFor;
    }
    // For a node to qualify as a static root, it should have children that
    // are not just static text. Otherwise the cost of hoisting out will
    // outweigh the benefits and it's better off to just always render it fresh.
    if (node.static && node.children.length && !(
      node.children.length === 1 &&
      node.children[0].type === 3
    )) {
      node.staticRoot = true;
      return
    } else {
      node.staticRoot = false;
    }
    if (node.children) {
      for (var i = 0, l = node.children.length; i < l; i++) {
        markStaticRoots(node.children[i], isInFor || !!node.for);
      }
    }
    if (node.ifConditions) {
      walkThroughConditionsBlocks(node.ifConditions, isInFor);
    }
  }
}

function walkThroughConditionsBlocks (conditionBlocks, isInFor) {
  for (var i = 1, len = conditionBlocks.length; i < len; i++) {
    markStaticRoots(conditionBlocks[i].block, isInFor);
  }
}

function isStatic (node) {
  if (node.type === 2) { // expression
    return false
  }
  if (node.type === 3) { // text
    return true
  }
  return !!(node.pre || (
    !node.hasBindings && // no dynamic bindings
    !node.if && !node.for && // not v-if or v-for or v-else
    !isBuiltInTag(node.tag) && // not a built-in
    isPlatformReservedTag(node.tag) && // not a component
    !isDirectChildOfTemplateFor(node) &&
    Object.keys(node).every(isStaticKey)
  ))
}

function isDirectChildOfTemplateFor (node) {
  while (node.parent) {
    node = node.parent;
    if (node.tag !== 'template') {
      return false
    }
    if (node.for) {
      return true
    }
  }
  return false
}

/*  */

var fnExpRE = /^\s*([\w$_]+|\([^)]*?\))\s*=>|^function\s*\(/;
var simplePathRE = /^\s*[A-Za-z_$][\w$]*(?:\.[A-Za-z_$][\w$]*|\['.*?']|\[".*?"]|\[\d+]|\[[A-Za-z_$][\w$]*])*\s*$/;

// keyCode aliases
var keyCodes = {
  esc: 27,
  tab: 9,
  enter: 13,
  space: 32,
  up: 38,
  left: 37,
  right: 39,
  down: 40,
  'delete': [8, 46]
};

// #4868: modifiers that prevent the execution of the listener
// need to explicitly return null so that we can determine whether to remove
// the listener for .once
var genGuard = function (condition) { return ("if(" + condition + ")return null;"); };

var modifierCode = {
  stop: '$event.stopPropagation();',
  prevent: '$event.preventDefault();',
  self: genGuard("$event.target !== $event.currentTarget"),
  ctrl: genGuard("!$event.ctrlKey"),
  shift: genGuard("!$event.shiftKey"),
  alt: genGuard("!$event.altKey"),
  meta: genGuard("!$event.metaKey"),
  left: genGuard("'button' in $event && $event.button !== 0"),
  middle: genGuard("'button' in $event && $event.button !== 1"),
  right: genGuard("'button' in $event && $event.button !== 2")
};

function genHandlers (
  events,
  native,
  warn
) {
  var res = native ? 'nativeOn:{' : 'on:{';
  for (var name in events) {
    var handler = events[name];
    // #5330: warn click.right, since right clicks do not actually fire click events.
    if (false
      ) {
      warn(
        "Use \"contextmenu\" instead of \"click.right\" since right clicks " +
        "do not actually fire \"click\" events."
      );
    }
    res += "\"" + name + "\":" + (genHandler(name, handler)) + ",";
  }
  return res.slice(0, -1) + '}'
}

function genHandler (
  name,
  handler
) {
  if (!handler) {
    return 'function(){}'
  }

  if (Array.isArray(handler)) {
    return ("[" + (handler.map(function (handler) { return genHandler(name, handler); }).join(',')) + "]")
  }

  var isMethodPath = simplePathRE.test(handler.value);
  var isFunctionExpression = fnExpRE.test(handler.value);

  if (!handler.modifiers) {
    return isMethodPath || isFunctionExpression
      ? handler.value
      : ("function($event){" + (handler.value) + "}") // inline statement
  } else {
    var code = '';
    var genModifierCode = '';
    var keys = [];
    for (var key in handler.modifiers) {
      if (modifierCode[key]) {
        genModifierCode += modifierCode[key];
        // left/right
        if (keyCodes[key]) {
          keys.push(key);
        }
      } else {
        keys.push(key);
      }
    }
    if (keys.length) {
      code += genKeyFilter(keys);
    }
    // Make sure modifiers like prevent and stop get executed after key filtering
    if (genModifierCode) {
      code += genModifierCode;
    }
    var handlerCode = isMethodPath
      ? handler.value + '($event)'
      : isFunctionExpression
        ? ("(" + (handler.value) + ")($event)")
        : handler.value;
    return ("function($event){" + code + handlerCode + "}")
  }
}

function genKeyFilter (keys) {
  return ("if(!('button' in $event)&&" + (keys.map(genFilterCode).join('&&')) + ")return null;")
}

function genFilterCode (key) {
  var keyVal = parseInt(key, 10);
  if (keyVal) {
    return ("$event.keyCode!==" + keyVal)
  }
  var alias = keyCodes[key];
  return ("_k($event.keyCode," + (JSON.stringify(key)) + (alias ? ',' + JSON.stringify(alias) : '') + ")")
}

/*  */

function bind$1 (el, dir) {
  el.wrapData = function (code) {
    return ("_b(" + code + ",'" + (el.tag) + "'," + (dir.value) + (dir.modifiers && dir.modifiers.prop ? ',true' : '') + ")")
  };
}

/*  */

var baseDirectives = {
  bind: bind$1,
  cloak: noop
};

/*  */

// configurable state
var warn$3;
var transforms$1;
var dataGenFns;
var platformDirectives$1;
var isPlatformReservedTag$1;
var staticRenderFns;
var onceCount;
var currentOptions;

function generate (
  ast,
  options
) {
  // save previous staticRenderFns so generate calls can be nested
  var prevStaticRenderFns = staticRenderFns;
  var currentStaticRenderFns = staticRenderFns = [];
  var prevOnceCount = onceCount;
  onceCount = 0;
  currentOptions = options;
  warn$3 = options.warn || baseWarn;
  transforms$1 = pluckModuleFunction(options.modules, 'transformCode');
  dataGenFns = pluckModuleFunction(options.modules, 'genData');
  platformDirectives$1 = options.directives || {};
  isPlatformReservedTag$1 = options.isReservedTag || no;
  var code = ast ? genElement(ast) : '_c("div")';
  staticRenderFns = prevStaticRenderFns;
  onceCount = prevOnceCount;
  return {
    render: ("with(this){return " + code + "}"),
    staticRenderFns: currentStaticRenderFns
  }
}

function genElement (el) {
  if (el.staticRoot && !el.staticProcessed) {
    return genStatic(el)
  } else if (el.once && !el.onceProcessed) {
    return genOnce(el)
  } else if (el.for && !el.forProcessed) {
    return genFor(el)
  } else if (el.if && !el.ifProcessed) {
    return genIf(el)
  } else if (el.tag === 'template' && !el.slotTarget) {
    return genChildren(el) || 'void 0'
  } else if (el.tag === 'slot') {
    return genSlot(el)
  } else {
    // component or element
    var code;
    if (el.component) {
      code = genComponent(el.component, el);
    } else {
      var data = el.plain ? undefined : genData(el);

      var children = el.inlineTemplate ? null : genChildren(el, true);
      code = "_c('" + (el.tag) + "'" + (data ? ("," + data) : '') + (children ? ("," + children) : '') + ")";
    }
    // module transforms
    for (var i = 0; i < transforms$1.length; i++) {
      code = transforms$1[i](el, code);
    }
    return code
  }
}

// hoist static sub-trees out
function genStatic (el) {
  el.staticProcessed = true;
  staticRenderFns.push(("with(this){return " + (genElement(el)) + "}"));
  return ("_m(" + (staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + ")")
}

// v-once
function genOnce (el) {
  el.onceProcessed = true;
  if (el.if && !el.ifProcessed) {
    return genIf(el)
  } else if (el.staticInFor) {
    var key = '';
    var parent = el.parent;
    while (parent) {
      if (parent.for) {
        key = parent.key;
        break
      }
      parent = parent.parent;
    }
    if (!key) {
      "production" !== 'production' && warn$3(
        "v-once can only be used inside v-for that is keyed. "
      );
      return genElement(el)
    }
    return ("_o(" + (genElement(el)) + "," + (onceCount++) + (key ? ("," + key) : "") + ")")
  } else {
    return genStatic(el)
  }
}

function genIf (el) {
  el.ifProcessed = true; // avoid recursion
  return genIfConditions(el.ifConditions.slice())
}

function genIfConditions (conditions) {
  if (!conditions.length) {
    return '_e()'
  }

  var condition = conditions.shift();
  if (condition.exp) {
    return ("(" + (condition.exp) + ")?" + (genTernaryExp(condition.block)) + ":" + (genIfConditions(conditions)))
  } else {
    return ("" + (genTernaryExp(condition.block)))
  }

  // v-if with v-once should generate code like (a)?_m(0):_m(1)
  function genTernaryExp (el) {
    return el.once ? genOnce(el) : genElement(el)
  }
}

function genFor (el) {
  var exp = el.for;
  var alias = el.alias;
  var iterator1 = el.iterator1 ? ("," + (el.iterator1)) : '';
  var iterator2 = el.iterator2 ? ("," + (el.iterator2)) : '';

  if (
    false
  ) {
    warn$3(
      "<" + (el.tag) + " v-for=\"" + alias + " in " + exp + "\">: component lists rendered with " +
      "v-for should have explicit keys. " +
      "See https://vuejs.org/guide/list.html#key for more info.",
      true /* tip */
    );
  }

  el.forProcessed = true; // avoid recursion
  return "_l((" + exp + ")," +
    "function(" + alias + iterator1 + iterator2 + "){" +
      "return " + (genElement(el)) +
    '})'
}

function genData (el) {
  var data = '{';

  // directives first.
  // directives may mutate the el's other properties before they are generated.
  var dirs = genDirectives(el);
  if (dirs) { data += dirs + ','; }

  // key
  if (el.key) {
    data += "key:" + (el.key) + ",";
  }
  // ref
  if (el.ref) {
    data += "ref:" + (el.ref) + ",";
  }
  if (el.refInFor) {
    data += "refInFor:true,";
  }
  // pre
  if (el.pre) {
    data += "pre:true,";
  }
  // record original tag name for components using "is" attribute
  if (el.component) {
    data += "tag:\"" + (el.tag) + "\",";
  }
  // module data generation functions
  for (var i = 0; i < dataGenFns.length; i++) {
    data += dataGenFns[i](el);
  }
  // attributes
  if (el.attrs) {
    data += "attrs:{" + (genProps(el.attrs)) + "},";
  }
  // DOM props
  if (el.props) {
    data += "domProps:{" + (genProps(el.props)) + "},";
  }
  // event handlers
  if (el.events) {
    data += (genHandlers(el.events, false, warn$3)) + ",";
  }
  if (el.nativeEvents) {
    data += (genHandlers(el.nativeEvents, true, warn$3)) + ",";
  }
  // slot target
  if (el.slotTarget) {
    data += "slot:" + (el.slotTarget) + ",";
  }
  // scoped slots
  if (el.scopedSlots) {
    data += (genScopedSlots(el.scopedSlots)) + ",";
  }
  // component v-model
  if (el.model) {
    data += "model:{value:" + (el.model.value) + ",callback:" + (el.model.callback) + ",expression:" + (el.model.expression) + "},";
  }
  // inline-template
  if (el.inlineTemplate) {
    var inlineTemplate = genInlineTemplate(el);
    if (inlineTemplate) {
      data += inlineTemplate + ",";
    }
  }
  data = data.replace(/,$/, '') + '}';
  // v-bind data wrap
  if (el.wrapData) {
    data = el.wrapData(data);
  }
  return data
}

function genDirectives (el) {
  var dirs = el.directives;
  if (!dirs) { return }
  var res = 'directives:[';
  var hasRuntime = false;
  var i, l, dir, needRuntime;
  for (i = 0, l = dirs.length; i < l; i++) {
    dir = dirs[i];
    needRuntime = true;
    var gen = platformDirectives$1[dir.name] || baseDirectives[dir.name];
    if (gen) {
      // compile-time directive that manipulates AST.
      // returns true if it also needs a runtime counterpart.
      needRuntime = !!gen(el, dir, warn$3);
    }
    if (needRuntime) {
      hasRuntime = true;
      res += "{name:\"" + (dir.name) + "\",rawName:\"" + (dir.rawName) + "\"" + (dir.value ? (",value:(" + (dir.value) + "),expression:" + (JSON.stringify(dir.value))) : '') + (dir.arg ? (",arg:\"" + (dir.arg) + "\"") : '') + (dir.modifiers ? (",modifiers:" + (JSON.stringify(dir.modifiers))) : '') + "},";
    }
  }
  if (hasRuntime) {
    return res.slice(0, -1) + ']'
  }
}

function genInlineTemplate (el) {
  var ast = el.children[0];
  if (false) {
    warn$3('Inline-template components must have exactly one child element.');
  }
  if (ast.type === 1) {
    var inlineRenderFns = generate(ast, currentOptions);
    return ("inlineTemplate:{render:function(){" + (inlineRenderFns.render) + "},staticRenderFns:[" + (inlineRenderFns.staticRenderFns.map(function (code) { return ("function(){" + code + "}"); }).join(',')) + "]}")
  }
}

function genScopedSlots (slots) {
  return ("scopedSlots:_u([" + (Object.keys(slots).map(function (key) { return genScopedSlot(key, slots[key]); }).join(',')) + "])")
}

function genScopedSlot (key, el) {
  return "[" + key + ",function(" + (String(el.attrsMap.scope)) + "){" +
    "return " + (el.tag === 'template'
      ? genChildren(el) || 'void 0'
      : genElement(el)) + "}]"
}

function genChildren (el, checkSkip) {
  var children = el.children;
  if (children.length) {
    var el$1 = children[0];
    // optimize single v-for
    if (children.length === 1 &&
        el$1.for &&
        el$1.tag !== 'template' &&
        el$1.tag !== 'slot') {
      return genElement(el$1)
    }
    var normalizationType = checkSkip ? getNormalizationType(children) : 0;
    return ("[" + (children.map(genNode).join(',')) + "]" + (normalizationType ? ("," + normalizationType) : ''))
  }
}

// determine the normalization needed for the children array.
// 0: no normalization needed
// 1: simple normalization needed (possible 1-level deep nested array)
// 2: full normalization needed
function getNormalizationType (children) {
  var res = 0;
  for (var i = 0; i < children.length; i++) {
    var el = children[i];
    if (el.type !== 1) {
      continue
    }
    if (needsNormalization(el) ||
        (el.ifConditions && el.ifConditions.some(function (c) { return needsNormalization(c.block); }))) {
      res = 2;
      break
    }
    if (maybeComponent(el) ||
        (el.ifConditions && el.ifConditions.some(function (c) { return maybeComponent(c.block); }))) {
      res = 1;
    }
  }
  return res
}

function needsNormalization (el) {
  return el.for !== undefined || el.tag === 'template' || el.tag === 'slot'
}

function maybeComponent (el) {
  return !isPlatformReservedTag$1(el.tag)
}

function genNode (node) {
  if (node.type === 1) {
    return genElement(node)
  } else {
    return genText(node)
  }
}

function genText (text) {
  return ("_v(" + (text.type === 2
    ? text.expression // no need for () because already wrapped in _s()
    : transformSpecialNewlines(JSON.stringify(text.text))) + ")")
}

function genSlot (el) {
  var slotName = el.slotName || '"default"';
  var children = genChildren(el);
  var res = "_t(" + slotName + (children ? ("," + children) : '');
  var attrs = el.attrs && ("{" + (el.attrs.map(function (a) { return ((camelize(a.name)) + ":" + (a.value)); }).join(',')) + "}");
  var bind$$1 = el.attrsMap['v-bind'];
  if ((attrs || bind$$1) && !children) {
    res += ",null";
  }
  if (attrs) {
    res += "," + attrs;
  }
  if (bind$$1) {
    res += (attrs ? '' : ',null') + "," + bind$$1;
  }
  return res + ')'
}

// componentName is el.component, take it as argument to shun flow's pessimistic refinement
function genComponent (componentName, el) {
  var children = el.inlineTemplate ? null : genChildren(el, true);
  return ("_c(" + componentName + "," + (genData(el)) + (children ? ("," + children) : '') + ")")
}

function genProps (props) {
  var res = '';
  for (var i = 0; i < props.length; i++) {
    var prop = props[i];
    res += "\"" + (prop.name) + "\":" + (transformSpecialNewlines(prop.value)) + ",";
  }
  return res.slice(0, -1)
}

// #3895, #4268
function transformSpecialNewlines (text) {
  return text
    .replace(/\u2028/g, '\\u2028')
    .replace(/\u2029/g, '\\u2029')
}

/*  */

// these keywords should not appear inside expressions, but operators like
// typeof, instanceof and in are allowed
var prohibitedKeywordRE = new RegExp('\\b' + (
  'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +
  'super,throw,while,yield,delete,export,import,return,switch,default,' +
  'extends,finally,continue,debugger,function,arguments'
).split(',').join('\\b|\\b') + '\\b');

// these unary operators should not be used as property/method names
var unaryOperatorsRE = new RegExp('\\b' + (
  'delete,typeof,void'
).split(',').join('\\s*\\([^\\)]*\\)|\\b') + '\\s*\\([^\\)]*\\)');

// check valid identifier for v-for
var identRE = /[A-Za-z_$][\w$]*/;

// strip strings in expressions
var stripStringRE = /'(?:[^'\\]|\\.)*'|"(?:[^"\\]|\\.)*"|`(?:[^`\\]|\\.)*\$\{|\}(?:[^`\\]|\\.)*`|`(?:[^`\\]|\\.)*`/g;

// detect problematic expressions in a template
function detectErrors (ast) {
  var errors = [];
  if (ast) {
    checkNode(ast, errors);
  }
  return errors
}

function checkNode (node, errors) {
  if (node.type === 1) {
    for (var name in node.attrsMap) {
      if (dirRE.test(name)) {
        var value = node.attrsMap[name];
        if (value) {
          if (name === 'v-for') {
            checkFor(node, ("v-for=\"" + value + "\""), errors);
          } else if (onRE.test(name)) {
            checkEvent(value, (name + "=\"" + value + "\""), errors);
          } else {
            checkExpression(value, (name + "=\"" + value + "\""), errors);
          }
        }
      }
    }
    if (node.children) {
      for (var i = 0; i < node.children.length; i++) {
        checkNode(node.children[i], errors);
      }
    }
  } else if (node.type === 2) {
    checkExpression(node.expression, node.text, errors);
  }
}

function checkEvent (exp, text, errors) {
  var stipped = exp.replace(stripStringRE, '');
  var keywordMatch = stipped.match(unaryOperatorsRE);
  if (keywordMatch && stipped.charAt(keywordMatch.index - 1) !== '$') {
    errors.push(
      "avoid using JavaScript unary operator as property name: " +
      "\"" + (keywordMatch[0]) + "\" in expression " + (text.trim())
    );
  }
  checkExpression(exp, text, errors);
}

function checkFor (node, text, errors) {
  checkExpression(node.for || '', text, errors);
  checkIdentifier(node.alias, 'v-for alias', text, errors);
  checkIdentifier(node.iterator1, 'v-for iterator', text, errors);
  checkIdentifier(node.iterator2, 'v-for iterator', text, errors);
}

function checkIdentifier (ident, type, text, errors) {
  if (typeof ident === 'string' && !identRE.test(ident)) {
    errors.push(("invalid " + type + " \"" + ident + "\" in expression: " + (text.trim())));
  }
}

function checkExpression (exp, text, errors) {
  try {
    new Function(("return " + exp));
  } catch (e) {
    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);
    if (keywordMatch) {
      errors.push(
        "avoid using JavaScript keyword as property name: " +
        "\"" + (keywordMatch[0]) + "\" in expression " + (text.trim())
      );
    } else {
      errors.push(("invalid expression: " + (text.trim())));
    }
  }
}

/*  */

function baseCompile (
  template,
  options
) {
  var ast = parse(template.trim(), options);
  optimize(ast, options);
  var code = generate(ast, options);
  return {
    ast: ast,
    render: code.render,
    staticRenderFns: code.staticRenderFns
  }
}

function makeFunction (code, errors) {
  try {
    return new Function(code)
  } catch (err) {
    errors.push({ err: err, code: code });
    return noop
  }
}

function createCompiler (baseOptions) {
  var functionCompileCache = Object.create(null);

  function compile (
    template,
    options
  ) {
    var finalOptions = Object.create(baseOptions);
    var errors = [];
    var tips = [];
    finalOptions.warn = function (msg, tip$$1) {
      (tip$$1 ? tips : errors).push(msg);
    };

    if (options) {
      // merge custom modules
      if (options.modules) {
        finalOptions.modules = (baseOptions.modules || []).concat(options.modules);
      }
      // merge custom directives
      if (options.directives) {
        finalOptions.directives = extend(
          Object.create(baseOptions.directives),
          options.directives
        );
      }
      // copy other options
      for (var key in options) {
        if (key !== 'modules' && key !== 'directives') {
          finalOptions[key] = options[key];
        }
      }
    }

    var compiled = baseCompile(template, finalOptions);
    if (false) {
      errors.push.apply(errors, detectErrors(compiled.ast));
    }
    compiled.errors = errors;
    compiled.tips = tips;
    return compiled
  }

  function compileToFunctions (
    template,
    options,
    vm
  ) {
    options = options || {};

    /* istanbul ignore if */
    if (false) {
      // detect possible CSP restriction
      try {
        new Function('return 1');
      } catch (e) {
        if (e.toString().match(/unsafe-eval|CSP/)) {
          warn(
            'It seems you are using the standalone build of Vue.js in an ' +
            'environment with Content Security Policy that prohibits unsafe-eval. ' +
            'The template compiler cannot work in this environment. Consider ' +
            'relaxing the policy to allow unsafe-eval or pre-compiling your ' +
            'templates into render functions.'
          );
        }
      }
    }

    // check cache
    var key = options.delimiters
      ? String(options.delimiters) + template
      : template;
    if (functionCompileCache[key]) {
      return functionCompileCache[key]
    }

    // compile
    var compiled = compile(template, options);

    // check compilation errors/tips
    if (false) {
      if (compiled.errors && compiled.errors.length) {
        warn(
          "Error compiling template:\n\n" + template + "\n\n" +
          compiled.errors.map(function (e) { return ("- " + e); }).join('\n') + '\n',
          vm
        );
      }
      if (compiled.tips && compiled.tips.length) {
        compiled.tips.forEach(function (msg) { return tip(msg, vm); });
      }
    }

    // turn code into functions
    var res = {};
    var fnGenErrors = [];
    res.render = makeFunction(compiled.render, fnGenErrors);
    var l = compiled.staticRenderFns.length;
    res.staticRenderFns = new Array(l);
    for (var i = 0; i < l; i++) {
      res.staticRenderFns[i] = makeFunction(compiled.staticRenderFns[i], fnGenErrors);
    }

    // check function generation errors.
    // this should only happen if there is a bug in the compiler itself.
    // mostly for codegen development use
    /* istanbul ignore if */
    if (false) {
      if ((!compiled.errors || !compiled.errors.length) && fnGenErrors.length) {
        warn(
          "Failed to generate render function:\n\n" +
          fnGenErrors.map(function (ref) {
            var err = ref.err;
            var code = ref.code;

            return ((err.toString()) + " in\n\n" + code + "\n");
        }).join('\n'),
          vm
        );
      }
    }

    return (functionCompileCache[key] = res)
  }

  return {
    compile: compile,
    compileToFunctions: compileToFunctions
  }
}

/*  */

function transformNode (el, options) {
  var warn = options.warn || baseWarn;
  var staticClass = getAndRemoveAttr(el, 'class');
  if (false) {
    var expression = parseText(staticClass, options.delimiters);
    if (expression) {
      warn(
        "class=\"" + staticClass + "\": " +
        'Interpolation inside attributes has been removed. ' +
        'Use v-bind or the colon shorthand instead. For example, ' +
        'instead of <div class="{{ val }}">, use <div :class="val">.'
      );
    }
  }
  if (staticClass) {
    el.staticClass = JSON.stringify(staticClass);
  }
  var classBinding = getBindingAttr(el, 'class', false /* getStatic */);
  if (classBinding) {
    el.classBinding = classBinding;
  }
}

function genData$1 (el) {
  var data = '';
  if (el.staticClass) {
    data += "staticClass:" + (el.staticClass) + ",";
  }
  if (el.classBinding) {
    data += "class:" + (el.classBinding) + ",";
  }
  return data
}

var klass$1 = {
  staticKeys: ['staticClass'],
  transformNode: transformNode,
  genData: genData$1
};

/*  */

function transformNode$1 (el, options) {
  var warn = options.warn || baseWarn;
  var staticStyle = getAndRemoveAttr(el, 'style');
  if (staticStyle) {
    /* istanbul ignore if */
    if (false) {
      var expression = parseText(staticStyle, options.delimiters);
      if (expression) {
        warn(
          "style=\"" + staticStyle + "\": " +
          'Interpolation inside attributes has been removed. ' +
          'Use v-bind or the colon shorthand instead. For example, ' +
          'instead of <div style="{{ val }}">, use <div :style="val">.'
        );
      }
    }
    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));
  }

  var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);
  if (styleBinding) {
    el.styleBinding = styleBinding;
  }
}

function genData$2 (el) {
  var data = '';
  if (el.staticStyle) {
    data += "staticStyle:" + (el.staticStyle) + ",";
  }
  if (el.styleBinding) {
    data += "style:(" + (el.styleBinding) + "),";
  }
  return data
}

var style$1 = {
  staticKeys: ['staticStyle'],
  transformNode: transformNode$1,
  genData: genData$2
};

var modules$1 = [
  klass$1,
  style$1
];

/*  */

function text (el, dir) {
  if (dir.value) {
    addProp(el, 'textContent', ("_s(" + (dir.value) + ")"));
  }
}

/*  */

function html (el, dir) {
  if (dir.value) {
    addProp(el, 'innerHTML', ("_s(" + (dir.value) + ")"));
  }
}

var directives$1 = {
  model: model,
  text: text,
  html: html
};

/*  */

var baseOptions = {
  expectHTML: true,
  modules: modules$1,
  directives: directives$1,
  isPreTag: isPreTag,
  isUnaryTag: isUnaryTag,
  mustUseProp: mustUseProp,
  canBeLeftOpenTag: canBeLeftOpenTag,
  isReservedTag: isReservedTag,
  getTagNamespace: getTagNamespace,
  staticKeys: genStaticKeys(modules$1)
};

var ref$1 = createCompiler(baseOptions);
var compileToFunctions = ref$1.compileToFunctions;

/*  */

var idToTemplate = cached(function (id) {
  var el = query(id);
  return el && el.innerHTML
});

var mount = Vue$3.prototype.$mount;
Vue$3.prototype.$mount = function (
  el,
  hydrating
) {
  el = el && query(el);

  /* istanbul ignore if */
  if (el === document.body || el === document.documentElement) {
    "production" !== 'production' && warn(
      "Do not mount Vue to <html> or <body> - mount to normal elements instead."
    );
    return this
  }

  var options = this.$options;
  // resolve template/el and convert to render function
  if (!options.render) {
    var template = options.template;
    if (template) {
      if (typeof template === 'string') {
        if (template.charAt(0) === '#') {
          template = idToTemplate(template);
          /* istanbul ignore if */
          if (false) {
            warn(
              ("Template element not found or is empty: " + (options.template)),
              this
            );
          }
        }
      } else if (template.nodeType) {
        template = template.innerHTML;
      } else {
        if (false) {
          warn('invalid template option:' + template, this);
        }
        return this
      }
    } else if (el) {
      template = getOuterHTML(el);
    }
    if (template) {
      /* istanbul ignore if */
      if (false) {
        mark('compile');
      }

      var ref = compileToFunctions(template, {
        shouldDecodeNewlines: shouldDecodeNewlines,
        delimiters: options.delimiters
      }, this);
      var render = ref.render;
      var staticRenderFns = ref.staticRenderFns;
      options.render = render;
      options.staticRenderFns = staticRenderFns;

      /* istanbul ignore if */
      if (false) {
        mark('compile end');
        measure(((this._name) + " compile"), 'compile', 'compile end');
      }
    }
  }
  return mount.call(this, el, hydrating)
};

/**
 * Get outerHTML of elements, taking care
 * of SVG elements in IE as well.
 */
function getOuterHTML (el) {
  if (el.outerHTML) {
    return el.outerHTML
  } else {
    var container = document.createElement('div');
    container.appendChild(el.cloneNode(true));
    return container.innerHTML
  }
}

Vue$3.compile = compileToFunctions;

module.exports = Vue$3;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(14)))

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

var Component = __webpack_require__(1)(
  /* script */
  __webpack_require__(23),
  /* template */
  __webpack_require__(110),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
 * jQuery JavaScript Library v2.2.4
 * http://jquery.com/
 *
 * Includes Sizzle.js
 * http://sizzlejs.com/
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2016-05-20T17:23Z
 */

(function( global, factory ) {

	if ( typeof module === "object" && typeof module.exports === "object" ) {
		// For CommonJS and CommonJS-like environments where a proper `window`
		// is present, execute the factory and get jQuery.
		// For environments that do not have a `window` with a `document`
		// (such as Node.js), expose a factory as module.exports.
		// This accentuates the need for the creation of a real `window`.
		// e.g. var jQuery = require("jquery")(window);
		// See ticket #14549 for more info.
		module.exports = global.document ?
			factory( global, true ) :
			function( w ) {
				if ( !w.document ) {
					throw new Error( "jQuery requires a window with a document" );
				}
				return factory( w );
			};
	} else {
		factory( global );
	}

// Pass this if window is not defined yet
}(typeof window !== "undefined" ? window : this, function( window, noGlobal ) {

// Support: Firefox 18+
// Can't be in strict mode, several libs including ASP.NET trace
// the stack via arguments.caller.callee and Firefox dies if
// you try to trace through "use strict" call chains. (#13335)
//"use strict";
var arr = [];

var document = window.document;

var slice = arr.slice;

var concat = arr.concat;

var push = arr.push;

var indexOf = arr.indexOf;

var class2type = {};

var toString = class2type.toString;

var hasOwn = class2type.hasOwnProperty;

var support = {};



var
	version = "2.2.4",

	// Define a local copy of jQuery
	jQuery = function( selector, context ) {

		// The jQuery object is actually just the init constructor 'enhanced'
		// Need init if jQuery is called (just allow error to be thrown if not included)
		return new jQuery.fn.init( selector, context );
	},

	// Support: Android<4.1
	// Make sure we trim BOM and NBSP
	rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,

	// Matches dashed string for camelizing
	rmsPrefix = /^-ms-/,
	rdashAlpha = /-([\da-z])/gi,

	// Used by jQuery.camelCase as callback to replace()
	fcamelCase = function( all, letter ) {
		return letter.toUpperCase();
	};

jQuery.fn = jQuery.prototype = {

	// The current version of jQuery being used
	jquery: version,

	constructor: jQuery,

	// Start with an empty selector
	selector: "",

	// The default length of a jQuery object is 0
	length: 0,

	toArray: function() {
		return slice.call( this );
	},

	// Get the Nth element in the matched element set OR
	// Get the whole matched element set as a clean array
	get: function( num ) {
		return num != null ?

			// Return just the one element from the set
			( num < 0 ? this[ num + this.length ] : this[ num ] ) :

			// Return all the elements in a clean array
			slice.call( this );
	},

	// Take an array of elements and push it onto the stack
	// (returning the new matched element set)
	pushStack: function( elems ) {

		// Build a new jQuery matched element set
		var ret = jQuery.merge( this.constructor(), elems );

		// Add the old object onto the stack (as a reference)
		ret.prevObject = this;
		ret.context = this.context;

		// Return the newly-formed element set
		return ret;
	},

	// Execute a callback for every element in the matched set.
	each: function( callback ) {
		return jQuery.each( this, callback );
	},

	map: function( callback ) {
		return this.pushStack( jQuery.map( this, function( elem, i ) {
			return callback.call( elem, i, elem );
		} ) );
	},

	slice: function() {
		return this.pushStack( slice.apply( this, arguments ) );
	},

	first: function() {
		return this.eq( 0 );
	},

	last: function() {
		return this.eq( -1 );
	},

	eq: function( i ) {
		var len = this.length,
			j = +i + ( i < 0 ? len : 0 );
		return this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );
	},

	end: function() {
		return this.prevObject || this.constructor();
	},

	// For internal use only.
	// Behaves like an Array's method, not like a jQuery method.
	push: push,
	sort: arr.sort,
	splice: arr.splice
};

jQuery.extend = jQuery.fn.extend = function() {
	var options, name, src, copy, copyIsArray, clone,
		target = arguments[ 0 ] || {},
		i = 1,
		length = arguments.length,
		deep = false;

	// Handle a deep copy situation
	if ( typeof target === "boolean" ) {
		deep = target;

		// Skip the boolean and the target
		target = arguments[ i ] || {};
		i++;
	}

	// Handle case when target is a string or something (possible in deep copy)
	if ( typeof target !== "object" && !jQuery.isFunction( target ) ) {
		target = {};
	}

	// Extend jQuery itself if only one argument is passed
	if ( i === length ) {
		target = this;
		i--;
	}

	for ( ; i < length; i++ ) {

		// Only deal with non-null/undefined values
		if ( ( options = arguments[ i ] ) != null ) {

			// Extend the base object
			for ( name in options ) {
				src = target[ name ];
				copy = options[ name ];

				// Prevent never-ending loop
				if ( target === copy ) {
					continue;
				}

				// Recurse if we're merging plain objects or arrays
				if ( deep && copy && ( jQuery.isPlainObject( copy ) ||
					( copyIsArray = jQuery.isArray( copy ) ) ) ) {

					if ( copyIsArray ) {
						copyIsArray = false;
						clone = src && jQuery.isArray( src ) ? src : [];

					} else {
						clone = src && jQuery.isPlainObject( src ) ? src : {};
					}

					// Never move original objects, clone them
					target[ name ] = jQuery.extend( deep, clone, copy );

				// Don't bring in undefined values
				} else if ( copy !== undefined ) {
					target[ name ] = copy;
				}
			}
		}
	}

	// Return the modified object
	return target;
};

jQuery.extend( {

	// Unique for each copy of jQuery on the page
	expando: "jQuery" + ( version + Math.random() ).replace( /\D/g, "" ),

	// Assume jQuery is ready without the ready module
	isReady: true,

	error: function( msg ) {
		throw new Error( msg );
	},

	noop: function() {},

	isFunction: function( obj ) {
		return jQuery.type( obj ) === "function";
	},

	isArray: Array.isArray,

	isWindow: function( obj ) {
		return obj != null && obj === obj.window;
	},

	isNumeric: function( obj ) {

		// parseFloat NaNs numeric-cast false positives (null|true|false|"")
		// ...but misinterprets leading-number strings, particularly hex literals ("0x...")
		// subtraction forces infinities to NaN
		// adding 1 corrects loss of precision from parseFloat (#15100)
		var realStringObj = obj && obj.toString();
		return !jQuery.isArray( obj ) && ( realStringObj - parseFloat( realStringObj ) + 1 ) >= 0;
	},

	isPlainObject: function( obj ) {
		var key;

		// Not plain objects:
		// - Any object or value whose internal [[Class]] property is not "[object Object]"
		// - DOM nodes
		// - window
		if ( jQuery.type( obj ) !== "object" || obj.nodeType || jQuery.isWindow( obj ) ) {
			return false;
		}

		// Not own constructor property must be Object
		if ( obj.constructor &&
				!hasOwn.call( obj, "constructor" ) &&
				!hasOwn.call( obj.constructor.prototype || {}, "isPrototypeOf" ) ) {
			return false;
		}

		// Own properties are enumerated firstly, so to speed up,
		// if last one is own, then all properties are own
		for ( key in obj ) {}

		return key === undefined || hasOwn.call( obj, key );
	},

	isEmptyObject: function( obj ) {
		var name;
		for ( name in obj ) {
			return false;
		}
		return true;
	},

	type: function( obj ) {
		if ( obj == null ) {
			return obj + "";
		}

		// Support: Android<4.0, iOS<6 (functionish RegExp)
		return typeof obj === "object" || typeof obj === "function" ?
			class2type[ toString.call( obj ) ] || "object" :
			typeof obj;
	},

	// Evaluates a script in a global context
	globalEval: function( code ) {
		var script,
			indirect = eval;

		code = jQuery.trim( code );

		if ( code ) {

			// If the code includes a valid, prologue position
			// strict mode pragma, execute code by injecting a
			// script tag into the document.
			if ( code.indexOf( "use strict" ) === 1 ) {
				script = document.createElement( "script" );
				script.text = code;
				document.head.appendChild( script ).parentNode.removeChild( script );
			} else {

				// Otherwise, avoid the DOM node creation, insertion
				// and removal by using an indirect global eval

				indirect( code );
			}
		}
	},

	// Convert dashed to camelCase; used by the css and data modules
	// Support: IE9-11+
	// Microsoft forgot to hump their vendor prefix (#9572)
	camelCase: function( string ) {
		return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );
	},

	nodeName: function( elem, name ) {
		return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();
	},

	each: function( obj, callback ) {
		var length, i = 0;

		if ( isArrayLike( obj ) ) {
			length = obj.length;
			for ( ; i < length; i++ ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		} else {
			for ( i in obj ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		}

		return obj;
	},

	// Support: Android<4.1
	trim: function( text ) {
		return text == null ?
			"" :
			( text + "" ).replace( rtrim, "" );
	},

	// results is for internal usage only
	makeArray: function( arr, results ) {
		var ret = results || [];

		if ( arr != null ) {
			if ( isArrayLike( Object( arr ) ) ) {
				jQuery.merge( ret,
					typeof arr === "string" ?
					[ arr ] : arr
				);
			} else {
				push.call( ret, arr );
			}
		}

		return ret;
	},

	inArray: function( elem, arr, i ) {
		return arr == null ? -1 : indexOf.call( arr, elem, i );
	},

	merge: function( first, second ) {
		var len = +second.length,
			j = 0,
			i = first.length;

		for ( ; j < len; j++ ) {
			first[ i++ ] = second[ j ];
		}

		first.length = i;

		return first;
	},

	grep: function( elems, callback, invert ) {
		var callbackInverse,
			matches = [],
			i = 0,
			length = elems.length,
			callbackExpect = !invert;

		// Go through the array, only saving the items
		// that pass the validator function
		for ( ; i < length; i++ ) {
			callbackInverse = !callback( elems[ i ], i );
			if ( callbackInverse !== callbackExpect ) {
				matches.push( elems[ i ] );
			}
		}

		return matches;
	},

	// arg is for internal usage only
	map: function( elems, callback, arg ) {
		var length, value,
			i = 0,
			ret = [];

		// Go through the array, translating each of the items to their new values
		if ( isArrayLike( elems ) ) {
			length = elems.length;
			for ( ; i < length; i++ ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}

		// Go through every key on the object,
		} else {
			for ( i in elems ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}
		}

		// Flatten any nested arrays
		return concat.apply( [], ret );
	},

	// A global GUID counter for objects
	guid: 1,

	// Bind a function to a context, optionally partially applying any
	// arguments.
	proxy: function( fn, context ) {
		var tmp, args, proxy;

		if ( typeof context === "string" ) {
			tmp = fn[ context ];
			context = fn;
			fn = tmp;
		}

		// Quick check to determine if target is callable, in the spec
		// this throws a TypeError, but we will just return undefined.
		if ( !jQuery.isFunction( fn ) ) {
			return undefined;
		}

		// Simulated bind
		args = slice.call( arguments, 2 );
		proxy = function() {
			return fn.apply( context || this, args.concat( slice.call( arguments ) ) );
		};

		// Set the guid of unique handler to the same of original handler, so it can be removed
		proxy.guid = fn.guid = fn.guid || jQuery.guid++;

		return proxy;
	},

	now: Date.now,

	// jQuery.support is not used in Core but other projects attach their
	// properties to it so it needs to exist.
	support: support
} );

// JSHint would error on this code due to the Symbol not being defined in ES5.
// Defining this global in .jshintrc would create a danger of using the global
// unguarded in another place, it seems safer to just disable JSHint for these
// three lines.
/* jshint ignore: start */
if ( typeof Symbol === "function" ) {
	jQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];
}
/* jshint ignore: end */

// Populate the class2type map
jQuery.each( "Boolean Number String Function Array Date RegExp Object Error Symbol".split( " " ),
function( i, name ) {
	class2type[ "[object " + name + "]" ] = name.toLowerCase();
} );

function isArrayLike( obj ) {

	// Support: iOS 8.2 (not reproducible in simulator)
	// `in` check used to prevent JIT error (gh-2145)
	// hasOwn isn't used here due to false negatives
	// regarding Nodelist length in IE
	var length = !!obj && "length" in obj && obj.length,
		type = jQuery.type( obj );

	if ( type === "function" || jQuery.isWindow( obj ) ) {
		return false;
	}

	return type === "array" || length === 0 ||
		typeof length === "number" && length > 0 && ( length - 1 ) in obj;
}
var Sizzle =
/*!
 * Sizzle CSS Selector Engine v2.2.1
 * http://sizzlejs.com/
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2015-10-17
 */
(function( window ) {

var i,
	support,
	Expr,
	getText,
	isXML,
	tokenize,
	compile,
	select,
	outermostContext,
	sortInput,
	hasDuplicate,

	// Local document vars
	setDocument,
	document,
	docElem,
	documentIsHTML,
	rbuggyQSA,
	rbuggyMatches,
	matches,
	contains,

	// Instance-specific data
	expando = "sizzle" + 1 * new Date(),
	preferredDoc = window.document,
	dirruns = 0,
	done = 0,
	classCache = createCache(),
	tokenCache = createCache(),
	compilerCache = createCache(),
	sortOrder = function( a, b ) {
		if ( a === b ) {
			hasDuplicate = true;
		}
		return 0;
	},

	// General-purpose constants
	MAX_NEGATIVE = 1 << 31,

	// Instance methods
	hasOwn = ({}).hasOwnProperty,
	arr = [],
	pop = arr.pop,
	push_native = arr.push,
	push = arr.push,
	slice = arr.slice,
	// Use a stripped-down indexOf as it's faster than native
	// http://jsperf.com/thor-indexof-vs-for/5
	indexOf = function( list, elem ) {
		var i = 0,
			len = list.length;
		for ( ; i < len; i++ ) {
			if ( list[i] === elem ) {
				return i;
			}
		}
		return -1;
	},

	booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",

	// Regular expressions

	// http://www.w3.org/TR/css3-selectors/#whitespace
	whitespace = "[\\x20\\t\\r\\n\\f]",

	// http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier
	identifier = "(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",

	// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors
	attributes = "\\[" + whitespace + "*(" + identifier + ")(?:" + whitespace +
		// Operator (capture 2)
		"*([*^$|!~]?=)" + whitespace +
		// "Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]"
		"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" + whitespace +
		"*\\]",

	pseudos = ":(" + identifier + ")(?:\\((" +
		// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:
		// 1. quoted (capture 3; capture 4 or capture 5)
		"('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|" +
		// 2. simple (capture 6)
		"((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|" +
		// 3. anything else (capture 2)
		".*" +
		")\\)|)",

	// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
	rwhitespace = new RegExp( whitespace + "+", "g" ),
	rtrim = new RegExp( "^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g" ),

	rcomma = new RegExp( "^" + whitespace + "*," + whitespace + "*" ),
	rcombinators = new RegExp( "^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace + "*" ),

	rattributeQuotes = new RegExp( "=" + whitespace + "*([^\\]'\"]*?)" + whitespace + "*\\]", "g" ),

	rpseudo = new RegExp( pseudos ),
	ridentifier = new RegExp( "^" + identifier + "$" ),

	matchExpr = {
		"ID": new RegExp( "^#(" + identifier + ")" ),
		"CLASS": new RegExp( "^\\.(" + identifier + ")" ),
		"TAG": new RegExp( "^(" + identifier + "|[*])" ),
		"ATTR": new RegExp( "^" + attributes ),
		"PSEUDO": new RegExp( "^" + pseudos ),
		"CHILD": new RegExp( "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace +
			"*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace +
			"*(\\d+)|))" + whitespace + "*\\)|)", "i" ),
		"bool": new RegExp( "^(?:" + booleans + ")$", "i" ),
		// For use in libraries implementing .is()
		// We use this for POS matching in `select`
		"needsContext": new RegExp( "^" + whitespace + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" +
			whitespace + "*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i" )
	},

	rinputs = /^(?:input|select|textarea|button)$/i,
	rheader = /^h\d$/i,

	rnative = /^[^{]+\{\s*\[native \w/,

	// Easily-parseable/retrievable ID or TAG or CLASS selectors
	rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,

	rsibling = /[+~]/,
	rescape = /'|\\/g,

	// CSS escapes http://www.w3.org/TR/CSS21/syndata.html#escaped-characters
	runescape = new RegExp( "\\\\([\\da-f]{1,6}" + whitespace + "?|(" + whitespace + ")|.)", "ig" ),
	funescape = function( _, escaped, escapedWhitespace ) {
		var high = "0x" + escaped - 0x10000;
		// NaN means non-codepoint
		// Support: Firefox<24
		// Workaround erroneous numeric interpretation of +"0x"
		return high !== high || escapedWhitespace ?
			escaped :
			high < 0 ?
				// BMP codepoint
				String.fromCharCode( high + 0x10000 ) :
				// Supplemental Plane codepoint (surrogate pair)
				String.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );
	},

	// Used for iframes
	// See setDocument()
	// Removing the function wrapper causes a "Permission Denied"
	// error in IE
	unloadHandler = function() {
		setDocument();
	};

// Optimize for push.apply( _, NodeList )
try {
	push.apply(
		(arr = slice.call( preferredDoc.childNodes )),
		preferredDoc.childNodes
	);
	// Support: Android<4.0
	// Detect silently failing push.apply
	arr[ preferredDoc.childNodes.length ].nodeType;
} catch ( e ) {
	push = { apply: arr.length ?

		// Leverage slice if possible
		function( target, els ) {
			push_native.apply( target, slice.call(els) );
		} :

		// Support: IE<9
		// Otherwise append directly
		function( target, els ) {
			var j = target.length,
				i = 0;
			// Can't trust NodeList.length
			while ( (target[j++] = els[i++]) ) {}
			target.length = j - 1;
		}
	};
}

function Sizzle( selector, context, results, seed ) {
	var m, i, elem, nid, nidselect, match, groups, newSelector,
		newContext = context && context.ownerDocument,

		// nodeType defaults to 9, since context defaults to document
		nodeType = context ? context.nodeType : 9;

	results = results || [];

	// Return early from calls with invalid selector or context
	if ( typeof selector !== "string" || !selector ||
		nodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {

		return results;
	}

	// Try to shortcut find operations (as opposed to filters) in HTML documents
	if ( !seed ) {

		if ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {
			setDocument( context );
		}
		context = context || document;

		if ( documentIsHTML ) {

			// If the selector is sufficiently simple, try using a "get*By*" DOM method
			// (excepting DocumentFragment context, where the methods don't exist)
			if ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {

				// ID selector
				if ( (m = match[1]) ) {

					// Document context
					if ( nodeType === 9 ) {
						if ( (elem = context.getElementById( m )) ) {

							// Support: IE, Opera, Webkit
							// TODO: identify versions
							// getElementById can match elements by name instead of ID
							if ( elem.id === m ) {
								results.push( elem );
								return results;
							}
						} else {
							return results;
						}

					// Element context
					} else {

						// Support: IE, Opera, Webkit
						// TODO: identify versions
						// getElementById can match elements by name instead of ID
						if ( newContext && (elem = newContext.getElementById( m )) &&
							contains( context, elem ) &&
							elem.id === m ) {

							results.push( elem );
							return results;
						}
					}

				// Type selector
				} else if ( match[2] ) {
					push.apply( results, context.getElementsByTagName( selector ) );
					return results;

				// Class selector
				} else if ( (m = match[3]) && support.getElementsByClassName &&
					context.getElementsByClassName ) {

					push.apply( results, context.getElementsByClassName( m ) );
					return results;
				}
			}

			// Take advantage of querySelectorAll
			if ( support.qsa &&
				!compilerCache[ selector + " " ] &&
				(!rbuggyQSA || !rbuggyQSA.test( selector )) ) {

				if ( nodeType !== 1 ) {
					newContext = context;
					newSelector = selector;

				// qSA looks outside Element context, which is not what we want
				// Thanks to Andrew Dupont for this workaround technique
				// Support: IE <=8
				// Exclude object elements
				} else if ( context.nodeName.toLowerCase() !== "object" ) {

					// Capture the context ID, setting it first if necessary
					if ( (nid = context.getAttribute( "id" )) ) {
						nid = nid.replace( rescape, "\\$&" );
					} else {
						context.setAttribute( "id", (nid = expando) );
					}

					// Prefix every selector in the list
					groups = tokenize( selector );
					i = groups.length;
					nidselect = ridentifier.test( nid ) ? "#" + nid : "[id='" + nid + "']";
					while ( i-- ) {
						groups[i] = nidselect + " " + toSelector( groups[i] );
					}
					newSelector = groups.join( "," );

					// Expand context for sibling selectors
					newContext = rsibling.test( selector ) && testContext( context.parentNode ) ||
						context;
				}

				if ( newSelector ) {
					try {
						push.apply( results,
							newContext.querySelectorAll( newSelector )
						);
						return results;
					} catch ( qsaError ) {
					} finally {
						if ( nid === expando ) {
							context.removeAttribute( "id" );
						}
					}
				}
			}
		}
	}

	// All others
	return select( selector.replace( rtrim, "$1" ), context, results, seed );
}

/**
 * Create key-value caches of limited size
 * @returns {function(string, object)} Returns the Object data after storing it on itself with
 *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
 *	deleting the oldest entry
 */
function createCache() {
	var keys = [];

	function cache( key, value ) {
		// Use (key + " ") to avoid collision with native prototype properties (see Issue #157)
		if ( keys.push( key + " " ) > Expr.cacheLength ) {
			// Only keep the most recent entries
			delete cache[ keys.shift() ];
		}
		return (cache[ key + " " ] = value);
	}
	return cache;
}

/**
 * Mark a function for special use by Sizzle
 * @param {Function} fn The function to mark
 */
function markFunction( fn ) {
	fn[ expando ] = true;
	return fn;
}

/**
 * Support testing using an element
 * @param {Function} fn Passed the created div and expects a boolean result
 */
function assert( fn ) {
	var div = document.createElement("div");

	try {
		return !!fn( div );
	} catch (e) {
		return false;
	} finally {
		// Remove from its parent by default
		if ( div.parentNode ) {
			div.parentNode.removeChild( div );
		}
		// release memory in IE
		div = null;
	}
}

/**
 * Adds the same handler for all of the specified attrs
 * @param {String} attrs Pipe-separated list of attributes
 * @param {Function} handler The method that will be applied
 */
function addHandle( attrs, handler ) {
	var arr = attrs.split("|"),
		i = arr.length;

	while ( i-- ) {
		Expr.attrHandle[ arr[i] ] = handler;
	}
}

/**
 * Checks document order of two siblings
 * @param {Element} a
 * @param {Element} b
 * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b
 */
function siblingCheck( a, b ) {
	var cur = b && a,
		diff = cur && a.nodeType === 1 && b.nodeType === 1 &&
			( ~b.sourceIndex || MAX_NEGATIVE ) -
			( ~a.sourceIndex || MAX_NEGATIVE );

	// Use IE sourceIndex if available on both nodes
	if ( diff ) {
		return diff;
	}

	// Check if b follows a
	if ( cur ) {
		while ( (cur = cur.nextSibling) ) {
			if ( cur === b ) {
				return -1;
			}
		}
	}

	return a ? 1 : -1;
}

/**
 * Returns a function to use in pseudos for input types
 * @param {String} type
 */
function createInputPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return name === "input" && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for buttons
 * @param {String} type
 */
function createButtonPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return (name === "input" || name === "button") && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for positionals
 * @param {Function} fn
 */
function createPositionalPseudo( fn ) {
	return markFunction(function( argument ) {
		argument = +argument;
		return markFunction(function( seed, matches ) {
			var j,
				matchIndexes = fn( [], seed.length, argument ),
				i = matchIndexes.length;

			// Match elements found at the specified indexes
			while ( i-- ) {
				if ( seed[ (j = matchIndexes[i]) ] ) {
					seed[j] = !(matches[j] = seed[j]);
				}
			}
		});
	});
}

/**
 * Checks a node for validity as a Sizzle context
 * @param {Element|Object=} context
 * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
 */
function testContext( context ) {
	return context && typeof context.getElementsByTagName !== "undefined" && context;
}

// Expose support vars for convenience
support = Sizzle.support = {};

/**
 * Detects XML nodes
 * @param {Element|Object} elem An element or a document
 * @returns {Boolean} True iff elem is a non-HTML XML node
 */
isXML = Sizzle.isXML = function( elem ) {
	// documentElement is verified for cases where it doesn't yet exist
	// (such as loading iframes in IE - #4833)
	var documentElement = elem && (elem.ownerDocument || elem).documentElement;
	return documentElement ? documentElement.nodeName !== "HTML" : false;
};

/**
 * Sets document-related variables once based on the current document
 * @param {Element|Object} [doc] An element or document object to use to set the document
 * @returns {Object} Returns the current document
 */
setDocument = Sizzle.setDocument = function( node ) {
	var hasCompare, parent,
		doc = node ? node.ownerDocument || node : preferredDoc;

	// Return early if doc is invalid or already selected
	if ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {
		return document;
	}

	// Update global variables
	document = doc;
	docElem = document.documentElement;
	documentIsHTML = !isXML( document );

	// Support: IE 9-11, Edge
	// Accessing iframe documents after unload throws "permission denied" errors (jQuery #13936)
	if ( (parent = document.defaultView) && parent.top !== parent ) {
		// Support: IE 11
		if ( parent.addEventListener ) {
			parent.addEventListener( "unload", unloadHandler, false );

		// Support: IE 9 - 10 only
		} else if ( parent.attachEvent ) {
			parent.attachEvent( "onunload", unloadHandler );
		}
	}

	/* Attributes
	---------------------------------------------------------------------- */

	// Support: IE<8
	// Verify that getAttribute really returns attributes and not properties
	// (excepting IE8 booleans)
	support.attributes = assert(function( div ) {
		div.className = "i";
		return !div.getAttribute("className");
	});

	/* getElement(s)By*
	---------------------------------------------------------------------- */

	// Check if getElementsByTagName("*") returns only elements
	support.getElementsByTagName = assert(function( div ) {
		div.appendChild( document.createComment("") );
		return !div.getElementsByTagName("*").length;
	});

	// Support: IE<9
	support.getElementsByClassName = rnative.test( document.getElementsByClassName );

	// Support: IE<10
	// Check if getElementById returns elements by name
	// The broken getElementById methods don't pick up programatically-set names,
	// so use a roundabout getElementsByName test
	support.getById = assert(function( div ) {
		docElem.appendChild( div ).id = expando;
		return !document.getElementsByName || !document.getElementsByName( expando ).length;
	});

	// ID find and filter
	if ( support.getById ) {
		Expr.find["ID"] = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var m = context.getElementById( id );
				return m ? [ m ] : [];
			}
		};
		Expr.filter["ID"] = function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				return elem.getAttribute("id") === attrId;
			};
		};
	} else {
		// Support: IE6/7
		// getElementById is not reliable as a find shortcut
		delete Expr.find["ID"];

		Expr.filter["ID"] =  function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				var node = typeof elem.getAttributeNode !== "undefined" &&
					elem.getAttributeNode("id");
				return node && node.value === attrId;
			};
		};
	}

	// Tag
	Expr.find["TAG"] = support.getElementsByTagName ?
		function( tag, context ) {
			if ( typeof context.getElementsByTagName !== "undefined" ) {
				return context.getElementsByTagName( tag );

			// DocumentFragment nodes don't have gEBTN
			} else if ( support.qsa ) {
				return context.querySelectorAll( tag );
			}
		} :

		function( tag, context ) {
			var elem,
				tmp = [],
				i = 0,
				// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too
				results = context.getElementsByTagName( tag );

			// Filter out possible comments
			if ( tag === "*" ) {
				while ( (elem = results[i++]) ) {
					if ( elem.nodeType === 1 ) {
						tmp.push( elem );
					}
				}

				return tmp;
			}
			return results;
		};

	// Class
	Expr.find["CLASS"] = support.getElementsByClassName && function( className, context ) {
		if ( typeof context.getElementsByClassName !== "undefined" && documentIsHTML ) {
			return context.getElementsByClassName( className );
		}
	};

	/* QSA/matchesSelector
	---------------------------------------------------------------------- */

	// QSA and matchesSelector support

	// matchesSelector(:active) reports false when true (IE9/Opera 11.5)
	rbuggyMatches = [];

	// qSa(:focus) reports false when true (Chrome 21)
	// We allow this because of a bug in IE8/9 that throws an error
	// whenever `document.activeElement` is accessed on an iframe
	// So, we allow :focus to pass through QSA all the time to avoid the IE error
	// See http://bugs.jquery.com/ticket/13378
	rbuggyQSA = [];

	if ( (support.qsa = rnative.test( document.querySelectorAll )) ) {
		// Build QSA regex
		// Regex strategy adopted from Diego Perini
		assert(function( div ) {
			// Select is set to empty string on purpose
			// This is to test IE's treatment of not explicitly
			// setting a boolean content attribute,
			// since its presence should be enough
			// http://bugs.jquery.com/ticket/12359
			docElem.appendChild( div ).innerHTML = "<a id='" + expando + "'></a>" +
				"<select id='" + expando + "-\r\\' msallowcapture=''>" +
				"<option selected=''></option></select>";

			// Support: IE8, Opera 11-12.16
			// Nothing should be selected when empty strings follow ^= or $= or *=
			// The test attribute must be unknown in Opera but "safe" for WinRT
			// http://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section
			if ( div.querySelectorAll("[msallowcapture^='']").length ) {
				rbuggyQSA.push( "[*^$]=" + whitespace + "*(?:''|\"\")" );
			}

			// Support: IE8
			// Boolean attributes and "value" are not treated correctly
			if ( !div.querySelectorAll("[selected]").length ) {
				rbuggyQSA.push( "\\[" + whitespace + "*(?:value|" + booleans + ")" );
			}

			// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+
			if ( !div.querySelectorAll( "[id~=" + expando + "-]" ).length ) {
				rbuggyQSA.push("~=");
			}

			// Webkit/Opera - :checked should return selected option elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			// IE8 throws error here and will not see later tests
			if ( !div.querySelectorAll(":checked").length ) {
				rbuggyQSA.push(":checked");
			}

			// Support: Safari 8+, iOS 8+
			// https://bugs.webkit.org/show_bug.cgi?id=136851
			// In-page `selector#id sibing-combinator selector` fails
			if ( !div.querySelectorAll( "a#" + expando + "+*" ).length ) {
				rbuggyQSA.push(".#.+[+~]");
			}
		});

		assert(function( div ) {
			// Support: Windows 8 Native Apps
			// The type and name attributes are restricted during .innerHTML assignment
			var input = document.createElement("input");
			input.setAttribute( "type", "hidden" );
			div.appendChild( input ).setAttribute( "name", "D" );

			// Support: IE8
			// Enforce case-sensitivity of name attribute
			if ( div.querySelectorAll("[name=d]").length ) {
				rbuggyQSA.push( "name" + whitespace + "*[*^$|!~]?=" );
			}

			// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
			// IE8 throws error here and will not see later tests
			if ( !div.querySelectorAll(":enabled").length ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}

			// Opera 10-11 does not throw on post-comma invalid pseudos
			div.querySelectorAll("*,:x");
			rbuggyQSA.push(",.*:");
		});
	}

	if ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||
		docElem.webkitMatchesSelector ||
		docElem.mozMatchesSelector ||
		docElem.oMatchesSelector ||
		docElem.msMatchesSelector) )) ) {

		assert(function( div ) {
			// Check to see if it's possible to do matchesSelector
			// on a disconnected node (IE 9)
			support.disconnectedMatch = matches.call( div, "div" );

			// This should fail with an exception
			// Gecko does not error, returns false instead
			matches.call( div, "[s!='']:x" );
			rbuggyMatches.push( "!=", pseudos );
		});
	}

	rbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join("|") );
	rbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join("|") );

	/* Contains
	---------------------------------------------------------------------- */
	hasCompare = rnative.test( docElem.compareDocumentPosition );

	// Element contains another
	// Purposefully self-exclusive
	// As in, an element does not contain itself
	contains = hasCompare || rnative.test( docElem.contains ) ?
		function( a, b ) {
			var adown = a.nodeType === 9 ? a.documentElement : a,
				bup = b && b.parentNode;
			return a === bup || !!( bup && bup.nodeType === 1 && (
				adown.contains ?
					adown.contains( bup ) :
					a.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16
			));
		} :
		function( a, b ) {
			if ( b ) {
				while ( (b = b.parentNode) ) {
					if ( b === a ) {
						return true;
					}
				}
			}
			return false;
		};

	/* Sorting
	---------------------------------------------------------------------- */

	// Document order sorting
	sortOrder = hasCompare ?
	function( a, b ) {

		// Flag for duplicate removal
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		// Sort on method existence if only one input has compareDocumentPosition
		var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
		if ( compare ) {
			return compare;
		}

		// Calculate position if both inputs belong to the same document
		compare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?
			a.compareDocumentPosition( b ) :

			// Otherwise we know they are disconnected
			1;

		// Disconnected nodes
		if ( compare & 1 ||
			(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {

			// Choose the first element that is related to our preferred document
			if ( a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {
				return -1;
			}
			if ( b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {
				return 1;
			}

			// Maintain original order
			return sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;
		}

		return compare & 4 ? -1 : 1;
	} :
	function( a, b ) {
		// Exit early if the nodes are identical
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		var cur,
			i = 0,
			aup = a.parentNode,
			bup = b.parentNode,
			ap = [ a ],
			bp = [ b ];

		// Parentless nodes are either documents or disconnected
		if ( !aup || !bup ) {
			return a === document ? -1 :
				b === document ? 1 :
				aup ? -1 :
				bup ? 1 :
				sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;

		// If the nodes are siblings, we can do a quick check
		} else if ( aup === bup ) {
			return siblingCheck( a, b );
		}

		// Otherwise we need full lists of their ancestors for comparison
		cur = a;
		while ( (cur = cur.parentNode) ) {
			ap.unshift( cur );
		}
		cur = b;
		while ( (cur = cur.parentNode) ) {
			bp.unshift( cur );
		}

		// Walk down the tree looking for a discrepancy
		while ( ap[i] === bp[i] ) {
			i++;
		}

		return i ?
			// Do a sibling check if the nodes have a common ancestor
			siblingCheck( ap[i], bp[i] ) :

			// Otherwise nodes in our document sort first
			ap[i] === preferredDoc ? -1 :
			bp[i] === preferredDoc ? 1 :
			0;
	};

	return document;
};

Sizzle.matches = function( expr, elements ) {
	return Sizzle( expr, null, null, elements );
};

Sizzle.matchesSelector = function( elem, expr ) {
	// Set document vars if needed
	if ( ( elem.ownerDocument || elem ) !== document ) {
		setDocument( elem );
	}

	// Make sure that attribute selectors are quoted
	expr = expr.replace( rattributeQuotes, "='$1']" );

	if ( support.matchesSelector && documentIsHTML &&
		!compilerCache[ expr + " " ] &&
		( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&
		( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {

		try {
			var ret = matches.call( elem, expr );

			// IE 9's matchesSelector returns false on disconnected nodes
			if ( ret || support.disconnectedMatch ||
					// As well, disconnected nodes are said to be in a document
					// fragment in IE 9
					elem.document && elem.document.nodeType !== 11 ) {
				return ret;
			}
		} catch (e) {}
	}

	return Sizzle( expr, document, null, [ elem ] ).length > 0;
};

Sizzle.contains = function( context, elem ) {
	// Set document vars if needed
	if ( ( context.ownerDocument || context ) !== document ) {
		setDocument( context );
	}
	return contains( context, elem );
};

Sizzle.attr = function( elem, name ) {
	// Set document vars if needed
	if ( ( elem.ownerDocument || elem ) !== document ) {
		setDocument( elem );
	}

	var fn = Expr.attrHandle[ name.toLowerCase() ],
		// Don't get fooled by Object.prototype properties (jQuery #13807)
		val = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?
			fn( elem, name, !documentIsHTML ) :
			undefined;

	return val !== undefined ?
		val :
		support.attributes || !documentIsHTML ?
			elem.getAttribute( name ) :
			(val = elem.getAttributeNode(name)) && val.specified ?
				val.value :
				null;
};

Sizzle.error = function( msg ) {
	throw new Error( "Syntax error, unrecognized expression: " + msg );
};

/**
 * Document sorting and removing duplicates
 * @param {ArrayLike} results
 */
Sizzle.uniqueSort = function( results ) {
	var elem,
		duplicates = [],
		j = 0,
		i = 0;

	// Unless we *know* we can detect duplicates, assume their presence
	hasDuplicate = !support.detectDuplicates;
	sortInput = !support.sortStable && results.slice( 0 );
	results.sort( sortOrder );

	if ( hasDuplicate ) {
		while ( (elem = results[i++]) ) {
			if ( elem === results[ i ] ) {
				j = duplicates.push( i );
			}
		}
		while ( j-- ) {
			results.splice( duplicates[ j ], 1 );
		}
	}

	// Clear input after sorting to release objects
	// See https://github.com/jquery/sizzle/pull/225
	sortInput = null;

	return results;
};

/**
 * Utility function for retrieving the text value of an array of DOM nodes
 * @param {Array|Element} elem
 */
getText = Sizzle.getText = function( elem ) {
	var node,
		ret = "",
		i = 0,
		nodeType = elem.nodeType;

	if ( !nodeType ) {
		// If no nodeType, this is expected to be an array
		while ( (node = elem[i++]) ) {
			// Do not traverse comment nodes
			ret += getText( node );
		}
	} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {
		// Use textContent for elements
		// innerText usage removed for consistency of new lines (jQuery #11153)
		if ( typeof elem.textContent === "string" ) {
			return elem.textContent;
		} else {
			// Traverse its children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				ret += getText( elem );
			}
		}
	} else if ( nodeType === 3 || nodeType === 4 ) {
		return elem.nodeValue;
	}
	// Do not include comment or processing instruction nodes

	return ret;
};

Expr = Sizzle.selectors = {

	// Can be adjusted by the user
	cacheLength: 50,

	createPseudo: markFunction,

	match: matchExpr,

	attrHandle: {},

	find: {},

	relative: {
		">": { dir: "parentNode", first: true },
		" ": { dir: "parentNode" },
		"+": { dir: "previousSibling", first: true },
		"~": { dir: "previousSibling" }
	},

	preFilter: {
		"ATTR": function( match ) {
			match[1] = match[1].replace( runescape, funescape );

			// Move the given value to match[3] whether quoted or unquoted
			match[3] = ( match[3] || match[4] || match[5] || "" ).replace( runescape, funescape );

			if ( match[2] === "~=" ) {
				match[3] = " " + match[3] + " ";
			}

			return match.slice( 0, 4 );
		},

		"CHILD": function( match ) {
			/* matches from matchExpr["CHILD"]
				1 type (only|nth|...)
				2 what (child|of-type)
				3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
				4 xn-component of xn+y argument ([+-]?\d*n|)
				5 sign of xn-component
				6 x of xn-component
				7 sign of y-component
				8 y of y-component
			*/
			match[1] = match[1].toLowerCase();

			if ( match[1].slice( 0, 3 ) === "nth" ) {
				// nth-* requires argument
				if ( !match[3] ) {
					Sizzle.error( match[0] );
				}

				// numeric x and y parameters for Expr.filter.CHILD
				// remember that false/true cast respectively to 0/1
				match[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === "even" || match[3] === "odd" ) );
				match[5] = +( ( match[7] + match[8] ) || match[3] === "odd" );

			// other types prohibit arguments
			} else if ( match[3] ) {
				Sizzle.error( match[0] );
			}

			return match;
		},

		"PSEUDO": function( match ) {
			var excess,
				unquoted = !match[6] && match[2];

			if ( matchExpr["CHILD"].test( match[0] ) ) {
				return null;
			}

			// Accept quoted arguments as-is
			if ( match[3] ) {
				match[2] = match[4] || match[5] || "";

			// Strip excess characters from unquoted arguments
			} else if ( unquoted && rpseudo.test( unquoted ) &&
				// Get excess from tokenize (recursively)
				(excess = tokenize( unquoted, true )) &&
				// advance to the next closing parenthesis
				(excess = unquoted.indexOf( ")", unquoted.length - excess ) - unquoted.length) ) {

				// excess is a negative index
				match[0] = match[0].slice( 0, excess );
				match[2] = unquoted.slice( 0, excess );
			}

			// Return only captures needed by the pseudo filter method (type and argument)
			return match.slice( 0, 3 );
		}
	},

	filter: {

		"TAG": function( nodeNameSelector ) {
			var nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();
			return nodeNameSelector === "*" ?
				function() { return true; } :
				function( elem ) {
					return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
				};
		},

		"CLASS": function( className ) {
			var pattern = classCache[ className + " " ];

			return pattern ||
				(pattern = new RegExp( "(^|" + whitespace + ")" + className + "(" + whitespace + "|$)" )) &&
				classCache( className, function( elem ) {
					return pattern.test( typeof elem.className === "string" && elem.className || typeof elem.getAttribute !== "undefined" && elem.getAttribute("class") || "" );
				});
		},

		"ATTR": function( name, operator, check ) {
			return function( elem ) {
				var result = Sizzle.attr( elem, name );

				if ( result == null ) {
					return operator === "!=";
				}
				if ( !operator ) {
					return true;
				}

				result += "";

				return operator === "=" ? result === check :
					operator === "!=" ? result !== check :
					operator === "^=" ? check && result.indexOf( check ) === 0 :
					operator === "*=" ? check && result.indexOf( check ) > -1 :
					operator === "$=" ? check && result.slice( -check.length ) === check :
					operator === "~=" ? ( " " + result.replace( rwhitespace, " " ) + " " ).indexOf( check ) > -1 :
					operator === "|=" ? result === check || result.slice( 0, check.length + 1 ) === check + "-" :
					false;
			};
		},

		"CHILD": function( type, what, argument, first, last ) {
			var simple = type.slice( 0, 3 ) !== "nth",
				forward = type.slice( -4 ) !== "last",
				ofType = what === "of-type";

			return first === 1 && last === 0 ?

				// Shortcut for :nth-*(n)
				function( elem ) {
					return !!elem.parentNode;
				} :

				function( elem, context, xml ) {
					var cache, uniqueCache, outerCache, node, nodeIndex, start,
						dir = simple !== forward ? "nextSibling" : "previousSibling",
						parent = elem.parentNode,
						name = ofType && elem.nodeName.toLowerCase(),
						useCache = !xml && !ofType,
						diff = false;

					if ( parent ) {

						// :(first|last|only)-(child|of-type)
						if ( simple ) {
							while ( dir ) {
								node = elem;
								while ( (node = node[ dir ]) ) {
									if ( ofType ?
										node.nodeName.toLowerCase() === name :
										node.nodeType === 1 ) {

										return false;
									}
								}
								// Reverse direction for :only-* (if we haven't yet done so)
								start = dir = type === "only" && !start && "nextSibling";
							}
							return true;
						}

						start = [ forward ? parent.firstChild : parent.lastChild ];

						// non-xml :nth-child(...) stores cache data on `parent`
						if ( forward && useCache ) {

							// Seek `elem` from a previously-cached index

							// ...in a gzip-friendly way
							node = parent;
							outerCache = node[ expando ] || (node[ expando ] = {});

							// Support: IE <9 only
							// Defend against cloned attroperties (jQuery gh-1709)
							uniqueCache = outerCache[ node.uniqueID ] ||
								(outerCache[ node.uniqueID ] = {});

							cache = uniqueCache[ type ] || [];
							nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
							diff = nodeIndex && cache[ 2 ];
							node = nodeIndex && parent.childNodes[ nodeIndex ];

							while ( (node = ++nodeIndex && node && node[ dir ] ||

								// Fallback to seeking `elem` from the start
								(diff = nodeIndex = 0) || start.pop()) ) {

								// When found, cache indexes on `parent` and break
								if ( node.nodeType === 1 && ++diff && node === elem ) {
									uniqueCache[ type ] = [ dirruns, nodeIndex, diff ];
									break;
								}
							}

						} else {
							// Use previously-cached element index if available
							if ( useCache ) {
								// ...in a gzip-friendly way
								node = elem;
								outerCache = node[ expando ] || (node[ expando ] = {});

								// Support: IE <9 only
								// Defend against cloned attroperties (jQuery gh-1709)
								uniqueCache = outerCache[ node.uniqueID ] ||
									(outerCache[ node.uniqueID ] = {});

								cache = uniqueCache[ type ] || [];
								nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
								diff = nodeIndex;
							}

							// xml :nth-child(...)
							// or :nth-last-child(...) or :nth(-last)?-of-type(...)
							if ( diff === false ) {
								// Use the same loop as above to seek `elem` from the start
								while ( (node = ++nodeIndex && node && node[ dir ] ||
									(diff = nodeIndex = 0) || start.pop()) ) {

									if ( ( ofType ?
										node.nodeName.toLowerCase() === name :
										node.nodeType === 1 ) &&
										++diff ) {

										// Cache the index of each encountered element
										if ( useCache ) {
											outerCache = node[ expando ] || (node[ expando ] = {});

											// Support: IE <9 only
											// Defend against cloned attroperties (jQuery gh-1709)
											uniqueCache = outerCache[ node.uniqueID ] ||
												(outerCache[ node.uniqueID ] = {});

											uniqueCache[ type ] = [ dirruns, diff ];
										}

										if ( node === elem ) {
											break;
										}
									}
								}
							}
						}

						// Incorporate the offset, then check against cycle size
						diff -= last;
						return diff === first || ( diff % first === 0 && diff / first >= 0 );
					}
				};
		},

		"PSEUDO": function( pseudo, argument ) {
			// pseudo-class names are case-insensitive
			// http://www.w3.org/TR/selectors/#pseudo-classes
			// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
			// Remember that setFilters inherits from pseudos
			var args,
				fn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||
					Sizzle.error( "unsupported pseudo: " + pseudo );

			// The user may use createPseudo to indicate that
			// arguments are needed to create the filter function
			// just as Sizzle does
			if ( fn[ expando ] ) {
				return fn( argument );
			}

			// But maintain support for old signatures
			if ( fn.length > 1 ) {
				args = [ pseudo, pseudo, "", argument ];
				return Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?
					markFunction(function( seed, matches ) {
						var idx,
							matched = fn( seed, argument ),
							i = matched.length;
						while ( i-- ) {
							idx = indexOf( seed, matched[i] );
							seed[ idx ] = !( matches[ idx ] = matched[i] );
						}
					}) :
					function( elem ) {
						return fn( elem, 0, args );
					};
			}

			return fn;
		}
	},

	pseudos: {
		// Potentially complex pseudos
		"not": markFunction(function( selector ) {
			// Trim the selector passed to compile
			// to avoid treating leading and trailing
			// spaces as combinators
			var input = [],
				results = [],
				matcher = compile( selector.replace( rtrim, "$1" ) );

			return matcher[ expando ] ?
				markFunction(function( seed, matches, context, xml ) {
					var elem,
						unmatched = matcher( seed, null, xml, [] ),
						i = seed.length;

					// Match elements unmatched by `matcher`
					while ( i-- ) {
						if ( (elem = unmatched[i]) ) {
							seed[i] = !(matches[i] = elem);
						}
					}
				}) :
				function( elem, context, xml ) {
					input[0] = elem;
					matcher( input, null, xml, results );
					// Don't keep the element (issue #299)
					input[0] = null;
					return !results.pop();
				};
		}),

		"has": markFunction(function( selector ) {
			return function( elem ) {
				return Sizzle( selector, elem ).length > 0;
			};
		}),

		"contains": markFunction(function( text ) {
			text = text.replace( runescape, funescape );
			return function( elem ) {
				return ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;
			};
		}),

		// "Whether an element is represented by a :lang() selector
		// is based solely on the element's language value
		// being equal to the identifier C,
		// or beginning with the identifier C immediately followed by "-".
		// The matching of C against the element's language value is performed case-insensitively.
		// The identifier C does not have to be a valid language name."
		// http://www.w3.org/TR/selectors/#lang-pseudo
		"lang": markFunction( function( lang ) {
			// lang value must be a valid identifier
			if ( !ridentifier.test(lang || "") ) {
				Sizzle.error( "unsupported lang: " + lang );
			}
			lang = lang.replace( runescape, funescape ).toLowerCase();
			return function( elem ) {
				var elemLang;
				do {
					if ( (elemLang = documentIsHTML ?
						elem.lang :
						elem.getAttribute("xml:lang") || elem.getAttribute("lang")) ) {

						elemLang = elemLang.toLowerCase();
						return elemLang === lang || elemLang.indexOf( lang + "-" ) === 0;
					}
				} while ( (elem = elem.parentNode) && elem.nodeType === 1 );
				return false;
			};
		}),

		// Miscellaneous
		"target": function( elem ) {
			var hash = window.location && window.location.hash;
			return hash && hash.slice( 1 ) === elem.id;
		},

		"root": function( elem ) {
			return elem === docElem;
		},

		"focus": function( elem ) {
			return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);
		},

		// Boolean properties
		"enabled": function( elem ) {
			return elem.disabled === false;
		},

		"disabled": function( elem ) {
			return elem.disabled === true;
		},

		"checked": function( elem ) {
			// In CSS3, :checked should return both checked and selected elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			var nodeName = elem.nodeName.toLowerCase();
			return (nodeName === "input" && !!elem.checked) || (nodeName === "option" && !!elem.selected);
		},

		"selected": function( elem ) {
			// Accessing this property makes selected-by-default
			// options in Safari work properly
			if ( elem.parentNode ) {
				elem.parentNode.selectedIndex;
			}

			return elem.selected === true;
		},

		// Contents
		"empty": function( elem ) {
			// http://www.w3.org/TR/selectors/#empty-pseudo
			// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),
			//   but not by others (comment: 8; processing instruction: 7; etc.)
			// nodeType < 6 works because attributes (2) do not appear as children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				if ( elem.nodeType < 6 ) {
					return false;
				}
			}
			return true;
		},

		"parent": function( elem ) {
			return !Expr.pseudos["empty"]( elem );
		},

		// Element/input types
		"header": function( elem ) {
			return rheader.test( elem.nodeName );
		},

		"input": function( elem ) {
			return rinputs.test( elem.nodeName );
		},

		"button": function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return name === "input" && elem.type === "button" || name === "button";
		},

		"text": function( elem ) {
			var attr;
			return elem.nodeName.toLowerCase() === "input" &&
				elem.type === "text" &&

				// Support: IE<8
				// New HTML5 attribute values (e.g., "search") appear with elem.type === "text"
				( (attr = elem.getAttribute("type")) == null || attr.toLowerCase() === "text" );
		},

		// Position-in-collection
		"first": createPositionalPseudo(function() {
			return [ 0 ];
		}),

		"last": createPositionalPseudo(function( matchIndexes, length ) {
			return [ length - 1 ];
		}),

		"eq": createPositionalPseudo(function( matchIndexes, length, argument ) {
			return [ argument < 0 ? argument + length : argument ];
		}),

		"even": createPositionalPseudo(function( matchIndexes, length ) {
			var i = 0;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"odd": createPositionalPseudo(function( matchIndexes, length ) {
			var i = 1;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"lt": createPositionalPseudo(function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; --i >= 0; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"gt": createPositionalPseudo(function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; ++i < length; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		})
	}
};

Expr.pseudos["nth"] = Expr.pseudos["eq"];

// Add button/input type pseudos
for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {
	Expr.pseudos[ i ] = createInputPseudo( i );
}
for ( i in { submit: true, reset: true } ) {
	Expr.pseudos[ i ] = createButtonPseudo( i );
}

// Easy API for creating new setFilters
function setFilters() {}
setFilters.prototype = Expr.filters = Expr.pseudos;
Expr.setFilters = new setFilters();

tokenize = Sizzle.tokenize = function( selector, parseOnly ) {
	var matched, match, tokens, type,
		soFar, groups, preFilters,
		cached = tokenCache[ selector + " " ];

	if ( cached ) {
		return parseOnly ? 0 : cached.slice( 0 );
	}

	soFar = selector;
	groups = [];
	preFilters = Expr.preFilter;

	while ( soFar ) {

		// Comma and first run
		if ( !matched || (match = rcomma.exec( soFar )) ) {
			if ( match ) {
				// Don't consume trailing commas as valid
				soFar = soFar.slice( match[0].length ) || soFar;
			}
			groups.push( (tokens = []) );
		}

		matched = false;

		// Combinators
		if ( (match = rcombinators.exec( soFar )) ) {
			matched = match.shift();
			tokens.push({
				value: matched,
				// Cast descendant combinators to space
				type: match[0].replace( rtrim, " " )
			});
			soFar = soFar.slice( matched.length );
		}

		// Filters
		for ( type in Expr.filter ) {
			if ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||
				(match = preFilters[ type ]( match ))) ) {
				matched = match.shift();
				tokens.push({
					value: matched,
					type: type,
					matches: match
				});
				soFar = soFar.slice( matched.length );
			}
		}

		if ( !matched ) {
			break;
		}
	}

	// Return the length of the invalid excess
	// if we're just parsing
	// Otherwise, throw an error or return tokens
	return parseOnly ?
		soFar.length :
		soFar ?
			Sizzle.error( selector ) :
			// Cache the tokens
			tokenCache( selector, groups ).slice( 0 );
};

function toSelector( tokens ) {
	var i = 0,
		len = tokens.length,
		selector = "";
	for ( ; i < len; i++ ) {
		selector += tokens[i].value;
	}
	return selector;
}

function addCombinator( matcher, combinator, base ) {
	var dir = combinator.dir,
		checkNonElements = base && dir === "parentNode",
		doneName = done++;

	return combinator.first ?
		// Check against closest ancestor/preceding element
		function( elem, context, xml ) {
			while ( (elem = elem[ dir ]) ) {
				if ( elem.nodeType === 1 || checkNonElements ) {
					return matcher( elem, context, xml );
				}
			}
		} :

		// Check against all ancestor/preceding elements
		function( elem, context, xml ) {
			var oldCache, uniqueCache, outerCache,
				newCache = [ dirruns, doneName ];

			// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching
			if ( xml ) {
				while ( (elem = elem[ dir ]) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						if ( matcher( elem, context, xml ) ) {
							return true;
						}
					}
				}
			} else {
				while ( (elem = elem[ dir ]) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						outerCache = elem[ expando ] || (elem[ expando ] = {});

						// Support: IE <9 only
						// Defend against cloned attroperties (jQuery gh-1709)
						uniqueCache = outerCache[ elem.uniqueID ] || (outerCache[ elem.uniqueID ] = {});

						if ( (oldCache = uniqueCache[ dir ]) &&
							oldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {

							// Assign to newCache so results back-propagate to previous elements
							return (newCache[ 2 ] = oldCache[ 2 ]);
						} else {
							// Reuse newcache so results back-propagate to previous elements
							uniqueCache[ dir ] = newCache;

							// A match means we're done; a fail means we have to keep checking
							if ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {
								return true;
							}
						}
					}
				}
			}
		};
}

function elementMatcher( matchers ) {
	return matchers.length > 1 ?
		function( elem, context, xml ) {
			var i = matchers.length;
			while ( i-- ) {
				if ( !matchers[i]( elem, context, xml ) ) {
					return false;
				}
			}
			return true;
		} :
		matchers[0];
}

function multipleContexts( selector, contexts, results ) {
	var i = 0,
		len = contexts.length;
	for ( ; i < len; i++ ) {
		Sizzle( selector, contexts[i], results );
	}
	return results;
}

function condense( unmatched, map, filter, context, xml ) {
	var elem,
		newUnmatched = [],
		i = 0,
		len = unmatched.length,
		mapped = map != null;

	for ( ; i < len; i++ ) {
		if ( (elem = unmatched[i]) ) {
			if ( !filter || filter( elem, context, xml ) ) {
				newUnmatched.push( elem );
				if ( mapped ) {
					map.push( i );
				}
			}
		}
	}

	return newUnmatched;
}

function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
	if ( postFilter && !postFilter[ expando ] ) {
		postFilter = setMatcher( postFilter );
	}
	if ( postFinder && !postFinder[ expando ] ) {
		postFinder = setMatcher( postFinder, postSelector );
	}
	return markFunction(function( seed, results, context, xml ) {
		var temp, i, elem,
			preMap = [],
			postMap = [],
			preexisting = results.length,

			// Get initial elements from seed or context
			elems = seed || multipleContexts( selector || "*", context.nodeType ? [ context ] : context, [] ),

			// Prefilter to get matcher input, preserving a map for seed-results synchronization
			matcherIn = preFilter && ( seed || !selector ) ?
				condense( elems, preMap, preFilter, context, xml ) :
				elems,

			matcherOut = matcher ?
				// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,
				postFinder || ( seed ? preFilter : preexisting || postFilter ) ?

					// ...intermediate processing is necessary
					[] :

					// ...otherwise use results directly
					results :
				matcherIn;

		// Find primary matches
		if ( matcher ) {
			matcher( matcherIn, matcherOut, context, xml );
		}

		// Apply postFilter
		if ( postFilter ) {
			temp = condense( matcherOut, postMap );
			postFilter( temp, [], context, xml );

			// Un-match failing elements by moving them back to matcherIn
			i = temp.length;
			while ( i-- ) {
				if ( (elem = temp[i]) ) {
					matcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);
				}
			}
		}

		if ( seed ) {
			if ( postFinder || preFilter ) {
				if ( postFinder ) {
					// Get the final matcherOut by condensing this intermediate into postFinder contexts
					temp = [];
					i = matcherOut.length;
					while ( i-- ) {
						if ( (elem = matcherOut[i]) ) {
							// Restore matcherIn since elem is not yet a final match
							temp.push( (matcherIn[i] = elem) );
						}
					}
					postFinder( null, (matcherOut = []), temp, xml );
				}

				// Move matched elements from seed to results to keep them synchronized
				i = matcherOut.length;
				while ( i-- ) {
					if ( (elem = matcherOut[i]) &&
						(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {

						seed[temp] = !(results[temp] = elem);
					}
				}
			}

		// Add elements to results, through postFinder if defined
		} else {
			matcherOut = condense(
				matcherOut === results ?
					matcherOut.splice( preexisting, matcherOut.length ) :
					matcherOut
			);
			if ( postFinder ) {
				postFinder( null, results, matcherOut, xml );
			} else {
				push.apply( results, matcherOut );
			}
		}
	});
}

function matcherFromTokens( tokens ) {
	var checkContext, matcher, j,
		len = tokens.length,
		leadingRelative = Expr.relative[ tokens[0].type ],
		implicitRelative = leadingRelative || Expr.relative[" "],
		i = leadingRelative ? 1 : 0,

		// The foundational matcher ensures that elements are reachable from top-level context(s)
		matchContext = addCombinator( function( elem ) {
			return elem === checkContext;
		}, implicitRelative, true ),
		matchAnyContext = addCombinator( function( elem ) {
			return indexOf( checkContext, elem ) > -1;
		}, implicitRelative, true ),
		matchers = [ function( elem, context, xml ) {
			var ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (
				(checkContext = context).nodeType ?
					matchContext( elem, context, xml ) :
					matchAnyContext( elem, context, xml ) );
			// Avoid hanging onto element (issue #299)
			checkContext = null;
			return ret;
		} ];

	for ( ; i < len; i++ ) {
		if ( (matcher = Expr.relative[ tokens[i].type ]) ) {
			matchers = [ addCombinator(elementMatcher( matchers ), matcher) ];
		} else {
			matcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );

			// Return special upon seeing a positional matcher
			if ( matcher[ expando ] ) {
				// Find the next relative operator (if any) for proper handling
				j = ++i;
				for ( ; j < len; j++ ) {
					if ( Expr.relative[ tokens[j].type ] ) {
						break;
					}
				}
				return setMatcher(
					i > 1 && elementMatcher( matchers ),
					i > 1 && toSelector(
						// If the preceding token was a descendant combinator, insert an implicit any-element `*`
						tokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === " " ? "*" : "" })
					).replace( rtrim, "$1" ),
					matcher,
					i < j && matcherFromTokens( tokens.slice( i, j ) ),
					j < len && matcherFromTokens( (tokens = tokens.slice( j )) ),
					j < len && toSelector( tokens )
				);
			}
			matchers.push( matcher );
		}
	}

	return elementMatcher( matchers );
}

function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
	var bySet = setMatchers.length > 0,
		byElement = elementMatchers.length > 0,
		superMatcher = function( seed, context, xml, results, outermost ) {
			var elem, j, matcher,
				matchedCount = 0,
				i = "0",
				unmatched = seed && [],
				setMatched = [],
				contextBackup = outermostContext,
				// We must always have either seed elements or outermost context
				elems = seed || byElement && Expr.find["TAG"]( "*", outermost ),
				// Use integer dirruns iff this is the outermost matcher
				dirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),
				len = elems.length;

			if ( outermost ) {
				outermostContext = context === document || context || outermost;
			}

			// Add elements passing elementMatchers directly to results
			// Support: IE<9, Safari
			// Tolerate NodeList properties (IE: "length"; Safari: <number>) matching elements by id
			for ( ; i !== len && (elem = elems[i]) != null; i++ ) {
				if ( byElement && elem ) {
					j = 0;
					if ( !context && elem.ownerDocument !== document ) {
						setDocument( elem );
						xml = !documentIsHTML;
					}
					while ( (matcher = elementMatchers[j++]) ) {
						if ( matcher( elem, context || document, xml) ) {
							results.push( elem );
							break;
						}
					}
					if ( outermost ) {
						dirruns = dirrunsUnique;
					}
				}

				// Track unmatched elements for set filters
				if ( bySet ) {
					// They will have gone through all possible matchers
					if ( (elem = !matcher && elem) ) {
						matchedCount--;
					}

					// Lengthen the array for every element, matched or not
					if ( seed ) {
						unmatched.push( elem );
					}
				}
			}

			// `i` is now the count of elements visited above, and adding it to `matchedCount`
			// makes the latter nonnegative.
			matchedCount += i;

			// Apply set filters to unmatched elements
			// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`
			// equals `i`), unless we didn't visit _any_ elements in the above loop because we have
			// no element matchers and no seed.
			// Incrementing an initially-string "0" `i` allows `i` to remain a string only in that
			// case, which will result in a "00" `matchedCount` that differs from `i` but is also
			// numerically zero.
			if ( bySet && i !== matchedCount ) {
				j = 0;
				while ( (matcher = setMatchers[j++]) ) {
					matcher( unmatched, setMatched, context, xml );
				}

				if ( seed ) {
					// Reintegrate element matches to eliminate the need for sorting
					if ( matchedCount > 0 ) {
						while ( i-- ) {
							if ( !(unmatched[i] || setMatched[i]) ) {
								setMatched[i] = pop.call( results );
							}
						}
					}

					// Discard index placeholder values to get only actual matches
					setMatched = condense( setMatched );
				}

				// Add matches to results
				push.apply( results, setMatched );

				// Seedless set matches succeeding multiple successful matchers stipulate sorting
				if ( outermost && !seed && setMatched.length > 0 &&
					( matchedCount + setMatchers.length ) > 1 ) {

					Sizzle.uniqueSort( results );
				}
			}

			// Override manipulation of globals by nested matchers
			if ( outermost ) {
				dirruns = dirrunsUnique;
				outermostContext = contextBackup;
			}

			return unmatched;
		};

	return bySet ?
		markFunction( superMatcher ) :
		superMatcher;
}

compile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {
	var i,
		setMatchers = [],
		elementMatchers = [],
		cached = compilerCache[ selector + " " ];

	if ( !cached ) {
		// Generate a function of recursive functions that can be used to check each element
		if ( !match ) {
			match = tokenize( selector );
		}
		i = match.length;
		while ( i-- ) {
			cached = matcherFromTokens( match[i] );
			if ( cached[ expando ] ) {
				setMatchers.push( cached );
			} else {
				elementMatchers.push( cached );
			}
		}

		// Cache the compiled function
		cached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );

		// Save selector and tokenization
		cached.selector = selector;
	}
	return cached;
};

/**
 * A low-level selection function that works with Sizzle's compiled
 *  selector functions
 * @param {String|Function} selector A selector or a pre-compiled
 *  selector function built with Sizzle.compile
 * @param {Element} context
 * @param {Array} [results]
 * @param {Array} [seed] A set of elements to match against
 */
select = Sizzle.select = function( selector, context, results, seed ) {
	var i, tokens, token, type, find,
		compiled = typeof selector === "function" && selector,
		match = !seed && tokenize( (selector = compiled.selector || selector) );

	results = results || [];

	// Try to minimize operations if there is only one selector in the list and no seed
	// (the latter of which guarantees us context)
	if ( match.length === 1 ) {

		// Reduce context if the leading compound selector is an ID
		tokens = match[0] = match[0].slice( 0 );
		if ( tokens.length > 2 && (token = tokens[0]).type === "ID" &&
				support.getById && context.nodeType === 9 && documentIsHTML &&
				Expr.relative[ tokens[1].type ] ) {

			context = ( Expr.find["ID"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];
			if ( !context ) {
				return results;

			// Precompiled matchers will still verify ancestry, so step up a level
			} else if ( compiled ) {
				context = context.parentNode;
			}

			selector = selector.slice( tokens.shift().value.length );
		}

		// Fetch a seed set for right-to-left matching
		i = matchExpr["needsContext"].test( selector ) ? 0 : tokens.length;
		while ( i-- ) {
			token = tokens[i];

			// Abort if we hit a combinator
			if ( Expr.relative[ (type = token.type) ] ) {
				break;
			}
			if ( (find = Expr.find[ type ]) ) {
				// Search, expanding context for leading sibling combinators
				if ( (seed = find(
					token.matches[0].replace( runescape, funescape ),
					rsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context
				)) ) {

					// If seed is empty or no tokens remain, we can return early
					tokens.splice( i, 1 );
					selector = seed.length && toSelector( tokens );
					if ( !selector ) {
						push.apply( results, seed );
						return results;
					}

					break;
				}
			}
		}
	}

	// Compile and execute a filtering function if one is not provided
	// Provide `match` to avoid retokenization if we modified the selector above
	( compiled || compile( selector, match ) )(
		seed,
		context,
		!documentIsHTML,
		results,
		!context || rsibling.test( selector ) && testContext( context.parentNode ) || context
	);
	return results;
};

// One-time assignments

// Sort stability
support.sortStable = expando.split("").sort( sortOrder ).join("") === expando;

// Support: Chrome 14-35+
// Always assume duplicates if they aren't passed to the comparison function
support.detectDuplicates = !!hasDuplicate;

// Initialize against the default document
setDocument();

// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)
// Detached nodes confoundingly follow *each other*
support.sortDetached = assert(function( div1 ) {
	// Should return 1, but returns 4 (following)
	return div1.compareDocumentPosition( document.createElement("div") ) & 1;
});

// Support: IE<8
// Prevent attribute/property "interpolation"
// http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
if ( !assert(function( div ) {
	div.innerHTML = "<a href='#'></a>";
	return div.firstChild.getAttribute("href") === "#" ;
}) ) {
	addHandle( "type|href|height|width", function( elem, name, isXML ) {
		if ( !isXML ) {
			return elem.getAttribute( name, name.toLowerCase() === "type" ? 1 : 2 );
		}
	});
}

// Support: IE<9
// Use defaultValue in place of getAttribute("value")
if ( !support.attributes || !assert(function( div ) {
	div.innerHTML = "<input/>";
	div.firstChild.setAttribute( "value", "" );
	return div.firstChild.getAttribute( "value" ) === "";
}) ) {
	addHandle( "value", function( elem, name, isXML ) {
		if ( !isXML && elem.nodeName.toLowerCase() === "input" ) {
			return elem.defaultValue;
		}
	});
}

// Support: IE<9
// Use getAttributeNode to fetch booleans when getAttribute lies
if ( !assert(function( div ) {
	return div.getAttribute("disabled") == null;
}) ) {
	addHandle( booleans, function( elem, name, isXML ) {
		var val;
		if ( !isXML ) {
			return elem[ name ] === true ? name.toLowerCase() :
					(val = elem.getAttributeNode( name )) && val.specified ?
					val.value :
				null;
		}
	});
}

return Sizzle;

})( window );



jQuery.find = Sizzle;
jQuery.expr = Sizzle.selectors;
jQuery.expr[ ":" ] = jQuery.expr.pseudos;
jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;
jQuery.text = Sizzle.getText;
jQuery.isXMLDoc = Sizzle.isXML;
jQuery.contains = Sizzle.contains;



var dir = function( elem, dir, until ) {
	var matched = [],
		truncate = until !== undefined;

	while ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {
		if ( elem.nodeType === 1 ) {
			if ( truncate && jQuery( elem ).is( until ) ) {
				break;
			}
			matched.push( elem );
		}
	}
	return matched;
};


var siblings = function( n, elem ) {
	var matched = [];

	for ( ; n; n = n.nextSibling ) {
		if ( n.nodeType === 1 && n !== elem ) {
			matched.push( n );
		}
	}

	return matched;
};


var rneedsContext = jQuery.expr.match.needsContext;

var rsingleTag = ( /^<([\w-]+)\s*\/?>(?:<\/\1>|)$/ );



var risSimple = /^.[^:#\[\.,]*$/;

// Implement the identical functionality for filter and not
function winnow( elements, qualifier, not ) {
	if ( jQuery.isFunction( qualifier ) ) {
		return jQuery.grep( elements, function( elem, i ) {
			/* jshint -W018 */
			return !!qualifier.call( elem, i, elem ) !== not;
		} );

	}

	if ( qualifier.nodeType ) {
		return jQuery.grep( elements, function( elem ) {
			return ( elem === qualifier ) !== not;
		} );

	}

	if ( typeof qualifier === "string" ) {
		if ( risSimple.test( qualifier ) ) {
			return jQuery.filter( qualifier, elements, not );
		}

		qualifier = jQuery.filter( qualifier, elements );
	}

	return jQuery.grep( elements, function( elem ) {
		return ( indexOf.call( qualifier, elem ) > -1 ) !== not;
	} );
}

jQuery.filter = function( expr, elems, not ) {
	var elem = elems[ 0 ];

	if ( not ) {
		expr = ":not(" + expr + ")";
	}

	return elems.length === 1 && elem.nodeType === 1 ?
		jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [] :
		jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {
			return elem.nodeType === 1;
		} ) );
};

jQuery.fn.extend( {
	find: function( selector ) {
		var i,
			len = this.length,
			ret = [],
			self = this;

		if ( typeof selector !== "string" ) {
			return this.pushStack( jQuery( selector ).filter( function() {
				for ( i = 0; i < len; i++ ) {
					if ( jQuery.contains( self[ i ], this ) ) {
						return true;
					}
				}
			} ) );
		}

		for ( i = 0; i < len; i++ ) {
			jQuery.find( selector, self[ i ], ret );
		}

		// Needed because $( selector, context ) becomes $( context ).find( selector )
		ret = this.pushStack( len > 1 ? jQuery.unique( ret ) : ret );
		ret.selector = this.selector ? this.selector + " " + selector : selector;
		return ret;
	},
	filter: function( selector ) {
		return this.pushStack( winnow( this, selector || [], false ) );
	},
	not: function( selector ) {
		return this.pushStack( winnow( this, selector || [], true ) );
	},
	is: function( selector ) {
		return !!winnow(
			this,

			// If this is a positional/relative selector, check membership in the returned set
			// so $("p:first").is("p:last") won't return true for a doc with two "p".
			typeof selector === "string" && rneedsContext.test( selector ) ?
				jQuery( selector ) :
				selector || [],
			false
		).length;
	}
} );


// Initialize a jQuery object


// A central reference to the root jQuery(document)
var rootjQuery,

	// A simple way to check for HTML strings
	// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
	// Strict HTML recognition (#11290: must start with <)
	rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,

	init = jQuery.fn.init = function( selector, context, root ) {
		var match, elem;

		// HANDLE: $(""), $(null), $(undefined), $(false)
		if ( !selector ) {
			return this;
		}

		// Method init() accepts an alternate rootjQuery
		// so migrate can support jQuery.sub (gh-2101)
		root = root || rootjQuery;

		// Handle HTML strings
		if ( typeof selector === "string" ) {
			if ( selector[ 0 ] === "<" &&
				selector[ selector.length - 1 ] === ">" &&
				selector.length >= 3 ) {

				// Assume that strings that start and end with <> are HTML and skip the regex check
				match = [ null, selector, null ];

			} else {
				match = rquickExpr.exec( selector );
			}

			// Match html or make sure no context is specified for #id
			if ( match && ( match[ 1 ] || !context ) ) {

				// HANDLE: $(html) -> $(array)
				if ( match[ 1 ] ) {
					context = context instanceof jQuery ? context[ 0 ] : context;

					// Option to run scripts is true for back-compat
					// Intentionally let the error be thrown if parseHTML is not present
					jQuery.merge( this, jQuery.parseHTML(
						match[ 1 ],
						context && context.nodeType ? context.ownerDocument || context : document,
						true
					) );

					// HANDLE: $(html, props)
					if ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {
						for ( match in context ) {

							// Properties of context are called as methods if possible
							if ( jQuery.isFunction( this[ match ] ) ) {
								this[ match ]( context[ match ] );

							// ...and otherwise set as attributes
							} else {
								this.attr( match, context[ match ] );
							}
						}
					}

					return this;

				// HANDLE: $(#id)
				} else {
					elem = document.getElementById( match[ 2 ] );

					// Support: Blackberry 4.6
					// gEBID returns nodes no longer in the document (#6963)
					if ( elem && elem.parentNode ) {

						// Inject the element directly into the jQuery object
						this.length = 1;
						this[ 0 ] = elem;
					}

					this.context = document;
					this.selector = selector;
					return this;
				}

			// HANDLE: $(expr, $(...))
			} else if ( !context || context.jquery ) {
				return ( context || root ).find( selector );

			// HANDLE: $(expr, context)
			// (which is just equivalent to: $(context).find(expr)
			} else {
				return this.constructor( context ).find( selector );
			}

		// HANDLE: $(DOMElement)
		} else if ( selector.nodeType ) {
			this.context = this[ 0 ] = selector;
			this.length = 1;
			return this;

		// HANDLE: $(function)
		// Shortcut for document ready
		} else if ( jQuery.isFunction( selector ) ) {
			return root.ready !== undefined ?
				root.ready( selector ) :

				// Execute immediately if ready is not present
				selector( jQuery );
		}

		if ( selector.selector !== undefined ) {
			this.selector = selector.selector;
			this.context = selector.context;
		}

		return jQuery.makeArray( selector, this );
	};

// Give the init function the jQuery prototype for later instantiation
init.prototype = jQuery.fn;

// Initialize central reference
rootjQuery = jQuery( document );


var rparentsprev = /^(?:parents|prev(?:Until|All))/,

	// Methods guaranteed to produce a unique set when starting from a unique set
	guaranteedUnique = {
		children: true,
		contents: true,
		next: true,
		prev: true
	};

jQuery.fn.extend( {
	has: function( target ) {
		var targets = jQuery( target, this ),
			l = targets.length;

		return this.filter( function() {
			var i = 0;
			for ( ; i < l; i++ ) {
				if ( jQuery.contains( this, targets[ i ] ) ) {
					return true;
				}
			}
		} );
	},

	closest: function( selectors, context ) {
		var cur,
			i = 0,
			l = this.length,
			matched = [],
			pos = rneedsContext.test( selectors ) || typeof selectors !== "string" ?
				jQuery( selectors, context || this.context ) :
				0;

		for ( ; i < l; i++ ) {
			for ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {

				// Always skip document fragments
				if ( cur.nodeType < 11 && ( pos ?
					pos.index( cur ) > -1 :

					// Don't pass non-elements to Sizzle
					cur.nodeType === 1 &&
						jQuery.find.matchesSelector( cur, selectors ) ) ) {

					matched.push( cur );
					break;
				}
			}
		}

		return this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );
	},

	// Determine the position of an element within the set
	index: function( elem ) {

		// No argument, return index in parent
		if ( !elem ) {
			return ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;
		}

		// Index in selector
		if ( typeof elem === "string" ) {
			return indexOf.call( jQuery( elem ), this[ 0 ] );
		}

		// Locate the position of the desired element
		return indexOf.call( this,

			// If it receives a jQuery object, the first element is used
			elem.jquery ? elem[ 0 ] : elem
		);
	},

	add: function( selector, context ) {
		return this.pushStack(
			jQuery.uniqueSort(
				jQuery.merge( this.get(), jQuery( selector, context ) )
			)
		);
	},

	addBack: function( selector ) {
		return this.add( selector == null ?
			this.prevObject : this.prevObject.filter( selector )
		);
	}
} );

function sibling( cur, dir ) {
	while ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}
	return cur;
}

jQuery.each( {
	parent: function( elem ) {
		var parent = elem.parentNode;
		return parent && parent.nodeType !== 11 ? parent : null;
	},
	parents: function( elem ) {
		return dir( elem, "parentNode" );
	},
	parentsUntil: function( elem, i, until ) {
		return dir( elem, "parentNode", until );
	},
	next: function( elem ) {
		return sibling( elem, "nextSibling" );
	},
	prev: function( elem ) {
		return sibling( elem, "previousSibling" );
	},
	nextAll: function( elem ) {
		return dir( elem, "nextSibling" );
	},
	prevAll: function( elem ) {
		return dir( elem, "previousSibling" );
	},
	nextUntil: function( elem, i, until ) {
		return dir( elem, "nextSibling", until );
	},
	prevUntil: function( elem, i, until ) {
		return dir( elem, "previousSibling", until );
	},
	siblings: function( elem ) {
		return siblings( ( elem.parentNode || {} ).firstChild, elem );
	},
	children: function( elem ) {
		return siblings( elem.firstChild );
	},
	contents: function( elem ) {
		return elem.contentDocument || jQuery.merge( [], elem.childNodes );
	}
}, function( name, fn ) {
	jQuery.fn[ name ] = function( until, selector ) {
		var matched = jQuery.map( this, fn, until );

		if ( name.slice( -5 ) !== "Until" ) {
			selector = until;
		}

		if ( selector && typeof selector === "string" ) {
			matched = jQuery.filter( selector, matched );
		}

		if ( this.length > 1 ) {

			// Remove duplicates
			if ( !guaranteedUnique[ name ] ) {
				jQuery.uniqueSort( matched );
			}

			// Reverse order for parents* and prev-derivatives
			if ( rparentsprev.test( name ) ) {
				matched.reverse();
			}
		}

		return this.pushStack( matched );
	};
} );
var rnotwhite = ( /\S+/g );



// Convert String-formatted options into Object-formatted ones
function createOptions( options ) {
	var object = {};
	jQuery.each( options.match( rnotwhite ) || [], function( _, flag ) {
		object[ flag ] = true;
	} );
	return object;
}

/*
 * Create a callback list using the following parameters:
 *
 *	options: an optional list of space-separated options that will change how
 *			the callback list behaves or a more traditional option object
 *
 * By default a callback list will act like an event callback list and can be
 * "fired" multiple times.
 *
 * Possible options:
 *
 *	once:			will ensure the callback list can only be fired once (like a Deferred)
 *
 *	memory:			will keep track of previous values and will call any callback added
 *					after the list has been fired right away with the latest "memorized"
 *					values (like a Deferred)
 *
 *	unique:			will ensure a callback can only be added once (no duplicate in the list)
 *
 *	stopOnFalse:	interrupt callings when a callback returns false
 *
 */
jQuery.Callbacks = function( options ) {

	// Convert options from String-formatted to Object-formatted if needed
	// (we check in cache first)
	options = typeof options === "string" ?
		createOptions( options ) :
		jQuery.extend( {}, options );

	var // Flag to know if list is currently firing
		firing,

		// Last fire value for non-forgettable lists
		memory,

		// Flag to know if list was already fired
		fired,

		// Flag to prevent firing
		locked,

		// Actual callback list
		list = [],

		// Queue of execution data for repeatable lists
		queue = [],

		// Index of currently firing callback (modified by add/remove as needed)
		firingIndex = -1,

		// Fire callbacks
		fire = function() {

			// Enforce single-firing
			locked = options.once;

			// Execute callbacks for all pending executions,
			// respecting firingIndex overrides and runtime changes
			fired = firing = true;
			for ( ; queue.length; firingIndex = -1 ) {
				memory = queue.shift();
				while ( ++firingIndex < list.length ) {

					// Run callback and check for early termination
					if ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&
						options.stopOnFalse ) {

						// Jump to end and forget the data so .add doesn't re-fire
						firingIndex = list.length;
						memory = false;
					}
				}
			}

			// Forget the data if we're done with it
			if ( !options.memory ) {
				memory = false;
			}

			firing = false;

			// Clean up if we're done firing for good
			if ( locked ) {

				// Keep an empty list if we have data for future add calls
				if ( memory ) {
					list = [];

				// Otherwise, this object is spent
				} else {
					list = "";
				}
			}
		},

		// Actual Callbacks object
		self = {

			// Add a callback or a collection of callbacks to the list
			add: function() {
				if ( list ) {

					// If we have memory from a past run, we should fire after adding
					if ( memory && !firing ) {
						firingIndex = list.length - 1;
						queue.push( memory );
					}

					( function add( args ) {
						jQuery.each( args, function( _, arg ) {
							if ( jQuery.isFunction( arg ) ) {
								if ( !options.unique || !self.has( arg ) ) {
									list.push( arg );
								}
							} else if ( arg && arg.length && jQuery.type( arg ) !== "string" ) {

								// Inspect recursively
								add( arg );
							}
						} );
					} )( arguments );

					if ( memory && !firing ) {
						fire();
					}
				}
				return this;
			},

			// Remove a callback from the list
			remove: function() {
				jQuery.each( arguments, function( _, arg ) {
					var index;
					while ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {
						list.splice( index, 1 );

						// Handle firing indexes
						if ( index <= firingIndex ) {
							firingIndex--;
						}
					}
				} );
				return this;
			},

			// Check if a given callback is in the list.
			// If no argument is given, return whether or not list has callbacks attached.
			has: function( fn ) {
				return fn ?
					jQuery.inArray( fn, list ) > -1 :
					list.length > 0;
			},

			// Remove all callbacks from the list
			empty: function() {
				if ( list ) {
					list = [];
				}
				return this;
			},

			// Disable .fire and .add
			// Abort any current/pending executions
			// Clear all callbacks and values
			disable: function() {
				locked = queue = [];
				list = memory = "";
				return this;
			},
			disabled: function() {
				return !list;
			},

			// Disable .fire
			// Also disable .add unless we have memory (since it would have no effect)
			// Abort any pending executions
			lock: function() {
				locked = queue = [];
				if ( !memory ) {
					list = memory = "";
				}
				return this;
			},
			locked: function() {
				return !!locked;
			},

			// Call all callbacks with the given context and arguments
			fireWith: function( context, args ) {
				if ( !locked ) {
					args = args || [];
					args = [ context, args.slice ? args.slice() : args ];
					queue.push( args );
					if ( !firing ) {
						fire();
					}
				}
				return this;
			},

			// Call all the callbacks with the given arguments
			fire: function() {
				self.fireWith( this, arguments );
				return this;
			},

			// To know if the callbacks have already been called at least once
			fired: function() {
				return !!fired;
			}
		};

	return self;
};


jQuery.extend( {

	Deferred: function( func ) {
		var tuples = [

				// action, add listener, listener list, final state
				[ "resolve", "done", jQuery.Callbacks( "once memory" ), "resolved" ],
				[ "reject", "fail", jQuery.Callbacks( "once memory" ), "rejected" ],
				[ "notify", "progress", jQuery.Callbacks( "memory" ) ]
			],
			state = "pending",
			promise = {
				state: function() {
					return state;
				},
				always: function() {
					deferred.done( arguments ).fail( arguments );
					return this;
				},
				then: function( /* fnDone, fnFail, fnProgress */ ) {
					var fns = arguments;
					return jQuery.Deferred( function( newDefer ) {
						jQuery.each( tuples, function( i, tuple ) {
							var fn = jQuery.isFunction( fns[ i ] ) && fns[ i ];

							// deferred[ done | fail | progress ] for forwarding actions to newDefer
							deferred[ tuple[ 1 ] ]( function() {
								var returned = fn && fn.apply( this, arguments );
								if ( returned && jQuery.isFunction( returned.promise ) ) {
									returned.promise()
										.progress( newDefer.notify )
										.done( newDefer.resolve )
										.fail( newDefer.reject );
								} else {
									newDefer[ tuple[ 0 ] + "With" ](
										this === promise ? newDefer.promise() : this,
										fn ? [ returned ] : arguments
									);
								}
							} );
						} );
						fns = null;
					} ).promise();
				},

				// Get a promise for this deferred
				// If obj is provided, the promise aspect is added to the object
				promise: function( obj ) {
					return obj != null ? jQuery.extend( obj, promise ) : promise;
				}
			},
			deferred = {};

		// Keep pipe for back-compat
		promise.pipe = promise.then;

		// Add list-specific methods
		jQuery.each( tuples, function( i, tuple ) {
			var list = tuple[ 2 ],
				stateString = tuple[ 3 ];

			// promise[ done | fail | progress ] = list.add
			promise[ tuple[ 1 ] ] = list.add;

			// Handle state
			if ( stateString ) {
				list.add( function() {

					// state = [ resolved | rejected ]
					state = stateString;

				// [ reject_list | resolve_list ].disable; progress_list.lock
				}, tuples[ i ^ 1 ][ 2 ].disable, tuples[ 2 ][ 2 ].lock );
			}

			// deferred[ resolve | reject | notify ]
			deferred[ tuple[ 0 ] ] = function() {
				deferred[ tuple[ 0 ] + "With" ]( this === deferred ? promise : this, arguments );
				return this;
			};
			deferred[ tuple[ 0 ] + "With" ] = list.fireWith;
		} );

		// Make the deferred a promise
		promise.promise( deferred );

		// Call given func if any
		if ( func ) {
			func.call( deferred, deferred );
		}

		// All done!
		return deferred;
	},

	// Deferred helper
	when: function( subordinate /* , ..., subordinateN */ ) {
		var i = 0,
			resolveValues = slice.call( arguments ),
			length = resolveValues.length,

			// the count of uncompleted subordinates
			remaining = length !== 1 ||
				( subordinate && jQuery.isFunction( subordinate.promise ) ) ? length : 0,

			// the master Deferred.
			// If resolveValues consist of only a single Deferred, just use that.
			deferred = remaining === 1 ? subordinate : jQuery.Deferred(),

			// Update function for both resolve and progress values
			updateFunc = function( i, contexts, values ) {
				return function( value ) {
					contexts[ i ] = this;
					values[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;
					if ( values === progressValues ) {
						deferred.notifyWith( contexts, values );
					} else if ( !( --remaining ) ) {
						deferred.resolveWith( contexts, values );
					}
				};
			},

			progressValues, progressContexts, resolveContexts;

		// Add listeners to Deferred subordinates; treat others as resolved
		if ( length > 1 ) {
			progressValues = new Array( length );
			progressContexts = new Array( length );
			resolveContexts = new Array( length );
			for ( ; i < length; i++ ) {
				if ( resolveValues[ i ] && jQuery.isFunction( resolveValues[ i ].promise ) ) {
					resolveValues[ i ].promise()
						.progress( updateFunc( i, progressContexts, progressValues ) )
						.done( updateFunc( i, resolveContexts, resolveValues ) )
						.fail( deferred.reject );
				} else {
					--remaining;
				}
			}
		}

		// If we're not waiting on anything, resolve the master
		if ( !remaining ) {
			deferred.resolveWith( resolveContexts, resolveValues );
		}

		return deferred.promise();
	}
} );


// The deferred used on DOM ready
var readyList;

jQuery.fn.ready = function( fn ) {

	// Add the callback
	jQuery.ready.promise().done( fn );

	return this;
};

jQuery.extend( {

	// Is the DOM ready to be used? Set to true once it occurs.
	isReady: false,

	// A counter to track how many items to wait for before
	// the ready event fires. See #6781
	readyWait: 1,

	// Hold (or release) the ready event
	holdReady: function( hold ) {
		if ( hold ) {
			jQuery.readyWait++;
		} else {
			jQuery.ready( true );
		}
	},

	// Handle when the DOM is ready
	ready: function( wait ) {

		// Abort if there are pending holds or we're already ready
		if ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {
			return;
		}

		// Remember that the DOM is ready
		jQuery.isReady = true;

		// If a normal DOM Ready event fired, decrement, and wait if need be
		if ( wait !== true && --jQuery.readyWait > 0 ) {
			return;
		}

		// If there are functions bound, to execute
		readyList.resolveWith( document, [ jQuery ] );

		// Trigger any bound ready events
		if ( jQuery.fn.triggerHandler ) {
			jQuery( document ).triggerHandler( "ready" );
			jQuery( document ).off( "ready" );
		}
	}
} );

/**
 * The ready event handler and self cleanup method
 */
function completed() {
	document.removeEventListener( "DOMContentLoaded", completed );
	window.removeEventListener( "load", completed );
	jQuery.ready();
}

jQuery.ready.promise = function( obj ) {
	if ( !readyList ) {

		readyList = jQuery.Deferred();

		// Catch cases where $(document).ready() is called
		// after the browser event has already occurred.
		// Support: IE9-10 only
		// Older IE sometimes signals "interactive" too soon
		if ( document.readyState === "complete" ||
			( document.readyState !== "loading" && !document.documentElement.doScroll ) ) {

			// Handle it asynchronously to allow scripts the opportunity to delay ready
			window.setTimeout( jQuery.ready );

		} else {

			// Use the handy event callback
			document.addEventListener( "DOMContentLoaded", completed );

			// A fallback to window.onload, that will always work
			window.addEventListener( "load", completed );
		}
	}
	return readyList.promise( obj );
};

// Kick off the DOM ready check even if the user does not
jQuery.ready.promise();




// Multifunctional method to get and set values of a collection
// The value/s can optionally be executed if it's a function
var access = function( elems, fn, key, value, chainable, emptyGet, raw ) {
	var i = 0,
		len = elems.length,
		bulk = key == null;

	// Sets many values
	if ( jQuery.type( key ) === "object" ) {
		chainable = true;
		for ( i in key ) {
			access( elems, fn, i, key[ i ], true, emptyGet, raw );
		}

	// Sets one value
	} else if ( value !== undefined ) {
		chainable = true;

		if ( !jQuery.isFunction( value ) ) {
			raw = true;
		}

		if ( bulk ) {

			// Bulk operations run against the entire set
			if ( raw ) {
				fn.call( elems, value );
				fn = null;

			// ...except when executing function values
			} else {
				bulk = fn;
				fn = function( elem, key, value ) {
					return bulk.call( jQuery( elem ), value );
				};
			}
		}

		if ( fn ) {
			for ( ; i < len; i++ ) {
				fn(
					elems[ i ], key, raw ?
					value :
					value.call( elems[ i ], i, fn( elems[ i ], key ) )
				);
			}
		}
	}

	return chainable ?
		elems :

		// Gets
		bulk ?
			fn.call( elems ) :
			len ? fn( elems[ 0 ], key ) : emptyGet;
};
var acceptData = function( owner ) {

	// Accepts only:
	//  - Node
	//    - Node.ELEMENT_NODE
	//    - Node.DOCUMENT_NODE
	//  - Object
	//    - Any
	/* jshint -W018 */
	return owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );
};




function Data() {
	this.expando = jQuery.expando + Data.uid++;
}

Data.uid = 1;

Data.prototype = {

	register: function( owner, initial ) {
		var value = initial || {};

		// If it is a node unlikely to be stringify-ed or looped over
		// use plain assignment
		if ( owner.nodeType ) {
			owner[ this.expando ] = value;

		// Otherwise secure it in a non-enumerable, non-writable property
		// configurability must be true to allow the property to be
		// deleted with the delete operator
		} else {
			Object.defineProperty( owner, this.expando, {
				value: value,
				writable: true,
				configurable: true
			} );
		}
		return owner[ this.expando ];
	},
	cache: function( owner ) {

		// We can accept data for non-element nodes in modern browsers,
		// but we should not, see #8335.
		// Always return an empty object.
		if ( !acceptData( owner ) ) {
			return {};
		}

		// Check if the owner object already has a cache
		var value = owner[ this.expando ];

		// If not, create one
		if ( !value ) {
			value = {};

			// We can accept data for non-element nodes in modern browsers,
			// but we should not, see #8335.
			// Always return an empty object.
			if ( acceptData( owner ) ) {

				// If it is a node unlikely to be stringify-ed or looped over
				// use plain assignment
				if ( owner.nodeType ) {
					owner[ this.expando ] = value;

				// Otherwise secure it in a non-enumerable property
				// configurable must be true to allow the property to be
				// deleted when data is removed
				} else {
					Object.defineProperty( owner, this.expando, {
						value: value,
						configurable: true
					} );
				}
			}
		}

		return value;
	},
	set: function( owner, data, value ) {
		var prop,
			cache = this.cache( owner );

		// Handle: [ owner, key, value ] args
		if ( typeof data === "string" ) {
			cache[ data ] = value;

		// Handle: [ owner, { properties } ] args
		} else {

			// Copy the properties one-by-one to the cache object
			for ( prop in data ) {
				cache[ prop ] = data[ prop ];
			}
		}
		return cache;
	},
	get: function( owner, key ) {
		return key === undefined ?
			this.cache( owner ) :
			owner[ this.expando ] && owner[ this.expando ][ key ];
	},
	access: function( owner, key, value ) {
		var stored;

		// In cases where either:
		//
		//   1. No key was specified
		//   2. A string key was specified, but no value provided
		//
		// Take the "read" path and allow the get method to determine
		// which value to return, respectively either:
		//
		//   1. The entire cache object
		//   2. The data stored at the key
		//
		if ( key === undefined ||
				( ( key && typeof key === "string" ) && value === undefined ) ) {

			stored = this.get( owner, key );

			return stored !== undefined ?
				stored : this.get( owner, jQuery.camelCase( key ) );
		}

		// When the key is not a string, or both a key and value
		// are specified, set or extend (existing objects) with either:
		//
		//   1. An object of properties
		//   2. A key and value
		//
		this.set( owner, key, value );

		// Since the "set" path can have two possible entry points
		// return the expected data based on which path was taken[*]
		return value !== undefined ? value : key;
	},
	remove: function( owner, key ) {
		var i, name, camel,
			cache = owner[ this.expando ];

		if ( cache === undefined ) {
			return;
		}

		if ( key === undefined ) {
			this.register( owner );

		} else {

			// Support array or space separated string of keys
			if ( jQuery.isArray( key ) ) {

				// If "name" is an array of keys...
				// When data is initially created, via ("key", "val") signature,
				// keys will be converted to camelCase.
				// Since there is no way to tell _how_ a key was added, remove
				// both plain key and camelCase key. #12786
				// This will only penalize the array argument path.
				name = key.concat( key.map( jQuery.camelCase ) );
			} else {
				camel = jQuery.camelCase( key );

				// Try the string as a key before any manipulation
				if ( key in cache ) {
					name = [ key, camel ];
				} else {

					// If a key with the spaces exists, use it.
					// Otherwise, create an array by matching non-whitespace
					name = camel;
					name = name in cache ?
						[ name ] : ( name.match( rnotwhite ) || [] );
				}
			}

			i = name.length;

			while ( i-- ) {
				delete cache[ name[ i ] ];
			}
		}

		// Remove the expando if there's no more data
		if ( key === undefined || jQuery.isEmptyObject( cache ) ) {

			// Support: Chrome <= 35-45+
			// Webkit & Blink performance suffers when deleting properties
			// from DOM nodes, so set to undefined instead
			// https://code.google.com/p/chromium/issues/detail?id=378607
			if ( owner.nodeType ) {
				owner[ this.expando ] = undefined;
			} else {
				delete owner[ this.expando ];
			}
		}
	},
	hasData: function( owner ) {
		var cache = owner[ this.expando ];
		return cache !== undefined && !jQuery.isEmptyObject( cache );
	}
};
var dataPriv = new Data();

var dataUser = new Data();



//	Implementation Summary
//
//	1. Enforce API surface and semantic compatibility with 1.9.x branch
//	2. Improve the module's maintainability by reducing the storage
//		paths to a single mechanism.
//	3. Use the same single mechanism to support "private" and "user" data.
//	4. _Never_ expose "private" data to user code (TODO: Drop _data, _removeData)
//	5. Avoid exposing implementation details on user objects (eg. expando properties)
//	6. Provide a clear path for implementation upgrade to WeakMap in 2014

var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
	rmultiDash = /[A-Z]/g;

function dataAttr( elem, key, data ) {
	var name;

	// If nothing was found internally, try to fetch any
	// data from the HTML5 data-* attribute
	if ( data === undefined && elem.nodeType === 1 ) {
		name = "data-" + key.replace( rmultiDash, "-$&" ).toLowerCase();
		data = elem.getAttribute( name );

		if ( typeof data === "string" ) {
			try {
				data = data === "true" ? true :
					data === "false" ? false :
					data === "null" ? null :

					// Only convert to a number if it doesn't change the string
					+data + "" === data ? +data :
					rbrace.test( data ) ? jQuery.parseJSON( data ) :
					data;
			} catch ( e ) {}

			// Make sure we set the data so it isn't changed later
			dataUser.set( elem, key, data );
		} else {
			data = undefined;
		}
	}
	return data;
}

jQuery.extend( {
	hasData: function( elem ) {
		return dataUser.hasData( elem ) || dataPriv.hasData( elem );
	},

	data: function( elem, name, data ) {
		return dataUser.access( elem, name, data );
	},

	removeData: function( elem, name ) {
		dataUser.remove( elem, name );
	},

	// TODO: Now that all calls to _data and _removeData have been replaced
	// with direct calls to dataPriv methods, these can be deprecated.
	_data: function( elem, name, data ) {
		return dataPriv.access( elem, name, data );
	},

	_removeData: function( elem, name ) {
		dataPriv.remove( elem, name );
	}
} );

jQuery.fn.extend( {
	data: function( key, value ) {
		var i, name, data,
			elem = this[ 0 ],
			attrs = elem && elem.attributes;

		// Gets all values
		if ( key === undefined ) {
			if ( this.length ) {
				data = dataUser.get( elem );

				if ( elem.nodeType === 1 && !dataPriv.get( elem, "hasDataAttrs" ) ) {
					i = attrs.length;
					while ( i-- ) {

						// Support: IE11+
						// The attrs elements can be null (#14894)
						if ( attrs[ i ] ) {
							name = attrs[ i ].name;
							if ( name.indexOf( "data-" ) === 0 ) {
								name = jQuery.camelCase( name.slice( 5 ) );
								dataAttr( elem, name, data[ name ] );
							}
						}
					}
					dataPriv.set( elem, "hasDataAttrs", true );
				}
			}

			return data;
		}

		// Sets multiple values
		if ( typeof key === "object" ) {
			return this.each( function() {
				dataUser.set( this, key );
			} );
		}

		return access( this, function( value ) {
			var data, camelKey;

			// The calling jQuery object (element matches) is not empty
			// (and therefore has an element appears at this[ 0 ]) and the
			// `value` parameter was not undefined. An empty jQuery object
			// will result in `undefined` for elem = this[ 0 ] which will
			// throw an exception if an attempt to read a data cache is made.
			if ( elem && value === undefined ) {

				// Attempt to get data from the cache
				// with the key as-is
				data = dataUser.get( elem, key ) ||

					// Try to find dashed key if it exists (gh-2779)
					// This is for 2.2.x only
					dataUser.get( elem, key.replace( rmultiDash, "-$&" ).toLowerCase() );

				if ( data !== undefined ) {
					return data;
				}

				camelKey = jQuery.camelCase( key );

				// Attempt to get data from the cache
				// with the key camelized
				data = dataUser.get( elem, camelKey );
				if ( data !== undefined ) {
					return data;
				}

				// Attempt to "discover" the data in
				// HTML5 custom data-* attrs
				data = dataAttr( elem, camelKey, undefined );
				if ( data !== undefined ) {
					return data;
				}

				// We tried really hard, but the data doesn't exist.
				return;
			}

			// Set the data...
			camelKey = jQuery.camelCase( key );
			this.each( function() {

				// First, attempt to store a copy or reference of any
				// data that might've been store with a camelCased key.
				var data = dataUser.get( this, camelKey );

				// For HTML5 data-* attribute interop, we have to
				// store property names with dashes in a camelCase form.
				// This might not apply to all properties...*
				dataUser.set( this, camelKey, value );

				// *... In the case of properties that might _actually_
				// have dashes, we need to also store a copy of that
				// unchanged property.
				if ( key.indexOf( "-" ) > -1 && data !== undefined ) {
					dataUser.set( this, key, value );
				}
			} );
		}, null, value, arguments.length > 1, null, true );
	},

	removeData: function( key ) {
		return this.each( function() {
			dataUser.remove( this, key );
		} );
	}
} );


jQuery.extend( {
	queue: function( elem, type, data ) {
		var queue;

		if ( elem ) {
			type = ( type || "fx" ) + "queue";
			queue = dataPriv.get( elem, type );

			// Speed up dequeue by getting out quickly if this is just a lookup
			if ( data ) {
				if ( !queue || jQuery.isArray( data ) ) {
					queue = dataPriv.access( elem, type, jQuery.makeArray( data ) );
				} else {
					queue.push( data );
				}
			}
			return queue || [];
		}
	},

	dequeue: function( elem, type ) {
		type = type || "fx";

		var queue = jQuery.queue( elem, type ),
			startLength = queue.length,
			fn = queue.shift(),
			hooks = jQuery._queueHooks( elem, type ),
			next = function() {
				jQuery.dequeue( elem, type );
			};

		// If the fx queue is dequeued, always remove the progress sentinel
		if ( fn === "inprogress" ) {
			fn = queue.shift();
			startLength--;
		}

		if ( fn ) {

			// Add a progress sentinel to prevent the fx queue from being
			// automatically dequeued
			if ( type === "fx" ) {
				queue.unshift( "inprogress" );
			}

			// Clear up the last queue stop function
			delete hooks.stop;
			fn.call( elem, next, hooks );
		}

		if ( !startLength && hooks ) {
			hooks.empty.fire();
		}
	},

	// Not public - generate a queueHooks object, or return the current one
	_queueHooks: function( elem, type ) {
		var key = type + "queueHooks";
		return dataPriv.get( elem, key ) || dataPriv.access( elem, key, {
			empty: jQuery.Callbacks( "once memory" ).add( function() {
				dataPriv.remove( elem, [ type + "queue", key ] );
			} )
		} );
	}
} );

jQuery.fn.extend( {
	queue: function( type, data ) {
		var setter = 2;

		if ( typeof type !== "string" ) {
			data = type;
			type = "fx";
			setter--;
		}

		if ( arguments.length < setter ) {
			return jQuery.queue( this[ 0 ], type );
		}

		return data === undefined ?
			this :
			this.each( function() {
				var queue = jQuery.queue( this, type, data );

				// Ensure a hooks for this queue
				jQuery._queueHooks( this, type );

				if ( type === "fx" && queue[ 0 ] !== "inprogress" ) {
					jQuery.dequeue( this, type );
				}
			} );
	},
	dequeue: function( type ) {
		return this.each( function() {
			jQuery.dequeue( this, type );
		} );
	},
	clearQueue: function( type ) {
		return this.queue( type || "fx", [] );
	},

	// Get a promise resolved when queues of a certain type
	// are emptied (fx is the type by default)
	promise: function( type, obj ) {
		var tmp,
			count = 1,
			defer = jQuery.Deferred(),
			elements = this,
			i = this.length,
			resolve = function() {
				if ( !( --count ) ) {
					defer.resolveWith( elements, [ elements ] );
				}
			};

		if ( typeof type !== "string" ) {
			obj = type;
			type = undefined;
		}
		type = type || "fx";

		while ( i-- ) {
			tmp = dataPriv.get( elements[ i ], type + "queueHooks" );
			if ( tmp && tmp.empty ) {
				count++;
				tmp.empty.add( resolve );
			}
		}
		resolve();
		return defer.promise( obj );
	}
} );
var pnum = ( /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/ ).source;

var rcssNum = new RegExp( "^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i" );


var cssExpand = [ "Top", "Right", "Bottom", "Left" ];

var isHidden = function( elem, el ) {

		// isHidden might be called from jQuery#filter function;
		// in that case, element will be second argument
		elem = el || elem;
		return jQuery.css( elem, "display" ) === "none" ||
			!jQuery.contains( elem.ownerDocument, elem );
	};



function adjustCSS( elem, prop, valueParts, tween ) {
	var adjusted,
		scale = 1,
		maxIterations = 20,
		currentValue = tween ?
			function() { return tween.cur(); } :
			function() { return jQuery.css( elem, prop, "" ); },
		initial = currentValue(),
		unit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? "" : "px" ),

		// Starting value computation is required for potential unit mismatches
		initialInUnit = ( jQuery.cssNumber[ prop ] || unit !== "px" && +initial ) &&
			rcssNum.exec( jQuery.css( elem, prop ) );

	if ( initialInUnit && initialInUnit[ 3 ] !== unit ) {

		// Trust units reported by jQuery.css
		unit = unit || initialInUnit[ 3 ];

		// Make sure we update the tween properties later on
		valueParts = valueParts || [];

		// Iteratively approximate from a nonzero starting point
		initialInUnit = +initial || 1;

		do {

			// If previous iteration zeroed out, double until we get *something*.
			// Use string for doubling so we don't accidentally see scale as unchanged below
			scale = scale || ".5";

			// Adjust and apply
			initialInUnit = initialInUnit / scale;
			jQuery.style( elem, prop, initialInUnit + unit );

		// Update scale, tolerating zero or NaN from tween.cur()
		// Break the loop if scale is unchanged or perfect, or if we've just had enough.
		} while (
			scale !== ( scale = currentValue() / initial ) && scale !== 1 && --maxIterations
		);
	}

	if ( valueParts ) {
		initialInUnit = +initialInUnit || +initial || 0;

		// Apply relative offset (+=/-=) if specified
		adjusted = valueParts[ 1 ] ?
			initialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :
			+valueParts[ 2 ];
		if ( tween ) {
			tween.unit = unit;
			tween.start = initialInUnit;
			tween.end = adjusted;
		}
	}
	return adjusted;
}
var rcheckableType = ( /^(?:checkbox|radio)$/i );

var rtagName = ( /<([\w:-]+)/ );

var rscriptType = ( /^$|\/(?:java|ecma)script/i );



// We have to close these tags to support XHTML (#13200)
var wrapMap = {

	// Support: IE9
	option: [ 1, "<select multiple='multiple'>", "</select>" ],

	// XHTML parsers do not magically insert elements in the
	// same way that tag soup parsers do. So we cannot shorten
	// this by omitting <tbody> or other required elements.
	thead: [ 1, "<table>", "</table>" ],
	col: [ 2, "<table><colgroup>", "</colgroup></table>" ],
	tr: [ 2, "<table><tbody>", "</tbody></table>" ],
	td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],

	_default: [ 0, "", "" ]
};

// Support: IE9
wrapMap.optgroup = wrapMap.option;

wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
wrapMap.th = wrapMap.td;


function getAll( context, tag ) {

	// Support: IE9-11+
	// Use typeof to avoid zero-argument method invocation on host objects (#15151)
	var ret = typeof context.getElementsByTagName !== "undefined" ?
			context.getElementsByTagName( tag || "*" ) :
			typeof context.querySelectorAll !== "undefined" ?
				context.querySelectorAll( tag || "*" ) :
			[];

	return tag === undefined || tag && jQuery.nodeName( context, tag ) ?
		jQuery.merge( [ context ], ret ) :
		ret;
}


// Mark scripts as having already been evaluated
function setGlobalEval( elems, refElements ) {
	var i = 0,
		l = elems.length;

	for ( ; i < l; i++ ) {
		dataPriv.set(
			elems[ i ],
			"globalEval",
			!refElements || dataPriv.get( refElements[ i ], "globalEval" )
		);
	}
}


var rhtml = /<|&#?\w+;/;

function buildFragment( elems, context, scripts, selection, ignored ) {
	var elem, tmp, tag, wrap, contains, j,
		fragment = context.createDocumentFragment(),
		nodes = [],
		i = 0,
		l = elems.length;

	for ( ; i < l; i++ ) {
		elem = elems[ i ];

		if ( elem || elem === 0 ) {

			// Add nodes directly
			if ( jQuery.type( elem ) === "object" ) {

				// Support: Android<4.1, PhantomJS<2
				// push.apply(_, arraylike) throws on ancient WebKit
				jQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );

			// Convert non-html into a text node
			} else if ( !rhtml.test( elem ) ) {
				nodes.push( context.createTextNode( elem ) );

			// Convert html into DOM nodes
			} else {
				tmp = tmp || fragment.appendChild( context.createElement( "div" ) );

				// Deserialize a standard representation
				tag = ( rtagName.exec( elem ) || [ "", "" ] )[ 1 ].toLowerCase();
				wrap = wrapMap[ tag ] || wrapMap._default;
				tmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];

				// Descend through wrappers to the right content
				j = wrap[ 0 ];
				while ( j-- ) {
					tmp = tmp.lastChild;
				}

				// Support: Android<4.1, PhantomJS<2
				// push.apply(_, arraylike) throws on ancient WebKit
				jQuery.merge( nodes, tmp.childNodes );

				// Remember the top-level container
				tmp = fragment.firstChild;

				// Ensure the created nodes are orphaned (#12392)
				tmp.textContent = "";
			}
		}
	}

	// Remove wrapper from fragment
	fragment.textContent = "";

	i = 0;
	while ( ( elem = nodes[ i++ ] ) ) {

		// Skip elements already in the context collection (trac-4087)
		if ( selection && jQuery.inArray( elem, selection ) > -1 ) {
			if ( ignored ) {
				ignored.push( elem );
			}
			continue;
		}

		contains = jQuery.contains( elem.ownerDocument, elem );

		// Append to fragment
		tmp = getAll( fragment.appendChild( elem ), "script" );

		// Preserve script evaluation history
		if ( contains ) {
			setGlobalEval( tmp );
		}

		// Capture executables
		if ( scripts ) {
			j = 0;
			while ( ( elem = tmp[ j++ ] ) ) {
				if ( rscriptType.test( elem.type || "" ) ) {
					scripts.push( elem );
				}
			}
		}
	}

	return fragment;
}


( function() {
	var fragment = document.createDocumentFragment(),
		div = fragment.appendChild( document.createElement( "div" ) ),
		input = document.createElement( "input" );

	// Support: Android 4.0-4.3, Safari<=5.1
	// Check state lost if the name is set (#11217)
	// Support: Windows Web Apps (WWA)
	// `name` and `type` must use .setAttribute for WWA (#14901)
	input.setAttribute( "type", "radio" );
	input.setAttribute( "checked", "checked" );
	input.setAttribute( "name", "t" );

	div.appendChild( input );

	// Support: Safari<=5.1, Android<4.2
	// Older WebKit doesn't clone checked state correctly in fragments
	support.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;

	// Support: IE<=11+
	// Make sure textarea (and checkbox) defaultValue is properly cloned
	div.innerHTML = "<textarea>x</textarea>";
	support.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;
} )();


var
	rkeyEvent = /^key/,
	rmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,
	rtypenamespace = /^([^.]*)(?:\.(.+)|)/;

function returnTrue() {
	return true;
}

function returnFalse() {
	return false;
}

// Support: IE9
// See #13393 for more info
function safeActiveElement() {
	try {
		return document.activeElement;
	} catch ( err ) { }
}

function on( elem, types, selector, data, fn, one ) {
	var origFn, type;

	// Types can be a map of types/handlers
	if ( typeof types === "object" ) {

		// ( types-Object, selector, data )
		if ( typeof selector !== "string" ) {

			// ( types-Object, data )
			data = data || selector;
			selector = undefined;
		}
		for ( type in types ) {
			on( elem, type, selector, data, types[ type ], one );
		}
		return elem;
	}

	if ( data == null && fn == null ) {

		// ( types, fn )
		fn = selector;
		data = selector = undefined;
	} else if ( fn == null ) {
		if ( typeof selector === "string" ) {

			// ( types, selector, fn )
			fn = data;
			data = undefined;
		} else {

			// ( types, data, fn )
			fn = data;
			data = selector;
			selector = undefined;
		}
	}
	if ( fn === false ) {
		fn = returnFalse;
	} else if ( !fn ) {
		return elem;
	}

	if ( one === 1 ) {
		origFn = fn;
		fn = function( event ) {

			// Can use an empty set, since event contains the info
			jQuery().off( event );
			return origFn.apply( this, arguments );
		};

		// Use same guid so caller can remove using origFn
		fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );
	}
	return elem.each( function() {
		jQuery.event.add( this, types, fn, data, selector );
	} );
}

/*
 * Helper functions for managing events -- not part of the public interface.
 * Props to Dean Edwards' addEvent library for many of the ideas.
 */
jQuery.event = {

	global: {},

	add: function( elem, types, handler, data, selector ) {

		var handleObjIn, eventHandle, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = dataPriv.get( elem );

		// Don't attach events to noData or text/comment nodes (but allow plain objects)
		if ( !elemData ) {
			return;
		}

		// Caller can pass in an object of custom data in lieu of the handler
		if ( handler.handler ) {
			handleObjIn = handler;
			handler = handleObjIn.handler;
			selector = handleObjIn.selector;
		}

		// Make sure that the handler has a unique ID, used to find/remove it later
		if ( !handler.guid ) {
			handler.guid = jQuery.guid++;
		}

		// Init the element's event structure and main handler, if this is the first
		if ( !( events = elemData.events ) ) {
			events = elemData.events = {};
		}
		if ( !( eventHandle = elemData.handle ) ) {
			eventHandle = elemData.handle = function( e ) {

				// Discard the second event of a jQuery.event.trigger() and
				// when an event is called after a page has unloaded
				return typeof jQuery !== "undefined" && jQuery.event.triggered !== e.type ?
					jQuery.event.dispatch.apply( elem, arguments ) : undefined;
			};
		}

		// Handle multiple events separated by a space
		types = ( types || "" ).match( rnotwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

			// There *must* be a type, no attaching namespace-only handlers
			if ( !type ) {
				continue;
			}

			// If event changes its type, use the special event handlers for the changed type
			special = jQuery.event.special[ type ] || {};

			// If selector defined, determine special event api type, otherwise given type
			type = ( selector ? special.delegateType : special.bindType ) || type;

			// Update special based on newly reset type
			special = jQuery.event.special[ type ] || {};

			// handleObj is passed to all event handlers
			handleObj = jQuery.extend( {
				type: type,
				origType: origType,
				data: data,
				handler: handler,
				guid: handler.guid,
				selector: selector,
				needsContext: selector && jQuery.expr.match.needsContext.test( selector ),
				namespace: namespaces.join( "." )
			}, handleObjIn );

			// Init the event handler queue if we're the first
			if ( !( handlers = events[ type ] ) ) {
				handlers = events[ type ] = [];
				handlers.delegateCount = 0;

				// Only use addEventListener if the special events handler returns false
				if ( !special.setup ||
					special.setup.call( elem, data, namespaces, eventHandle ) === false ) {

					if ( elem.addEventListener ) {
						elem.addEventListener( type, eventHandle );
					}
				}
			}

			if ( special.add ) {
				special.add.call( elem, handleObj );

				if ( !handleObj.handler.guid ) {
					handleObj.handler.guid = handler.guid;
				}
			}

			// Add to the element's handler list, delegates in front
			if ( selector ) {
				handlers.splice( handlers.delegateCount++, 0, handleObj );
			} else {
				handlers.push( handleObj );
			}

			// Keep track of which events have ever been used, for event optimization
			jQuery.event.global[ type ] = true;
		}

	},

	// Detach an event or set of events from an element
	remove: function( elem, types, handler, selector, mappedTypes ) {

		var j, origCount, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = dataPriv.hasData( elem ) && dataPriv.get( elem );

		if ( !elemData || !( events = elemData.events ) ) {
			return;
		}

		// Once for each type.namespace in types; type may be omitted
		types = ( types || "" ).match( rnotwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

			// Unbind all events (on this namespace, if provided) for the element
			if ( !type ) {
				for ( type in events ) {
					jQuery.event.remove( elem, type + types[ t ], handler, selector, true );
				}
				continue;
			}

			special = jQuery.event.special[ type ] || {};
			type = ( selector ? special.delegateType : special.bindType ) || type;
			handlers = events[ type ] || [];
			tmp = tmp[ 2 ] &&
				new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" );

			// Remove matching events
			origCount = j = handlers.length;
			while ( j-- ) {
				handleObj = handlers[ j ];

				if ( ( mappedTypes || origType === handleObj.origType ) &&
					( !handler || handler.guid === handleObj.guid ) &&
					( !tmp || tmp.test( handleObj.namespace ) ) &&
					( !selector || selector === handleObj.selector ||
						selector === "**" && handleObj.selector ) ) {
					handlers.splice( j, 1 );

					if ( handleObj.selector ) {
						handlers.delegateCount--;
					}
					if ( special.remove ) {
						special.remove.call( elem, handleObj );
					}
				}
			}

			// Remove generic event handler if we removed something and no more handlers exist
			// (avoids potential for endless recursion during removal of special event handlers)
			if ( origCount && !handlers.length ) {
				if ( !special.teardown ||
					special.teardown.call( elem, namespaces, elemData.handle ) === false ) {

					jQuery.removeEvent( elem, type, elemData.handle );
				}

				delete events[ type ];
			}
		}

		// Remove data and the expando if it's no longer used
		if ( jQuery.isEmptyObject( events ) ) {
			dataPriv.remove( elem, "handle events" );
		}
	},

	dispatch: function( event ) {

		// Make a writable jQuery.Event from the native event object
		event = jQuery.event.fix( event );

		var i, j, ret, matched, handleObj,
			handlerQueue = [],
			args = slice.call( arguments ),
			handlers = ( dataPriv.get( this, "events" ) || {} )[ event.type ] || [],
			special = jQuery.event.special[ event.type ] || {};

		// Use the fix-ed jQuery.Event rather than the (read-only) native event
		args[ 0 ] = event;
		event.delegateTarget = this;

		// Call the preDispatch hook for the mapped type, and let it bail if desired
		if ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {
			return;
		}

		// Determine handlers
		handlerQueue = jQuery.event.handlers.call( this, event, handlers );

		// Run delegates first; they may want to stop propagation beneath us
		i = 0;
		while ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {
			event.currentTarget = matched.elem;

			j = 0;
			while ( ( handleObj = matched.handlers[ j++ ] ) &&
				!event.isImmediatePropagationStopped() ) {

				// Triggered event must either 1) have no namespace, or 2) have namespace(s)
				// a subset or equal to those in the bound event (both can have no namespace).
				if ( !event.rnamespace || event.rnamespace.test( handleObj.namespace ) ) {

					event.handleObj = handleObj;
					event.data = handleObj.data;

					ret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||
						handleObj.handler ).apply( matched.elem, args );

					if ( ret !== undefined ) {
						if ( ( event.result = ret ) === false ) {
							event.preventDefault();
							event.stopPropagation();
						}
					}
				}
			}
		}

		// Call the postDispatch hook for the mapped type
		if ( special.postDispatch ) {
			special.postDispatch.call( this, event );
		}

		return event.result;
	},

	handlers: function( event, handlers ) {
		var i, matches, sel, handleObj,
			handlerQueue = [],
			delegateCount = handlers.delegateCount,
			cur = event.target;

		// Support (at least): Chrome, IE9
		// Find delegate handlers
		// Black-hole SVG <use> instance trees (#13180)
		//
		// Support: Firefox<=42+
		// Avoid non-left-click in FF but don't block IE radio events (#3861, gh-2343)
		if ( delegateCount && cur.nodeType &&
			( event.type !== "click" || isNaN( event.button ) || event.button < 1 ) ) {

			for ( ; cur !== this; cur = cur.parentNode || this ) {

				// Don't check non-elements (#13208)
				// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)
				if ( cur.nodeType === 1 && ( cur.disabled !== true || event.type !== "click" ) ) {
					matches = [];
					for ( i = 0; i < delegateCount; i++ ) {
						handleObj = handlers[ i ];

						// Don't conflict with Object.prototype properties (#13203)
						sel = handleObj.selector + " ";

						if ( matches[ sel ] === undefined ) {
							matches[ sel ] = handleObj.needsContext ?
								jQuery( sel, this ).index( cur ) > -1 :
								jQuery.find( sel, this, null, [ cur ] ).length;
						}
						if ( matches[ sel ] ) {
							matches.push( handleObj );
						}
					}
					if ( matches.length ) {
						handlerQueue.push( { elem: cur, handlers: matches } );
					}
				}
			}
		}

		// Add the remaining (directly-bound) handlers
		if ( delegateCount < handlers.length ) {
			handlerQueue.push( { elem: this, handlers: handlers.slice( delegateCount ) } );
		}

		return handlerQueue;
	},

	// Includes some event props shared by KeyEvent and MouseEvent
	props: ( "altKey bubbles cancelable ctrlKey currentTarget detail eventPhase " +
		"metaKey relatedTarget shiftKey target timeStamp view which" ).split( " " ),

	fixHooks: {},

	keyHooks: {
		props: "char charCode key keyCode".split( " " ),
		filter: function( event, original ) {

			// Add which for key events
			if ( event.which == null ) {
				event.which = original.charCode != null ? original.charCode : original.keyCode;
			}

			return event;
		}
	},

	mouseHooks: {
		props: ( "button buttons clientX clientY offsetX offsetY pageX pageY " +
			"screenX screenY toElement" ).split( " " ),
		filter: function( event, original ) {
			var eventDoc, doc, body,
				button = original.button;

			// Calculate pageX/Y if missing and clientX/Y available
			if ( event.pageX == null && original.clientX != null ) {
				eventDoc = event.target.ownerDocument || document;
				doc = eventDoc.documentElement;
				body = eventDoc.body;

				event.pageX = original.clientX +
					( doc && doc.scrollLeft || body && body.scrollLeft || 0 ) -
					( doc && doc.clientLeft || body && body.clientLeft || 0 );
				event.pageY = original.clientY +
					( doc && doc.scrollTop  || body && body.scrollTop  || 0 ) -
					( doc && doc.clientTop  || body && body.clientTop  || 0 );
			}

			// Add which for click: 1 === left; 2 === middle; 3 === right
			// Note: button is not normalized, so don't use it
			if ( !event.which && button !== undefined ) {
				event.which = ( button & 1 ? 1 : ( button & 2 ? 3 : ( button & 4 ? 2 : 0 ) ) );
			}

			return event;
		}
	},

	fix: function( event ) {
		if ( event[ jQuery.expando ] ) {
			return event;
		}

		// Create a writable copy of the event object and normalize some properties
		var i, prop, copy,
			type = event.type,
			originalEvent = event,
			fixHook = this.fixHooks[ type ];

		if ( !fixHook ) {
			this.fixHooks[ type ] = fixHook =
				rmouseEvent.test( type ) ? this.mouseHooks :
				rkeyEvent.test( type ) ? this.keyHooks :
				{};
		}
		copy = fixHook.props ? this.props.concat( fixHook.props ) : this.props;

		event = new jQuery.Event( originalEvent );

		i = copy.length;
		while ( i-- ) {
			prop = copy[ i ];
			event[ prop ] = originalEvent[ prop ];
		}

		// Support: Cordova 2.5 (WebKit) (#13255)
		// All events should have a target; Cordova deviceready doesn't
		if ( !event.target ) {
			event.target = document;
		}

		// Support: Safari 6.0+, Chrome<28
		// Target should not be a text node (#504, #13143)
		if ( event.target.nodeType === 3 ) {
			event.target = event.target.parentNode;
		}

		return fixHook.filter ? fixHook.filter( event, originalEvent ) : event;
	},

	special: {
		load: {

			// Prevent triggered image.load events from bubbling to window.load
			noBubble: true
		},
		focus: {

			// Fire native event if possible so blur/focus sequence is correct
			trigger: function() {
				if ( this !== safeActiveElement() && this.focus ) {
					this.focus();
					return false;
				}
			},
			delegateType: "focusin"
		},
		blur: {
			trigger: function() {
				if ( this === safeActiveElement() && this.blur ) {
					this.blur();
					return false;
				}
			},
			delegateType: "focusout"
		},
		click: {

			// For checkbox, fire native event so checked state will be right
			trigger: function() {
				if ( this.type === "checkbox" && this.click && jQuery.nodeName( this, "input" ) ) {
					this.click();
					return false;
				}
			},

			// For cross-browser consistency, don't fire native .click() on links
			_default: function( event ) {
				return jQuery.nodeName( event.target, "a" );
			}
		},

		beforeunload: {
			postDispatch: function( event ) {

				// Support: Firefox 20+
				// Firefox doesn't alert if the returnValue field is not set.
				if ( event.result !== undefined && event.originalEvent ) {
					event.originalEvent.returnValue = event.result;
				}
			}
		}
	}
};

jQuery.removeEvent = function( elem, type, handle ) {

	// This "if" is needed for plain objects
	if ( elem.removeEventListener ) {
		elem.removeEventListener( type, handle );
	}
};

jQuery.Event = function( src, props ) {

	// Allow instantiation without the 'new' keyword
	if ( !( this instanceof jQuery.Event ) ) {
		return new jQuery.Event( src, props );
	}

	// Event object
	if ( src && src.type ) {
		this.originalEvent = src;
		this.type = src.type;

		// Events bubbling up the document may have been marked as prevented
		// by a handler lower down the tree; reflect the correct value.
		this.isDefaultPrevented = src.defaultPrevented ||
				src.defaultPrevented === undefined &&

				// Support: Android<4.0
				src.returnValue === false ?
			returnTrue :
			returnFalse;

	// Event type
	} else {
		this.type = src;
	}

	// Put explicitly provided properties onto the event object
	if ( props ) {
		jQuery.extend( this, props );
	}

	// Create a timestamp if incoming event doesn't have one
	this.timeStamp = src && src.timeStamp || jQuery.now();

	// Mark it as fixed
	this[ jQuery.expando ] = true;
};

// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
jQuery.Event.prototype = {
	constructor: jQuery.Event,
	isDefaultPrevented: returnFalse,
	isPropagationStopped: returnFalse,
	isImmediatePropagationStopped: returnFalse,
	isSimulated: false,

	preventDefault: function() {
		var e = this.originalEvent;

		this.isDefaultPrevented = returnTrue;

		if ( e && !this.isSimulated ) {
			e.preventDefault();
		}
	},
	stopPropagation: function() {
		var e = this.originalEvent;

		this.isPropagationStopped = returnTrue;

		if ( e && !this.isSimulated ) {
			e.stopPropagation();
		}
	},
	stopImmediatePropagation: function() {
		var e = this.originalEvent;

		this.isImmediatePropagationStopped = returnTrue;

		if ( e && !this.isSimulated ) {
			e.stopImmediatePropagation();
		}

		this.stopPropagation();
	}
};

// Create mouseenter/leave events using mouseover/out and event-time checks
// so that event delegation works in jQuery.
// Do the same for pointerenter/pointerleave and pointerover/pointerout
//
// Support: Safari 7 only
// Safari sends mouseenter too often; see:
// https://code.google.com/p/chromium/issues/detail?id=470258
// for the description of the bug (it existed in older Chrome versions as well).
jQuery.each( {
	mouseenter: "mouseover",
	mouseleave: "mouseout",
	pointerenter: "pointerover",
	pointerleave: "pointerout"
}, function( orig, fix ) {
	jQuery.event.special[ orig ] = {
		delegateType: fix,
		bindType: fix,

		handle: function( event ) {
			var ret,
				target = this,
				related = event.relatedTarget,
				handleObj = event.handleObj;

			// For mouseenter/leave call the handler if related is outside the target.
			// NB: No relatedTarget if the mouse left/entered the browser window
			if ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {
				event.type = handleObj.origType;
				ret = handleObj.handler.apply( this, arguments );
				event.type = fix;
			}
			return ret;
		}
	};
} );

jQuery.fn.extend( {
	on: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn );
	},
	one: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn, 1 );
	},
	off: function( types, selector, fn ) {
		var handleObj, type;
		if ( types && types.preventDefault && types.handleObj ) {

			// ( event )  dispatched jQuery.Event
			handleObj = types.handleObj;
			jQuery( types.delegateTarget ).off(
				handleObj.namespace ?
					handleObj.origType + "." + handleObj.namespace :
					handleObj.origType,
				handleObj.selector,
				handleObj.handler
			);
			return this;
		}
		if ( typeof types === "object" ) {

			// ( types-object [, selector] )
			for ( type in types ) {
				this.off( type, selector, types[ type ] );
			}
			return this;
		}
		if ( selector === false || typeof selector === "function" ) {

			// ( types [, fn] )
			fn = selector;
			selector = undefined;
		}
		if ( fn === false ) {
			fn = returnFalse;
		}
		return this.each( function() {
			jQuery.event.remove( this, types, fn, selector );
		} );
	}
} );


var
	rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:-]+)[^>]*)\/>/gi,

	// Support: IE 10-11, Edge 10240+
	// In IE/Edge using regex groups here causes severe slowdowns.
	// See https://connect.microsoft.com/IE/feedback/details/1736512/
	rnoInnerhtml = /<script|<style|<link/i,

	// checked="checked" or checked
	rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
	rscriptTypeMasked = /^true\/(.*)/,
	rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;

// Manipulating tables requires a tbody
function manipulationTarget( elem, content ) {
	return jQuery.nodeName( elem, "table" ) &&
		jQuery.nodeName( content.nodeType !== 11 ? content : content.firstChild, "tr" ) ?

		elem.getElementsByTagName( "tbody" )[ 0 ] ||
			elem.appendChild( elem.ownerDocument.createElement( "tbody" ) ) :
		elem;
}

// Replace/restore the type attribute of script elements for safe DOM manipulation
function disableScript( elem ) {
	elem.type = ( elem.getAttribute( "type" ) !== null ) + "/" + elem.type;
	return elem;
}
function restoreScript( elem ) {
	var match = rscriptTypeMasked.exec( elem.type );

	if ( match ) {
		elem.type = match[ 1 ];
	} else {
		elem.removeAttribute( "type" );
	}

	return elem;
}

function cloneCopyEvent( src, dest ) {
	var i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;

	if ( dest.nodeType !== 1 ) {
		return;
	}

	// 1. Copy private data: events, handlers, etc.
	if ( dataPriv.hasData( src ) ) {
		pdataOld = dataPriv.access( src );
		pdataCur = dataPriv.set( dest, pdataOld );
		events = pdataOld.events;

		if ( events ) {
			delete pdataCur.handle;
			pdataCur.events = {};

			for ( type in events ) {
				for ( i = 0, l = events[ type ].length; i < l; i++ ) {
					jQuery.event.add( dest, type, events[ type ][ i ] );
				}
			}
		}
	}

	// 2. Copy user data
	if ( dataUser.hasData( src ) ) {
		udataOld = dataUser.access( src );
		udataCur = jQuery.extend( {}, udataOld );

		dataUser.set( dest, udataCur );
	}
}

// Fix IE bugs, see support tests
function fixInput( src, dest ) {
	var nodeName = dest.nodeName.toLowerCase();

	// Fails to persist the checked state of a cloned checkbox or radio button.
	if ( nodeName === "input" && rcheckableType.test( src.type ) ) {
		dest.checked = src.checked;

	// Fails to return the selected option to the default selected state when cloning options
	} else if ( nodeName === "input" || nodeName === "textarea" ) {
		dest.defaultValue = src.defaultValue;
	}
}

function domManip( collection, args, callback, ignored ) {

	// Flatten any nested arrays
	args = concat.apply( [], args );

	var fragment, first, scripts, hasScripts, node, doc,
		i = 0,
		l = collection.length,
		iNoClone = l - 1,
		value = args[ 0 ],
		isFunction = jQuery.isFunction( value );

	// We can't cloneNode fragments that contain checked, in WebKit
	if ( isFunction ||
			( l > 1 && typeof value === "string" &&
				!support.checkClone && rchecked.test( value ) ) ) {
		return collection.each( function( index ) {
			var self = collection.eq( index );
			if ( isFunction ) {
				args[ 0 ] = value.call( this, index, self.html() );
			}
			domManip( self, args, callback, ignored );
		} );
	}

	if ( l ) {
		fragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );
		first = fragment.firstChild;

		if ( fragment.childNodes.length === 1 ) {
			fragment = first;
		}

		// Require either new content or an interest in ignored elements to invoke the callback
		if ( first || ignored ) {
			scripts = jQuery.map( getAll( fragment, "script" ), disableScript );
			hasScripts = scripts.length;

			// Use the original fragment for the last item
			// instead of the first because it can end up
			// being emptied incorrectly in certain situations (#8070).
			for ( ; i < l; i++ ) {
				node = fragment;

				if ( i !== iNoClone ) {
					node = jQuery.clone( node, true, true );

					// Keep references to cloned scripts for later restoration
					if ( hasScripts ) {

						// Support: Android<4.1, PhantomJS<2
						// push.apply(_, arraylike) throws on ancient WebKit
						jQuery.merge( scripts, getAll( node, "script" ) );
					}
				}

				callback.call( collection[ i ], node, i );
			}

			if ( hasScripts ) {
				doc = scripts[ scripts.length - 1 ].ownerDocument;

				// Reenable scripts
				jQuery.map( scripts, restoreScript );

				// Evaluate executable scripts on first document insertion
				for ( i = 0; i < hasScripts; i++ ) {
					node = scripts[ i ];
					if ( rscriptType.test( node.type || "" ) &&
						!dataPriv.access( node, "globalEval" ) &&
						jQuery.contains( doc, node ) ) {

						if ( node.src ) {

							// Optional AJAX dependency, but won't run scripts if not present
							if ( jQuery._evalUrl ) {
								jQuery._evalUrl( node.src );
							}
						} else {
							jQuery.globalEval( node.textContent.replace( rcleanScript, "" ) );
						}
					}
				}
			}
		}
	}

	return collection;
}

function remove( elem, selector, keepData ) {
	var node,
		nodes = selector ? jQuery.filter( selector, elem ) : elem,
		i = 0;

	for ( ; ( node = nodes[ i ] ) != null; i++ ) {
		if ( !keepData && node.nodeType === 1 ) {
			jQuery.cleanData( getAll( node ) );
		}

		if ( node.parentNode ) {
			if ( keepData && jQuery.contains( node.ownerDocument, node ) ) {
				setGlobalEval( getAll( node, "script" ) );
			}
			node.parentNode.removeChild( node );
		}
	}

	return elem;
}

jQuery.extend( {
	htmlPrefilter: function( html ) {
		return html.replace( rxhtmlTag, "<$1></$2>" );
	},

	clone: function( elem, dataAndEvents, deepDataAndEvents ) {
		var i, l, srcElements, destElements,
			clone = elem.cloneNode( true ),
			inPage = jQuery.contains( elem.ownerDocument, elem );

		// Fix IE cloning issues
		if ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&
				!jQuery.isXMLDoc( elem ) ) {

			// We eschew Sizzle here for performance reasons: http://jsperf.com/getall-vs-sizzle/2
			destElements = getAll( clone );
			srcElements = getAll( elem );

			for ( i = 0, l = srcElements.length; i < l; i++ ) {
				fixInput( srcElements[ i ], destElements[ i ] );
			}
		}

		// Copy the events from the original to the clone
		if ( dataAndEvents ) {
			if ( deepDataAndEvents ) {
				srcElements = srcElements || getAll( elem );
				destElements = destElements || getAll( clone );

				for ( i = 0, l = srcElements.length; i < l; i++ ) {
					cloneCopyEvent( srcElements[ i ], destElements[ i ] );
				}
			} else {
				cloneCopyEvent( elem, clone );
			}
		}

		// Preserve script evaluation history
		destElements = getAll( clone, "script" );
		if ( destElements.length > 0 ) {
			setGlobalEval( destElements, !inPage && getAll( elem, "script" ) );
		}

		// Return the cloned set
		return clone;
	},

	cleanData: function( elems ) {
		var data, elem, type,
			special = jQuery.event.special,
			i = 0;

		for ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {
			if ( acceptData( elem ) ) {
				if ( ( data = elem[ dataPriv.expando ] ) ) {
					if ( data.events ) {
						for ( type in data.events ) {
							if ( special[ type ] ) {
								jQuery.event.remove( elem, type );

							// This is a shortcut to avoid jQuery.event.remove's overhead
							} else {
								jQuery.removeEvent( elem, type, data.handle );
							}
						}
					}

					// Support: Chrome <= 35-45+
					// Assign undefined instead of using delete, see Data#remove
					elem[ dataPriv.expando ] = undefined;
				}
				if ( elem[ dataUser.expando ] ) {

					// Support: Chrome <= 35-45+
					// Assign undefined instead of using delete, see Data#remove
					elem[ dataUser.expando ] = undefined;
				}
			}
		}
	}
} );

jQuery.fn.extend( {

	// Keep domManip exposed until 3.0 (gh-2225)
	domManip: domManip,

	detach: function( selector ) {
		return remove( this, selector, true );
	},

	remove: function( selector ) {
		return remove( this, selector );
	},

	text: function( value ) {
		return access( this, function( value ) {
			return value === undefined ?
				jQuery.text( this ) :
				this.empty().each( function() {
					if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
						this.textContent = value;
					}
				} );
		}, null, value, arguments.length );
	},

	append: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.appendChild( elem );
			}
		} );
	},

	prepend: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.insertBefore( elem, target.firstChild );
			}
		} );
	},

	before: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this );
			}
		} );
	},

	after: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this.nextSibling );
			}
		} );
	},

	empty: function() {
		var elem,
			i = 0;

		for ( ; ( elem = this[ i ] ) != null; i++ ) {
			if ( elem.nodeType === 1 ) {

				// Prevent memory leaks
				jQuery.cleanData( getAll( elem, false ) );

				// Remove any remaining nodes
				elem.textContent = "";
			}
		}

		return this;
	},

	clone: function( dataAndEvents, deepDataAndEvents ) {
		dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
		deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;

		return this.map( function() {
			return jQuery.clone( this, dataAndEvents, deepDataAndEvents );
		} );
	},

	html: function( value ) {
		return access( this, function( value ) {
			var elem = this[ 0 ] || {},
				i = 0,
				l = this.length;

			if ( value === undefined && elem.nodeType === 1 ) {
				return elem.innerHTML;
			}

			// See if we can take a shortcut and just use innerHTML
			if ( typeof value === "string" && !rnoInnerhtml.test( value ) &&
				!wrapMap[ ( rtagName.exec( value ) || [ "", "" ] )[ 1 ].toLowerCase() ] ) {

				value = jQuery.htmlPrefilter( value );

				try {
					for ( ; i < l; i++ ) {
						elem = this[ i ] || {};

						// Remove element nodes and prevent memory leaks
						if ( elem.nodeType === 1 ) {
							jQuery.cleanData( getAll( elem, false ) );
							elem.innerHTML = value;
						}
					}

					elem = 0;

				// If using innerHTML throws an exception, use the fallback method
				} catch ( e ) {}
			}

			if ( elem ) {
				this.empty().append( value );
			}
		}, null, value, arguments.length );
	},

	replaceWith: function() {
		var ignored = [];

		// Make the changes, replacing each non-ignored context element with the new content
		return domManip( this, arguments, function( elem ) {
			var parent = this.parentNode;

			if ( jQuery.inArray( this, ignored ) < 0 ) {
				jQuery.cleanData( getAll( this ) );
				if ( parent ) {
					parent.replaceChild( elem, this );
				}
			}

		// Force callback invocation
		}, ignored );
	}
} );

jQuery.each( {
	appendTo: "append",
	prependTo: "prepend",
	insertBefore: "before",
	insertAfter: "after",
	replaceAll: "replaceWith"
}, function( name, original ) {
	jQuery.fn[ name ] = function( selector ) {
		var elems,
			ret = [],
			insert = jQuery( selector ),
			last = insert.length - 1,
			i = 0;

		for ( ; i <= last; i++ ) {
			elems = i === last ? this : this.clone( true );
			jQuery( insert[ i ] )[ original ]( elems );

			// Support: QtWebKit
			// .get() because push.apply(_, arraylike) throws
			push.apply( ret, elems.get() );
		}

		return this.pushStack( ret );
	};
} );


var iframe,
	elemdisplay = {

		// Support: Firefox
		// We have to pre-define these values for FF (#10227)
		HTML: "block",
		BODY: "block"
	};

/**
 * Retrieve the actual display of a element
 * @param {String} name nodeName of the element
 * @param {Object} doc Document object
 */

// Called only from within defaultDisplay
function actualDisplay( name, doc ) {
	var elem = jQuery( doc.createElement( name ) ).appendTo( doc.body ),

		display = jQuery.css( elem[ 0 ], "display" );

	// We don't have any data stored on the element,
	// so use "detach" method as fast way to get rid of the element
	elem.detach();

	return display;
}

/**
 * Try to determine the default display value of an element
 * @param {String} nodeName
 */
function defaultDisplay( nodeName ) {
	var doc = document,
		display = elemdisplay[ nodeName ];

	if ( !display ) {
		display = actualDisplay( nodeName, doc );

		// If the simple way fails, read from inside an iframe
		if ( display === "none" || !display ) {

			// Use the already-created iframe if possible
			iframe = ( iframe || jQuery( "<iframe frameborder='0' width='0' height='0'/>" ) )
				.appendTo( doc.documentElement );

			// Always write a new HTML skeleton so Webkit and Firefox don't choke on reuse
			doc = iframe[ 0 ].contentDocument;

			// Support: IE
			doc.write();
			doc.close();

			display = actualDisplay( nodeName, doc );
			iframe.detach();
		}

		// Store the correct default display
		elemdisplay[ nodeName ] = display;
	}

	return display;
}
var rmargin = ( /^margin/ );

var rnumnonpx = new RegExp( "^(" + pnum + ")(?!px)[a-z%]+$", "i" );

var getStyles = function( elem ) {

		// Support: IE<=11+, Firefox<=30+ (#15098, #14150)
		// IE throws on elements created in popups
		// FF meanwhile throws on frame elements through "defaultView.getComputedStyle"
		var view = elem.ownerDocument.defaultView;

		if ( !view || !view.opener ) {
			view = window;
		}

		return view.getComputedStyle( elem );
	};

var swap = function( elem, options, callback, args ) {
	var ret, name,
		old = {};

	// Remember the old values, and insert the new ones
	for ( name in options ) {
		old[ name ] = elem.style[ name ];
		elem.style[ name ] = options[ name ];
	}

	ret = callback.apply( elem, args || [] );

	// Revert the old values
	for ( name in options ) {
		elem.style[ name ] = old[ name ];
	}

	return ret;
};


var documentElement = document.documentElement;



( function() {
	var pixelPositionVal, boxSizingReliableVal, pixelMarginRightVal, reliableMarginLeftVal,
		container = document.createElement( "div" ),
		div = document.createElement( "div" );

	// Finish early in limited (non-browser) environments
	if ( !div.style ) {
		return;
	}

	// Support: IE9-11+
	// Style of cloned element affects source element cloned (#8908)
	div.style.backgroundClip = "content-box";
	div.cloneNode( true ).style.backgroundClip = "";
	support.clearCloneStyle = div.style.backgroundClip === "content-box";

	container.style.cssText = "border:0;width:8px;height:0;top:0;left:-9999px;" +
		"padding:0;margin-top:1px;position:absolute";
	container.appendChild( div );

	// Executing both pixelPosition & boxSizingReliable tests require only one layout
	// so they're executed at the same time to save the second computation.
	function computeStyleTests() {
		div.style.cssText =

			// Support: Firefox<29, Android 2.3
			// Vendor-prefix box-sizing
			"-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;" +
			"position:relative;display:block;" +
			"margin:auto;border:1px;padding:1px;" +
			"top:1%;width:50%";
		div.innerHTML = "";
		documentElement.appendChild( container );

		var divStyle = window.getComputedStyle( div );
		pixelPositionVal = divStyle.top !== "1%";
		reliableMarginLeftVal = divStyle.marginLeft === "2px";
		boxSizingReliableVal = divStyle.width === "4px";

		// Support: Android 4.0 - 4.3 only
		// Some styles come back with percentage values, even though they shouldn't
		div.style.marginRight = "50%";
		pixelMarginRightVal = divStyle.marginRight === "4px";

		documentElement.removeChild( container );
	}

	jQuery.extend( support, {
		pixelPosition: function() {

			// This test is executed only once but we still do memoizing
			// since we can use the boxSizingReliable pre-computing.
			// No need to check if the test was already performed, though.
			computeStyleTests();
			return pixelPositionVal;
		},
		boxSizingReliable: function() {
			if ( boxSizingReliableVal == null ) {
				computeStyleTests();
			}
			return boxSizingReliableVal;
		},
		pixelMarginRight: function() {

			// Support: Android 4.0-4.3
			// We're checking for boxSizingReliableVal here instead of pixelMarginRightVal
			// since that compresses better and they're computed together anyway.
			if ( boxSizingReliableVal == null ) {
				computeStyleTests();
			}
			return pixelMarginRightVal;
		},
		reliableMarginLeft: function() {

			// Support: IE <=8 only, Android 4.0 - 4.3 only, Firefox <=3 - 37
			if ( boxSizingReliableVal == null ) {
				computeStyleTests();
			}
			return reliableMarginLeftVal;
		},
		reliableMarginRight: function() {

			// Support: Android 2.3
			// Check if div with explicit width and no margin-right incorrectly
			// gets computed margin-right based on width of container. (#3333)
			// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right
			// This support function is only executed once so no memoizing is needed.
			var ret,
				marginDiv = div.appendChild( document.createElement( "div" ) );

			// Reset CSS: box-sizing; display; margin; border; padding
			marginDiv.style.cssText = div.style.cssText =

				// Support: Android 2.3
				// Vendor-prefix box-sizing
				"-webkit-box-sizing:content-box;box-sizing:content-box;" +
				"display:block;margin:0;border:0;padding:0";
			marginDiv.style.marginRight = marginDiv.style.width = "0";
			div.style.width = "1px";
			documentElement.appendChild( container );

			ret = !parseFloat( window.getComputedStyle( marginDiv ).marginRight );

			documentElement.removeChild( container );
			div.removeChild( marginDiv );

			return ret;
		}
	} );
} )();


function curCSS( elem, name, computed ) {
	var width, minWidth, maxWidth, ret,
		style = elem.style;

	computed = computed || getStyles( elem );
	ret = computed ? computed.getPropertyValue( name ) || computed[ name ] : undefined;

	// Support: Opera 12.1x only
	// Fall back to style even without computed
	// computed is undefined for elems on document fragments
	if ( ( ret === "" || ret === undefined ) && !jQuery.contains( elem.ownerDocument, elem ) ) {
		ret = jQuery.style( elem, name );
	}

	// Support: IE9
	// getPropertyValue is only needed for .css('filter') (#12537)
	if ( computed ) {

		// A tribute to the "awesome hack by Dean Edwards"
		// Android Browser returns percentage for some values,
		// but width seems to be reliably pixels.
		// This is against the CSSOM draft spec:
		// http://dev.w3.org/csswg/cssom/#resolved-values
		if ( !support.pixelMarginRight() && rnumnonpx.test( ret ) && rmargin.test( name ) ) {

			// Remember the original values
			width = style.width;
			minWidth = style.minWidth;
			maxWidth = style.maxWidth;

			// Put in the new values to get a computed value out
			style.minWidth = style.maxWidth = style.width = ret;
			ret = computed.width;

			// Revert the changed values
			style.width = width;
			style.minWidth = minWidth;
			style.maxWidth = maxWidth;
		}
	}

	return ret !== undefined ?

		// Support: IE9-11+
		// IE returns zIndex value as an integer.
		ret + "" :
		ret;
}


function addGetHookIf( conditionFn, hookFn ) {

	// Define the hook, we'll check on the first run if it's really needed.
	return {
		get: function() {
			if ( conditionFn() ) {

				// Hook not needed (or it's not possible to use it due
				// to missing dependency), remove it.
				delete this.get;
				return;
			}

			// Hook needed; redefine it so that the support test is not executed again.
			return ( this.get = hookFn ).apply( this, arguments );
		}
	};
}


var

	// Swappable if display is none or starts with table
	// except "table", "table-cell", or "table-caption"
	// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
	rdisplayswap = /^(none|table(?!-c[ea]).+)/,

	cssShow = { position: "absolute", visibility: "hidden", display: "block" },
	cssNormalTransform = {
		letterSpacing: "0",
		fontWeight: "400"
	},

	cssPrefixes = [ "Webkit", "O", "Moz", "ms" ],
	emptyStyle = document.createElement( "div" ).style;

// Return a css property mapped to a potentially vendor prefixed property
function vendorPropName( name ) {

	// Shortcut for names that are not vendor prefixed
	if ( name in emptyStyle ) {
		return name;
	}

	// Check for vendor prefixed names
	var capName = name[ 0 ].toUpperCase() + name.slice( 1 ),
		i = cssPrefixes.length;

	while ( i-- ) {
		name = cssPrefixes[ i ] + capName;
		if ( name in emptyStyle ) {
			return name;
		}
	}
}

function setPositiveNumber( elem, value, subtract ) {

	// Any relative (+/-) values have already been
	// normalized at this point
	var matches = rcssNum.exec( value );
	return matches ?

		// Guard against undefined "subtract", e.g., when used as in cssHooks
		Math.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || "px" ) :
		value;
}

function augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {
	var i = extra === ( isBorderBox ? "border" : "content" ) ?

		// If we already have the right measurement, avoid augmentation
		4 :

		// Otherwise initialize for horizontal or vertical properties
		name === "width" ? 1 : 0,

		val = 0;

	for ( ; i < 4; i += 2 ) {

		// Both box models exclude margin, so add it if we want it
		if ( extra === "margin" ) {
			val += jQuery.css( elem, extra + cssExpand[ i ], true, styles );
		}

		if ( isBorderBox ) {

			// border-box includes padding, so remove it if we want content
			if ( extra === "content" ) {
				val -= jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );
			}

			// At this point, extra isn't border nor margin, so remove border
			if ( extra !== "margin" ) {
				val -= jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}
		} else {

			// At this point, extra isn't content, so add padding
			val += jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );

			// At this point, extra isn't content nor padding, so add border
			if ( extra !== "padding" ) {
				val += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}
		}
	}

	return val;
}

function getWidthOrHeight( elem, name, extra ) {

	// Start with offset property, which is equivalent to the border-box value
	var valueIsBorderBox = true,
		val = name === "width" ? elem.offsetWidth : elem.offsetHeight,
		styles = getStyles( elem ),
		isBorderBox = jQuery.css( elem, "boxSizing", false, styles ) === "border-box";

	// Some non-html elements return undefined for offsetWidth, so check for null/undefined
	// svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285
	// MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668
	if ( val <= 0 || val == null ) {

		// Fall back to computed then uncomputed css if necessary
		val = curCSS( elem, name, styles );
		if ( val < 0 || val == null ) {
			val = elem.style[ name ];
		}

		// Computed unit is not pixels. Stop here and return.
		if ( rnumnonpx.test( val ) ) {
			return val;
		}

		// Check for style in case a browser which returns unreliable values
		// for getComputedStyle silently falls back to the reliable elem.style
		valueIsBorderBox = isBorderBox &&
			( support.boxSizingReliable() || val === elem.style[ name ] );

		// Normalize "", auto, and prepare for extra
		val = parseFloat( val ) || 0;
	}

	// Use the active box-sizing model to add/subtract irrelevant styles
	return ( val +
		augmentWidthOrHeight(
			elem,
			name,
			extra || ( isBorderBox ? "border" : "content" ),
			valueIsBorderBox,
			styles
		)
	) + "px";
}

function showHide( elements, show ) {
	var display, elem, hidden,
		values = [],
		index = 0,
		length = elements.length;

	for ( ; index < length; index++ ) {
		elem = elements[ index ];
		if ( !elem.style ) {
			continue;
		}

		values[ index ] = dataPriv.get( elem, "olddisplay" );
		display = elem.style.display;
		if ( show ) {

			// Reset the inline display of this element to learn if it is
			// being hidden by cascaded rules or not
			if ( !values[ index ] && display === "none" ) {
				elem.style.display = "";
			}

			// Set elements which have been overridden with display: none
			// in a stylesheet to whatever the default browser style is
			// for such an element
			if ( elem.style.display === "" && isHidden( elem ) ) {
				values[ index ] = dataPriv.access(
					elem,
					"olddisplay",
					defaultDisplay( elem.nodeName )
				);
			}
		} else {
			hidden = isHidden( elem );

			if ( display !== "none" || !hidden ) {
				dataPriv.set(
					elem,
					"olddisplay",
					hidden ? display : jQuery.css( elem, "display" )
				);
			}
		}
	}

	// Set the display of most of the elements in a second loop
	// to avoid the constant reflow
	for ( index = 0; index < length; index++ ) {
		elem = elements[ index ];
		if ( !elem.style ) {
			continue;
		}
		if ( !show || elem.style.display === "none" || elem.style.display === "" ) {
			elem.style.display = show ? values[ index ] || "" : "none";
		}
	}

	return elements;
}

jQuery.extend( {

	// Add in style property hooks for overriding the default
	// behavior of getting and setting a style property
	cssHooks: {
		opacity: {
			get: function( elem, computed ) {
				if ( computed ) {

					// We should always get a number back from opacity
					var ret = curCSS( elem, "opacity" );
					return ret === "" ? "1" : ret;
				}
			}
		}
	},

	// Don't automatically add "px" to these possibly-unitless properties
	cssNumber: {
		"animationIterationCount": true,
		"columnCount": true,
		"fillOpacity": true,
		"flexGrow": true,
		"flexShrink": true,
		"fontWeight": true,
		"lineHeight": true,
		"opacity": true,
		"order": true,
		"orphans": true,
		"widows": true,
		"zIndex": true,
		"zoom": true
	},

	// Add in properties whose names you wish to fix before
	// setting or getting the value
	cssProps: {
		"float": "cssFloat"
	},

	// Get and set the style property on a DOM Node
	style: function( elem, name, value, extra ) {

		// Don't set styles on text and comment nodes
		if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {
			return;
		}

		// Make sure that we're working with the right name
		var ret, type, hooks,
			origName = jQuery.camelCase( name ),
			style = elem.style;

		name = jQuery.cssProps[ origName ] ||
			( jQuery.cssProps[ origName ] = vendorPropName( origName ) || origName );

		// Gets hook for the prefixed version, then unprefixed version
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// Check if we're setting a value
		if ( value !== undefined ) {
			type = typeof value;

			// Convert "+=" or "-=" to relative numbers (#7345)
			if ( type === "string" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {
				value = adjustCSS( elem, name, ret );

				// Fixes bug #9237
				type = "number";
			}

			// Make sure that null and NaN values aren't set (#7116)
			if ( value == null || value !== value ) {
				return;
			}

			// If a number was passed in, add the unit (except for certain CSS properties)
			if ( type === "number" ) {
				value += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? "" : "px" );
			}

			// Support: IE9-11+
			// background-* props affect original clone's values
			if ( !support.clearCloneStyle && value === "" && name.indexOf( "background" ) === 0 ) {
				style[ name ] = "inherit";
			}

			// If a hook was provided, use that value, otherwise just set the specified value
			if ( !hooks || !( "set" in hooks ) ||
				( value = hooks.set( elem, value, extra ) ) !== undefined ) {

				style[ name ] = value;
			}

		} else {

			// If a hook was provided get the non-computed value from there
			if ( hooks && "get" in hooks &&
				( ret = hooks.get( elem, false, extra ) ) !== undefined ) {

				return ret;
			}

			// Otherwise just get the value from the style object
			return style[ name ];
		}
	},

	css: function( elem, name, extra, styles ) {
		var val, num, hooks,
			origName = jQuery.camelCase( name );

		// Make sure that we're working with the right name
		name = jQuery.cssProps[ origName ] ||
			( jQuery.cssProps[ origName ] = vendorPropName( origName ) || origName );

		// Try prefixed name followed by the unprefixed name
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// If a hook was provided get the computed value from there
		if ( hooks && "get" in hooks ) {
			val = hooks.get( elem, true, extra );
		}

		// Otherwise, if a way to get the computed value exists, use that
		if ( val === undefined ) {
			val = curCSS( elem, name, styles );
		}

		// Convert "normal" to computed value
		if ( val === "normal" && name in cssNormalTransform ) {
			val = cssNormalTransform[ name ];
		}

		// Make numeric if forced or a qualifier was provided and val looks numeric
		if ( extra === "" || extra ) {
			num = parseFloat( val );
			return extra === true || isFinite( num ) ? num || 0 : val;
		}
		return val;
	}
} );

jQuery.each( [ "height", "width" ], function( i, name ) {
	jQuery.cssHooks[ name ] = {
		get: function( elem, computed, extra ) {
			if ( computed ) {

				// Certain elements can have dimension info if we invisibly show them
				// but it must have a current display style that would benefit
				return rdisplayswap.test( jQuery.css( elem, "display" ) ) &&
					elem.offsetWidth === 0 ?
						swap( elem, cssShow, function() {
							return getWidthOrHeight( elem, name, extra );
						} ) :
						getWidthOrHeight( elem, name, extra );
			}
		},

		set: function( elem, value, extra ) {
			var matches,
				styles = extra && getStyles( elem ),
				subtract = extra && augmentWidthOrHeight(
					elem,
					name,
					extra,
					jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
					styles
				);

			// Convert to pixels if value adjustment is needed
			if ( subtract && ( matches = rcssNum.exec( value ) ) &&
				( matches[ 3 ] || "px" ) !== "px" ) {

				elem.style[ name ] = value;
				value = jQuery.css( elem, name );
			}

			return setPositiveNumber( elem, value, subtract );
		}
	};
} );

jQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,
	function( elem, computed ) {
		if ( computed ) {
			return ( parseFloat( curCSS( elem, "marginLeft" ) ) ||
				elem.getBoundingClientRect().left -
					swap( elem, { marginLeft: 0 }, function() {
						return elem.getBoundingClientRect().left;
					} )
				) + "px";
		}
	}
);

// Support: Android 2.3
jQuery.cssHooks.marginRight = addGetHookIf( support.reliableMarginRight,
	function( elem, computed ) {
		if ( computed ) {
			return swap( elem, { "display": "inline-block" },
				curCSS, [ elem, "marginRight" ] );
		}
	}
);

// These hooks are used by animate to expand properties
jQuery.each( {
	margin: "",
	padding: "",
	border: "Width"
}, function( prefix, suffix ) {
	jQuery.cssHooks[ prefix + suffix ] = {
		expand: function( value ) {
			var i = 0,
				expanded = {},

				// Assumes a single number if not a string
				parts = typeof value === "string" ? value.split( " " ) : [ value ];

			for ( ; i < 4; i++ ) {
				expanded[ prefix + cssExpand[ i ] + suffix ] =
					parts[ i ] || parts[ i - 2 ] || parts[ 0 ];
			}

			return expanded;
		}
	};

	if ( !rmargin.test( prefix ) ) {
		jQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;
	}
} );

jQuery.fn.extend( {
	css: function( name, value ) {
		return access( this, function( elem, name, value ) {
			var styles, len,
				map = {},
				i = 0;

			if ( jQuery.isArray( name ) ) {
				styles = getStyles( elem );
				len = name.length;

				for ( ; i < len; i++ ) {
					map[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );
				}

				return map;
			}

			return value !== undefined ?
				jQuery.style( elem, name, value ) :
				jQuery.css( elem, name );
		}, name, value, arguments.length > 1 );
	},
	show: function() {
		return showHide( this, true );
	},
	hide: function() {
		return showHide( this );
	},
	toggle: function( state ) {
		if ( typeof state === "boolean" ) {
			return state ? this.show() : this.hide();
		}

		return this.each( function() {
			if ( isHidden( this ) ) {
				jQuery( this ).show();
			} else {
				jQuery( this ).hide();
			}
		} );
	}
} );


function Tween( elem, options, prop, end, easing ) {
	return new Tween.prototype.init( elem, options, prop, end, easing );
}
jQuery.Tween = Tween;

Tween.prototype = {
	constructor: Tween,
	init: function( elem, options, prop, end, easing, unit ) {
		this.elem = elem;
		this.prop = prop;
		this.easing = easing || jQuery.easing._default;
		this.options = options;
		this.start = this.now = this.cur();
		this.end = end;
		this.unit = unit || ( jQuery.cssNumber[ prop ] ? "" : "px" );
	},
	cur: function() {
		var hooks = Tween.propHooks[ this.prop ];

		return hooks && hooks.get ?
			hooks.get( this ) :
			Tween.propHooks._default.get( this );
	},
	run: function( percent ) {
		var eased,
			hooks = Tween.propHooks[ this.prop ];

		if ( this.options.duration ) {
			this.pos = eased = jQuery.easing[ this.easing ](
				percent, this.options.duration * percent, 0, 1, this.options.duration
			);
		} else {
			this.pos = eased = percent;
		}
		this.now = ( this.end - this.start ) * eased + this.start;

		if ( this.options.step ) {
			this.options.step.call( this.elem, this.now, this );
		}

		if ( hooks && hooks.set ) {
			hooks.set( this );
		} else {
			Tween.propHooks._default.set( this );
		}
		return this;
	}
};

Tween.prototype.init.prototype = Tween.prototype;

Tween.propHooks = {
	_default: {
		get: function( tween ) {
			var result;

			// Use a property on the element directly when it is not a DOM element,
			// or when there is no matching style property that exists.
			if ( tween.elem.nodeType !== 1 ||
				tween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {
				return tween.elem[ tween.prop ];
			}

			// Passing an empty string as a 3rd parameter to .css will automatically
			// attempt a parseFloat and fallback to a string if the parse fails.
			// Simple values such as "10px" are parsed to Float;
			// complex values such as "rotate(1rad)" are returned as-is.
			result = jQuery.css( tween.elem, tween.prop, "" );

			// Empty strings, null, undefined and "auto" are converted to 0.
			return !result || result === "auto" ? 0 : result;
		},
		set: function( tween ) {

			// Use step hook for back compat.
			// Use cssHook if its there.
			// Use .style if available and use plain properties where available.
			if ( jQuery.fx.step[ tween.prop ] ) {
				jQuery.fx.step[ tween.prop ]( tween );
			} else if ( tween.elem.nodeType === 1 &&
				( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null ||
					jQuery.cssHooks[ tween.prop ] ) ) {
				jQuery.style( tween.elem, tween.prop, tween.now + tween.unit );
			} else {
				tween.elem[ tween.prop ] = tween.now;
			}
		}
	}
};

// Support: IE9
// Panic based approach to setting things on disconnected nodes
Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
	set: function( tween ) {
		if ( tween.elem.nodeType && tween.elem.parentNode ) {
			tween.elem[ tween.prop ] = tween.now;
		}
	}
};

jQuery.easing = {
	linear: function( p ) {
		return p;
	},
	swing: function( p ) {
		return 0.5 - Math.cos( p * Math.PI ) / 2;
	},
	_default: "swing"
};

jQuery.fx = Tween.prototype.init;

// Back Compat <1.8 extension point
jQuery.fx.step = {};




var
	fxNow, timerId,
	rfxtypes = /^(?:toggle|show|hide)$/,
	rrun = /queueHooks$/;

// Animations created synchronously will run synchronously
function createFxNow() {
	window.setTimeout( function() {
		fxNow = undefined;
	} );
	return ( fxNow = jQuery.now() );
}

// Generate parameters to create a standard animation
function genFx( type, includeWidth ) {
	var which,
		i = 0,
		attrs = { height: type };

	// If we include width, step value is 1 to do all cssExpand values,
	// otherwise step value is 2 to skip over Left and Right
	includeWidth = includeWidth ? 1 : 0;
	for ( ; i < 4 ; i += 2 - includeWidth ) {
		which = cssExpand[ i ];
		attrs[ "margin" + which ] = attrs[ "padding" + which ] = type;
	}

	if ( includeWidth ) {
		attrs.opacity = attrs.width = type;
	}

	return attrs;
}

function createTween( value, prop, animation ) {
	var tween,
		collection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ "*" ] ),
		index = 0,
		length = collection.length;
	for ( ; index < length; index++ ) {
		if ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {

			// We're done with this property
			return tween;
		}
	}
}

function defaultPrefilter( elem, props, opts ) {
	/* jshint validthis: true */
	var prop, value, toggle, tween, hooks, oldfire, display, checkDisplay,
		anim = this,
		orig = {},
		style = elem.style,
		hidden = elem.nodeType && isHidden( elem ),
		dataShow = dataPriv.get( elem, "fxshow" );

	// Handle queue: false promises
	if ( !opts.queue ) {
		hooks = jQuery._queueHooks( elem, "fx" );
		if ( hooks.unqueued == null ) {
			hooks.unqueued = 0;
			oldfire = hooks.empty.fire;
			hooks.empty.fire = function() {
				if ( !hooks.unqueued ) {
					oldfire();
				}
			};
		}
		hooks.unqueued++;

		anim.always( function() {

			// Ensure the complete handler is called before this completes
			anim.always( function() {
				hooks.unqueued--;
				if ( !jQuery.queue( elem, "fx" ).length ) {
					hooks.empty.fire();
				}
			} );
		} );
	}

	// Height/width overflow pass
	if ( elem.nodeType === 1 && ( "height" in props || "width" in props ) ) {

		// Make sure that nothing sneaks out
		// Record all 3 overflow attributes because IE9-10 do not
		// change the overflow attribute when overflowX and
		// overflowY are set to the same value
		opts.overflow = [ style.overflow, style.overflowX, style.overflowY ];

		// Set display property to inline-block for height/width
		// animations on inline elements that are having width/height animated
		display = jQuery.css( elem, "display" );

		// Test default display if display is currently "none"
		checkDisplay = display === "none" ?
			dataPriv.get( elem, "olddisplay" ) || defaultDisplay( elem.nodeName ) : display;

		if ( checkDisplay === "inline" && jQuery.css( elem, "float" ) === "none" ) {
			style.display = "inline-block";
		}
	}

	if ( opts.overflow ) {
		style.overflow = "hidden";
		anim.always( function() {
			style.overflow = opts.overflow[ 0 ];
			style.overflowX = opts.overflow[ 1 ];
			style.overflowY = opts.overflow[ 2 ];
		} );
	}

	// show/hide pass
	for ( prop in props ) {
		value = props[ prop ];
		if ( rfxtypes.exec( value ) ) {
			delete props[ prop ];
			toggle = toggle || value === "toggle";
			if ( value === ( hidden ? "hide" : "show" ) ) {

				// If there is dataShow left over from a stopped hide or show
				// and we are going to proceed with show, we should pretend to be hidden
				if ( value === "show" && dataShow && dataShow[ prop ] !== undefined ) {
					hidden = true;
				} else {
					continue;
				}
			}
			orig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );

		// Any non-fx value stops us from restoring the original display value
		} else {
			display = undefined;
		}
	}

	if ( !jQuery.isEmptyObject( orig ) ) {
		if ( dataShow ) {
			if ( "hidden" in dataShow ) {
				hidden = dataShow.hidden;
			}
		} else {
			dataShow = dataPriv.access( elem, "fxshow", {} );
		}

		// Store state if its toggle - enables .stop().toggle() to "reverse"
		if ( toggle ) {
			dataShow.hidden = !hidden;
		}
		if ( hidden ) {
			jQuery( elem ).show();
		} else {
			anim.done( function() {
				jQuery( elem ).hide();
			} );
		}
		anim.done( function() {
			var prop;

			dataPriv.remove( elem, "fxshow" );
			for ( prop in orig ) {
				jQuery.style( elem, prop, orig[ prop ] );
			}
		} );
		for ( prop in orig ) {
			tween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );

			if ( !( prop in dataShow ) ) {
				dataShow[ prop ] = tween.start;
				if ( hidden ) {
					tween.end = tween.start;
					tween.start = prop === "width" || prop === "height" ? 1 : 0;
				}
			}
		}

	// If this is a noop like .hide().hide(), restore an overwritten display value
	} else if ( ( display === "none" ? defaultDisplay( elem.nodeName ) : display ) === "inline" ) {
		style.display = display;
	}
}

function propFilter( props, specialEasing ) {
	var index, name, easing, value, hooks;

	// camelCase, specialEasing and expand cssHook pass
	for ( index in props ) {
		name = jQuery.camelCase( index );
		easing = specialEasing[ name ];
		value = props[ index ];
		if ( jQuery.isArray( value ) ) {
			easing = value[ 1 ];
			value = props[ index ] = value[ 0 ];
		}

		if ( index !== name ) {
			props[ name ] = value;
			delete props[ index ];
		}

		hooks = jQuery.cssHooks[ name ];
		if ( hooks && "expand" in hooks ) {
			value = hooks.expand( value );
			delete props[ name ];

			// Not quite $.extend, this won't overwrite existing keys.
			// Reusing 'index' because we have the correct "name"
			for ( index in value ) {
				if ( !( index in props ) ) {
					props[ index ] = value[ index ];
					specialEasing[ index ] = easing;
				}
			}
		} else {
			specialEasing[ name ] = easing;
		}
	}
}

function Animation( elem, properties, options ) {
	var result,
		stopped,
		index = 0,
		length = Animation.prefilters.length,
		deferred = jQuery.Deferred().always( function() {

			// Don't match elem in the :animated selector
			delete tick.elem;
		} ),
		tick = function() {
			if ( stopped ) {
				return false;
			}
			var currentTime = fxNow || createFxNow(),
				remaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),

				// Support: Android 2.3
				// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)
				temp = remaining / animation.duration || 0,
				percent = 1 - temp,
				index = 0,
				length = animation.tweens.length;

			for ( ; index < length ; index++ ) {
				animation.tweens[ index ].run( percent );
			}

			deferred.notifyWith( elem, [ animation, percent, remaining ] );

			if ( percent < 1 && length ) {
				return remaining;
			} else {
				deferred.resolveWith( elem, [ animation ] );
				return false;
			}
		},
		animation = deferred.promise( {
			elem: elem,
			props: jQuery.extend( {}, properties ),
			opts: jQuery.extend( true, {
				specialEasing: {},
				easing: jQuery.easing._default
			}, options ),
			originalProperties: properties,
			originalOptions: options,
			startTime: fxNow || createFxNow(),
			duration: options.duration,
			tweens: [],
			createTween: function( prop, end ) {
				var tween = jQuery.Tween( elem, animation.opts, prop, end,
						animation.opts.specialEasing[ prop ] || animation.opts.easing );
				animation.tweens.push( tween );
				return tween;
			},
			stop: function( gotoEnd ) {
				var index = 0,

					// If we are going to the end, we want to run all the tweens
					// otherwise we skip this part
					length = gotoEnd ? animation.tweens.length : 0;
				if ( stopped ) {
					return this;
				}
				stopped = true;
				for ( ; index < length ; index++ ) {
					animation.tweens[ index ].run( 1 );
				}

				// Resolve when we played the last frame; otherwise, reject
				if ( gotoEnd ) {
					deferred.notifyWith( elem, [ animation, 1, 0 ] );
					deferred.resolveWith( elem, [ animation, gotoEnd ] );
				} else {
					deferred.rejectWith( elem, [ animation, gotoEnd ] );
				}
				return this;
			}
		} ),
		props = animation.props;

	propFilter( props, animation.opts.specialEasing );

	for ( ; index < length ; index++ ) {
		result = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );
		if ( result ) {
			if ( jQuery.isFunction( result.stop ) ) {
				jQuery._queueHooks( animation.elem, animation.opts.queue ).stop =
					jQuery.proxy( result.stop, result );
			}
			return result;
		}
	}

	jQuery.map( props, createTween, animation );

	if ( jQuery.isFunction( animation.opts.start ) ) {
		animation.opts.start.call( elem, animation );
	}

	jQuery.fx.timer(
		jQuery.extend( tick, {
			elem: elem,
			anim: animation,
			queue: animation.opts.queue
		} )
	);

	// attach callbacks from options
	return animation.progress( animation.opts.progress )
		.done( animation.opts.done, animation.opts.complete )
		.fail( animation.opts.fail )
		.always( animation.opts.always );
}

jQuery.Animation = jQuery.extend( Animation, {
	tweeners: {
		"*": [ function( prop, value ) {
			var tween = this.createTween( prop, value );
			adjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );
			return tween;
		} ]
	},

	tweener: function( props, callback ) {
		if ( jQuery.isFunction( props ) ) {
			callback = props;
			props = [ "*" ];
		} else {
			props = props.match( rnotwhite );
		}

		var prop,
			index = 0,
			length = props.length;

		for ( ; index < length ; index++ ) {
			prop = props[ index ];
			Animation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];
			Animation.tweeners[ prop ].unshift( callback );
		}
	},

	prefilters: [ defaultPrefilter ],

	prefilter: function( callback, prepend ) {
		if ( prepend ) {
			Animation.prefilters.unshift( callback );
		} else {
			Animation.prefilters.push( callback );
		}
	}
} );

jQuery.speed = function( speed, easing, fn ) {
	var opt = speed && typeof speed === "object" ? jQuery.extend( {}, speed ) : {
		complete: fn || !fn && easing ||
			jQuery.isFunction( speed ) && speed,
		duration: speed,
		easing: fn && easing || easing && !jQuery.isFunction( easing ) && easing
	};

	opt.duration = jQuery.fx.off ? 0 : typeof opt.duration === "number" ?
		opt.duration : opt.duration in jQuery.fx.speeds ?
			jQuery.fx.speeds[ opt.duration ] : jQuery.fx.speeds._default;

	// Normalize opt.queue - true/undefined/null -> "fx"
	if ( opt.queue == null || opt.queue === true ) {
		opt.queue = "fx";
	}

	// Queueing
	opt.old = opt.complete;

	opt.complete = function() {
		if ( jQuery.isFunction( opt.old ) ) {
			opt.old.call( this );
		}

		if ( opt.queue ) {
			jQuery.dequeue( this, opt.queue );
		}
	};

	return opt;
};

jQuery.fn.extend( {
	fadeTo: function( speed, to, easing, callback ) {

		// Show any hidden elements after setting opacity to 0
		return this.filter( isHidden ).css( "opacity", 0 ).show()

			// Animate to the value specified
			.end().animate( { opacity: to }, speed, easing, callback );
	},
	animate: function( prop, speed, easing, callback ) {
		var empty = jQuery.isEmptyObject( prop ),
			optall = jQuery.speed( speed, easing, callback ),
			doAnimation = function() {

				// Operate on a copy of prop so per-property easing won't be lost
				var anim = Animation( this, jQuery.extend( {}, prop ), optall );

				// Empty animations, or finishing resolves immediately
				if ( empty || dataPriv.get( this, "finish" ) ) {
					anim.stop( true );
				}
			};
			doAnimation.finish = doAnimation;

		return empty || optall.queue === false ?
			this.each( doAnimation ) :
			this.queue( optall.queue, doAnimation );
	},
	stop: function( type, clearQueue, gotoEnd ) {
		var stopQueue = function( hooks ) {
			var stop = hooks.stop;
			delete hooks.stop;
			stop( gotoEnd );
		};

		if ( typeof type !== "string" ) {
			gotoEnd = clearQueue;
			clearQueue = type;
			type = undefined;
		}
		if ( clearQueue && type !== false ) {
			this.queue( type || "fx", [] );
		}

		return this.each( function() {
			var dequeue = true,
				index = type != null && type + "queueHooks",
				timers = jQuery.timers,
				data = dataPriv.get( this );

			if ( index ) {
				if ( data[ index ] && data[ index ].stop ) {
					stopQueue( data[ index ] );
				}
			} else {
				for ( index in data ) {
					if ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {
						stopQueue( data[ index ] );
					}
				}
			}

			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this &&
					( type == null || timers[ index ].queue === type ) ) {

					timers[ index ].anim.stop( gotoEnd );
					dequeue = false;
					timers.splice( index, 1 );
				}
			}

			// Start the next in the queue if the last step wasn't forced.
			// Timers currently will call their complete callbacks, which
			// will dequeue but only if they were gotoEnd.
			if ( dequeue || !gotoEnd ) {
				jQuery.dequeue( this, type );
			}
		} );
	},
	finish: function( type ) {
		if ( type !== false ) {
			type = type || "fx";
		}
		return this.each( function() {
			var index,
				data = dataPriv.get( this ),
				queue = data[ type + "queue" ],
				hooks = data[ type + "queueHooks" ],
				timers = jQuery.timers,
				length = queue ? queue.length : 0;

			// Enable finishing flag on private data
			data.finish = true;

			// Empty the queue first
			jQuery.queue( this, type, [] );

			if ( hooks && hooks.stop ) {
				hooks.stop.call( this, true );
			}

			// Look for any active animations, and finish them
			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this && timers[ index ].queue === type ) {
					timers[ index ].anim.stop( true );
					timers.splice( index, 1 );
				}
			}

			// Look for any animations in the old queue and finish them
			for ( index = 0; index < length; index++ ) {
				if ( queue[ index ] && queue[ index ].finish ) {
					queue[ index ].finish.call( this );
				}
			}

			// Turn off finishing flag
			delete data.finish;
		} );
	}
} );

jQuery.each( [ "toggle", "show", "hide" ], function( i, name ) {
	var cssFn = jQuery.fn[ name ];
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return speed == null || typeof speed === "boolean" ?
			cssFn.apply( this, arguments ) :
			this.animate( genFx( name, true ), speed, easing, callback );
	};
} );

// Generate shortcuts for custom animations
jQuery.each( {
	slideDown: genFx( "show" ),
	slideUp: genFx( "hide" ),
	slideToggle: genFx( "toggle" ),
	fadeIn: { opacity: "show" },
	fadeOut: { opacity: "hide" },
	fadeToggle: { opacity: "toggle" }
}, function( name, props ) {
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return this.animate( props, speed, easing, callback );
	};
} );

jQuery.timers = [];
jQuery.fx.tick = function() {
	var timer,
		i = 0,
		timers = jQuery.timers;

	fxNow = jQuery.now();

	for ( ; i < timers.length; i++ ) {
		timer = timers[ i ];

		// Checks the timer has not already been removed
		if ( !timer() && timers[ i ] === timer ) {
			timers.splice( i--, 1 );
		}
	}

	if ( !timers.length ) {
		jQuery.fx.stop();
	}
	fxNow = undefined;
};

jQuery.fx.timer = function( timer ) {
	jQuery.timers.push( timer );
	if ( timer() ) {
		jQuery.fx.start();
	} else {
		jQuery.timers.pop();
	}
};

jQuery.fx.interval = 13;
jQuery.fx.start = function() {
	if ( !timerId ) {
		timerId = window.setInterval( jQuery.fx.tick, jQuery.fx.interval );
	}
};

jQuery.fx.stop = function() {
	window.clearInterval( timerId );

	timerId = null;
};

jQuery.fx.speeds = {
	slow: 600,
	fast: 200,

	// Default speed
	_default: 400
};


// Based off of the plugin by Clint Helfers, with permission.
// http://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/
jQuery.fn.delay = function( time, type ) {
	time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;
	type = type || "fx";

	return this.queue( type, function( next, hooks ) {
		var timeout = window.setTimeout( next, time );
		hooks.stop = function() {
			window.clearTimeout( timeout );
		};
	} );
};


( function() {
	var input = document.createElement( "input" ),
		select = document.createElement( "select" ),
		opt = select.appendChild( document.createElement( "option" ) );

	input.type = "checkbox";

	// Support: iOS<=5.1, Android<=4.2+
	// Default value for a checkbox should be "on"
	support.checkOn = input.value !== "";

	// Support: IE<=11+
	// Must access selectedIndex to make default options select
	support.optSelected = opt.selected;

	// Support: Android<=2.3
	// Options inside disabled selects are incorrectly marked as disabled
	select.disabled = true;
	support.optDisabled = !opt.disabled;

	// Support: IE<=11+
	// An input loses its value after becoming a radio
	input = document.createElement( "input" );
	input.value = "t";
	input.type = "radio";
	support.radioValue = input.value === "t";
} )();


var boolHook,
	attrHandle = jQuery.expr.attrHandle;

jQuery.fn.extend( {
	attr: function( name, value ) {
		return access( this, jQuery.attr, name, value, arguments.length > 1 );
	},

	removeAttr: function( name ) {
		return this.each( function() {
			jQuery.removeAttr( this, name );
		} );
	}
} );

jQuery.extend( {
	attr: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;

		// Don't get/set attributes on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		// Fallback to prop when attributes are not supported
		if ( typeof elem.getAttribute === "undefined" ) {
			return jQuery.prop( elem, name, value );
		}

		// All attributes are lowercase
		// Grab necessary hook if one is defined
		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {
			name = name.toLowerCase();
			hooks = jQuery.attrHooks[ name ] ||
				( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );
		}

		if ( value !== undefined ) {
			if ( value === null ) {
				jQuery.removeAttr( elem, name );
				return;
			}

			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}

			elem.setAttribute( name, value + "" );
			return value;
		}

		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}

		ret = jQuery.find.attr( elem, name );

		// Non-existent attributes return null, we normalize to undefined
		return ret == null ? undefined : ret;
	},

	attrHooks: {
		type: {
			set: function( elem, value ) {
				if ( !support.radioValue && value === "radio" &&
					jQuery.nodeName( elem, "input" ) ) {
					var val = elem.value;
					elem.setAttribute( "type", value );
					if ( val ) {
						elem.value = val;
					}
					return value;
				}
			}
		}
	},

	removeAttr: function( elem, value ) {
		var name, propName,
			i = 0,
			attrNames = value && value.match( rnotwhite );

		if ( attrNames && elem.nodeType === 1 ) {
			while ( ( name = attrNames[ i++ ] ) ) {
				propName = jQuery.propFix[ name ] || name;

				// Boolean attributes get special treatment (#10870)
				if ( jQuery.expr.match.bool.test( name ) ) {

					// Set corresponding property to false
					elem[ propName ] = false;
				}

				elem.removeAttribute( name );
			}
		}
	}
} );

// Hooks for boolean attributes
boolHook = {
	set: function( elem, value, name ) {
		if ( value === false ) {

			// Remove boolean attributes when set to false
			jQuery.removeAttr( elem, name );
		} else {
			elem.setAttribute( name, name );
		}
		return name;
	}
};
jQuery.each( jQuery.expr.match.bool.source.match( /\w+/g ), function( i, name ) {
	var getter = attrHandle[ name ] || jQuery.find.attr;

	attrHandle[ name ] = function( elem, name, isXML ) {
		var ret, handle;
		if ( !isXML ) {

			// Avoid an infinite loop by temporarily removing this function from the getter
			handle = attrHandle[ name ];
			attrHandle[ name ] = ret;
			ret = getter( elem, name, isXML ) != null ?
				name.toLowerCase() :
				null;
			attrHandle[ name ] = handle;
		}
		return ret;
	};
} );




var rfocusable = /^(?:input|select|textarea|button)$/i,
	rclickable = /^(?:a|area)$/i;

jQuery.fn.extend( {
	prop: function( name, value ) {
		return access( this, jQuery.prop, name, value, arguments.length > 1 );
	},

	removeProp: function( name ) {
		return this.each( function() {
			delete this[ jQuery.propFix[ name ] || name ];
		} );
	}
} );

jQuery.extend( {
	prop: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;

		// Don't get/set properties on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {

			// Fix name and attach hooks
			name = jQuery.propFix[ name ] || name;
			hooks = jQuery.propHooks[ name ];
		}

		if ( value !== undefined ) {
			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}

			return ( elem[ name ] = value );
		}

		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}

		return elem[ name ];
	},

	propHooks: {
		tabIndex: {
			get: function( elem ) {

				// elem.tabIndex doesn't always return the
				// correct value when it hasn't been explicitly set
				// http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/
				// Use proper attribute retrieval(#12072)
				var tabindex = jQuery.find.attr( elem, "tabindex" );

				return tabindex ?
					parseInt( tabindex, 10 ) :
					rfocusable.test( elem.nodeName ) ||
						rclickable.test( elem.nodeName ) && elem.href ?
							0 :
							-1;
			}
		}
	},

	propFix: {
		"for": "htmlFor",
		"class": "className"
	}
} );

// Support: IE <=11 only
// Accessing the selectedIndex property
// forces the browser to respect setting selected
// on the option
// The getter ensures a default option is selected
// when in an optgroup
if ( !support.optSelected ) {
	jQuery.propHooks.selected = {
		get: function( elem ) {
			var parent = elem.parentNode;
			if ( parent && parent.parentNode ) {
				parent.parentNode.selectedIndex;
			}
			return null;
		},
		set: function( elem ) {
			var parent = elem.parentNode;
			if ( parent ) {
				parent.selectedIndex;

				if ( parent.parentNode ) {
					parent.parentNode.selectedIndex;
				}
			}
		}
	};
}

jQuery.each( [
	"tabIndex",
	"readOnly",
	"maxLength",
	"cellSpacing",
	"cellPadding",
	"rowSpan",
	"colSpan",
	"useMap",
	"frameBorder",
	"contentEditable"
], function() {
	jQuery.propFix[ this.toLowerCase() ] = this;
} );




var rclass = /[\t\r\n\f]/g;

function getClass( elem ) {
	return elem.getAttribute && elem.getAttribute( "class" ) || "";
}

jQuery.fn.extend( {
	addClass: function( value ) {
		var classes, elem, cur, curValue, clazz, j, finalValue,
			i = 0;

		if ( jQuery.isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).addClass( value.call( this, j, getClass( this ) ) );
			} );
		}

		if ( typeof value === "string" && value ) {
			classes = value.match( rnotwhite ) || [];

			while ( ( elem = this[ i++ ] ) ) {
				curValue = getClass( elem );
				cur = elem.nodeType === 1 &&
					( " " + curValue + " " ).replace( rclass, " " );

				if ( cur ) {
					j = 0;
					while ( ( clazz = classes[ j++ ] ) ) {
						if ( cur.indexOf( " " + clazz + " " ) < 0 ) {
							cur += clazz + " ";
						}
					}

					// Only assign if different to avoid unneeded rendering.
					finalValue = jQuery.trim( cur );
					if ( curValue !== finalValue ) {
						elem.setAttribute( "class", finalValue );
					}
				}
			}
		}

		return this;
	},

	removeClass: function( value ) {
		var classes, elem, cur, curValue, clazz, j, finalValue,
			i = 0;

		if ( jQuery.isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );
			} );
		}

		if ( !arguments.length ) {
			return this.attr( "class", "" );
		}

		if ( typeof value === "string" && value ) {
			classes = value.match( rnotwhite ) || [];

			while ( ( elem = this[ i++ ] ) ) {
				curValue = getClass( elem );

				// This expression is here for better compressibility (see addClass)
				cur = elem.nodeType === 1 &&
					( " " + curValue + " " ).replace( rclass, " " );

				if ( cur ) {
					j = 0;
					while ( ( clazz = classes[ j++ ] ) ) {

						// Remove *all* instances
						while ( cur.indexOf( " " + clazz + " " ) > -1 ) {
							cur = cur.replace( " " + clazz + " ", " " );
						}
					}

					// Only assign if different to avoid unneeded rendering.
					finalValue = jQuery.trim( cur );
					if ( curValue !== finalValue ) {
						elem.setAttribute( "class", finalValue );
					}
				}
			}
		}

		return this;
	},

	toggleClass: function( value, stateVal ) {
		var type = typeof value;

		if ( typeof stateVal === "boolean" && type === "string" ) {
			return stateVal ? this.addClass( value ) : this.removeClass( value );
		}

		if ( jQuery.isFunction( value ) ) {
			return this.each( function( i ) {
				jQuery( this ).toggleClass(
					value.call( this, i, getClass( this ), stateVal ),
					stateVal
				);
			} );
		}

		return this.each( function() {
			var className, i, self, classNames;

			if ( type === "string" ) {

				// Toggle individual class names
				i = 0;
				self = jQuery( this );
				classNames = value.match( rnotwhite ) || [];

				while ( ( className = classNames[ i++ ] ) ) {

					// Check each className given, space separated list
					if ( self.hasClass( className ) ) {
						self.removeClass( className );
					} else {
						self.addClass( className );
					}
				}

			// Toggle whole class name
			} else if ( value === undefined || type === "boolean" ) {
				className = getClass( this );
				if ( className ) {

					// Store className if set
					dataPriv.set( this, "__className__", className );
				}

				// If the element has a class name or if we're passed `false`,
				// then remove the whole classname (if there was one, the above saved it).
				// Otherwise bring back whatever was previously saved (if anything),
				// falling back to the empty string if nothing was stored.
				if ( this.setAttribute ) {
					this.setAttribute( "class",
						className || value === false ?
						"" :
						dataPriv.get( this, "__className__" ) || ""
					);
				}
			}
		} );
	},

	hasClass: function( selector ) {
		var className, elem,
			i = 0;

		className = " " + selector + " ";
		while ( ( elem = this[ i++ ] ) ) {
			if ( elem.nodeType === 1 &&
				( " " + getClass( elem ) + " " ).replace( rclass, " " )
					.indexOf( className ) > -1
			) {
				return true;
			}
		}

		return false;
	}
} );




var rreturn = /\r/g,
	rspaces = /[\x20\t\r\n\f]+/g;

jQuery.fn.extend( {
	val: function( value ) {
		var hooks, ret, isFunction,
			elem = this[ 0 ];

		if ( !arguments.length ) {
			if ( elem ) {
				hooks = jQuery.valHooks[ elem.type ] ||
					jQuery.valHooks[ elem.nodeName.toLowerCase() ];

				if ( hooks &&
					"get" in hooks &&
					( ret = hooks.get( elem, "value" ) ) !== undefined
				) {
					return ret;
				}

				ret = elem.value;

				return typeof ret === "string" ?

					// Handle most common string cases
					ret.replace( rreturn, "" ) :

					// Handle cases where value is null/undef or number
					ret == null ? "" : ret;
			}

			return;
		}

		isFunction = jQuery.isFunction( value );

		return this.each( function( i ) {
			var val;

			if ( this.nodeType !== 1 ) {
				return;
			}

			if ( isFunction ) {
				val = value.call( this, i, jQuery( this ).val() );
			} else {
				val = value;
			}

			// Treat null/undefined as ""; convert numbers to string
			if ( val == null ) {
				val = "";

			} else if ( typeof val === "number" ) {
				val += "";

			} else if ( jQuery.isArray( val ) ) {
				val = jQuery.map( val, function( value ) {
					return value == null ? "" : value + "";
				} );
			}

			hooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];

			// If set returns undefined, fall back to normal setting
			if ( !hooks || !( "set" in hooks ) || hooks.set( this, val, "value" ) === undefined ) {
				this.value = val;
			}
		} );
	}
} );

jQuery.extend( {
	valHooks: {
		option: {
			get: function( elem ) {

				var val = jQuery.find.attr( elem, "value" );
				return val != null ?
					val :

					// Support: IE10-11+
					// option.text throws exceptions (#14686, #14858)
					// Strip and collapse whitespace
					// https://html.spec.whatwg.org/#strip-and-collapse-whitespace
					jQuery.trim( jQuery.text( elem ) ).replace( rspaces, " " );
			}
		},
		select: {
			get: function( elem ) {
				var value, option,
					options = elem.options,
					index = elem.selectedIndex,
					one = elem.type === "select-one" || index < 0,
					values = one ? null : [],
					max = one ? index + 1 : options.length,
					i = index < 0 ?
						max :
						one ? index : 0;

				// Loop through all the selected options
				for ( ; i < max; i++ ) {
					option = options[ i ];

					// IE8-9 doesn't update selected after form reset (#2551)
					if ( ( option.selected || i === index ) &&

							// Don't return options that are disabled or in a disabled optgroup
							( support.optDisabled ?
								!option.disabled : option.getAttribute( "disabled" ) === null ) &&
							( !option.parentNode.disabled ||
								!jQuery.nodeName( option.parentNode, "optgroup" ) ) ) {

						// Get the specific value for the option
						value = jQuery( option ).val();

						// We don't need an array for one selects
						if ( one ) {
							return value;
						}

						// Multi-Selects return an array
						values.push( value );
					}
				}

				return values;
			},

			set: function( elem, value ) {
				var optionSet, option,
					options = elem.options,
					values = jQuery.makeArray( value ),
					i = options.length;

				while ( i-- ) {
					option = options[ i ];
					if ( option.selected =
						jQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1
					) {
						optionSet = true;
					}
				}

				// Force browsers to behave consistently when non-matching value is set
				if ( !optionSet ) {
					elem.selectedIndex = -1;
				}
				return values;
			}
		}
	}
} );

// Radios and checkboxes getter/setter
jQuery.each( [ "radio", "checkbox" ], function() {
	jQuery.valHooks[ this ] = {
		set: function( elem, value ) {
			if ( jQuery.isArray( value ) ) {
				return ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );
			}
		}
	};
	if ( !support.checkOn ) {
		jQuery.valHooks[ this ].get = function( elem ) {
			return elem.getAttribute( "value" ) === null ? "on" : elem.value;
		};
	}
} );




// Return jQuery for attributes-only inclusion


var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/;

jQuery.extend( jQuery.event, {

	trigger: function( event, data, elem, onlyHandlers ) {

		var i, cur, tmp, bubbleType, ontype, handle, special,
			eventPath = [ elem || document ],
			type = hasOwn.call( event, "type" ) ? event.type : event,
			namespaces = hasOwn.call( event, "namespace" ) ? event.namespace.split( "." ) : [];

		cur = tmp = elem = elem || document;

		// Don't do events on text and comment nodes
		if ( elem.nodeType === 3 || elem.nodeType === 8 ) {
			return;
		}

		// focus/blur morphs to focusin/out; ensure we're not firing them right now
		if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {
			return;
		}

		if ( type.indexOf( "." ) > -1 ) {

			// Namespaced trigger; create a regexp to match event type in handle()
			namespaces = type.split( "." );
			type = namespaces.shift();
			namespaces.sort();
		}
		ontype = type.indexOf( ":" ) < 0 && "on" + type;

		// Caller can pass in a jQuery.Event object, Object, or just an event type string
		event = event[ jQuery.expando ] ?
			event :
			new jQuery.Event( type, typeof event === "object" && event );

		// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)
		event.isTrigger = onlyHandlers ? 2 : 3;
		event.namespace = namespaces.join( "." );
		event.rnamespace = event.namespace ?
			new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" ) :
			null;

		// Clean up the event in case it is being reused
		event.result = undefined;
		if ( !event.target ) {
			event.target = elem;
		}

		// Clone any incoming data and prepend the event, creating the handler arg list
		data = data == null ?
			[ event ] :
			jQuery.makeArray( data, [ event ] );

		// Allow special events to draw outside the lines
		special = jQuery.event.special[ type ] || {};
		if ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {
			return;
		}

		// Determine event propagation path in advance, per W3C events spec (#9951)
		// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)
		if ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {

			bubbleType = special.delegateType || type;
			if ( !rfocusMorph.test( bubbleType + type ) ) {
				cur = cur.parentNode;
			}
			for ( ; cur; cur = cur.parentNode ) {
				eventPath.push( cur );
				tmp = cur;
			}

			// Only add window if we got to document (e.g., not plain obj or detached DOM)
			if ( tmp === ( elem.ownerDocument || document ) ) {
				eventPath.push( tmp.defaultView || tmp.parentWindow || window );
			}
		}

		// Fire handlers on the event path
		i = 0;
		while ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {

			event.type = i > 1 ?
				bubbleType :
				special.bindType || type;

			// jQuery handler
			handle = ( dataPriv.get( cur, "events" ) || {} )[ event.type ] &&
				dataPriv.get( cur, "handle" );
			if ( handle ) {
				handle.apply( cur, data );
			}

			// Native handler
			handle = ontype && cur[ ontype ];
			if ( handle && handle.apply && acceptData( cur ) ) {
				event.result = handle.apply( cur, data );
				if ( event.result === false ) {
					event.preventDefault();
				}
			}
		}
		event.type = type;

		// If nobody prevented the default action, do it now
		if ( !onlyHandlers && !event.isDefaultPrevented() ) {

			if ( ( !special._default ||
				special._default.apply( eventPath.pop(), data ) === false ) &&
				acceptData( elem ) ) {

				// Call a native DOM method on the target with the same name name as the event.
				// Don't do default actions on window, that's where global variables be (#6170)
				if ( ontype && jQuery.isFunction( elem[ type ] ) && !jQuery.isWindow( elem ) ) {

					// Don't re-trigger an onFOO event when we call its FOO() method
					tmp = elem[ ontype ];

					if ( tmp ) {
						elem[ ontype ] = null;
					}

					// Prevent re-triggering of the same event, since we already bubbled it above
					jQuery.event.triggered = type;
					elem[ type ]();
					jQuery.event.triggered = undefined;

					if ( tmp ) {
						elem[ ontype ] = tmp;
					}
				}
			}
		}

		return event.result;
	},

	// Piggyback on a donor event to simulate a different one
	// Used only for `focus(in | out)` events
	simulate: function( type, elem, event ) {
		var e = jQuery.extend(
			new jQuery.Event(),
			event,
			{
				type: type,
				isSimulated: true
			}
		);

		jQuery.event.trigger( e, null, elem );
	}

} );

jQuery.fn.extend( {

	trigger: function( type, data ) {
		return this.each( function() {
			jQuery.event.trigger( type, data, this );
		} );
	},
	triggerHandler: function( type, data ) {
		var elem = this[ 0 ];
		if ( elem ) {
			return jQuery.event.trigger( type, data, elem, true );
		}
	}
} );


jQuery.each( ( "blur focus focusin focusout load resize scroll unload click dblclick " +
	"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
	"change select submit keydown keypress keyup error contextmenu" ).split( " " ),
	function( i, name ) {

	// Handle event binding
	jQuery.fn[ name ] = function( data, fn ) {
		return arguments.length > 0 ?
			this.on( name, null, data, fn ) :
			this.trigger( name );
	};
} );

jQuery.fn.extend( {
	hover: function( fnOver, fnOut ) {
		return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );
	}
} );




support.focusin = "onfocusin" in window;


// Support: Firefox
// Firefox doesn't have focus(in | out) events
// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787
//
// Support: Chrome, Safari
// focus(in | out) events fire after focus & blur events,
// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order
// Related ticket - https://code.google.com/p/chromium/issues/detail?id=449857
if ( !support.focusin ) {
	jQuery.each( { focus: "focusin", blur: "focusout" }, function( orig, fix ) {

		// Attach a single capturing handler on the document while someone wants focusin/focusout
		var handler = function( event ) {
			jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );
		};

		jQuery.event.special[ fix ] = {
			setup: function() {
				var doc = this.ownerDocument || this,
					attaches = dataPriv.access( doc, fix );

				if ( !attaches ) {
					doc.addEventListener( orig, handler, true );
				}
				dataPriv.access( doc, fix, ( attaches || 0 ) + 1 );
			},
			teardown: function() {
				var doc = this.ownerDocument || this,
					attaches = dataPriv.access( doc, fix ) - 1;

				if ( !attaches ) {
					doc.removeEventListener( orig, handler, true );
					dataPriv.remove( doc, fix );

				} else {
					dataPriv.access( doc, fix, attaches );
				}
			}
		};
	} );
}
var location = window.location;

var nonce = jQuery.now();

var rquery = ( /\?/ );



// Support: Android 2.3
// Workaround failure to string-cast null input
jQuery.parseJSON = function( data ) {
	return JSON.parse( data + "" );
};


// Cross-browser xml parsing
jQuery.parseXML = function( data ) {
	var xml;
	if ( !data || typeof data !== "string" ) {
		return null;
	}

	// Support: IE9
	try {
		xml = ( new window.DOMParser() ).parseFromString( data, "text/xml" );
	} catch ( e ) {
		xml = undefined;
	}

	if ( !xml || xml.getElementsByTagName( "parsererror" ).length ) {
		jQuery.error( "Invalid XML: " + data );
	}
	return xml;
};


var
	rhash = /#.*$/,
	rts = /([?&])_=[^&]*/,
	rheaders = /^(.*?):[ \t]*([^\r\n]*)$/mg,

	// #7653, #8125, #8152: local protocol detection
	rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
	rnoContent = /^(?:GET|HEAD)$/,
	rprotocol = /^\/\//,

	/* Prefilters
	 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
	 * 2) These are called:
	 *    - BEFORE asking for a transport
	 *    - AFTER param serialization (s.data is a string if s.processData is true)
	 * 3) key is the dataType
	 * 4) the catchall symbol "*" can be used
	 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
	 */
	prefilters = {},

	/* Transports bindings
	 * 1) key is the dataType
	 * 2) the catchall symbol "*" can be used
	 * 3) selection will start with transport dataType and THEN go to "*" if needed
	 */
	transports = {},

	// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
	allTypes = "*/".concat( "*" ),

	// Anchor tag for parsing the document origin
	originAnchor = document.createElement( "a" );
	originAnchor.href = location.href;

// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
function addToPrefiltersOrTransports( structure ) {

	// dataTypeExpression is optional and defaults to "*"
	return function( dataTypeExpression, func ) {

		if ( typeof dataTypeExpression !== "string" ) {
			func = dataTypeExpression;
			dataTypeExpression = "*";
		}

		var dataType,
			i = 0,
			dataTypes = dataTypeExpression.toLowerCase().match( rnotwhite ) || [];

		if ( jQuery.isFunction( func ) ) {

			// For each dataType in the dataTypeExpression
			while ( ( dataType = dataTypes[ i++ ] ) ) {

				// Prepend if requested
				if ( dataType[ 0 ] === "+" ) {
					dataType = dataType.slice( 1 ) || "*";
					( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );

				// Otherwise append
				} else {
					( structure[ dataType ] = structure[ dataType ] || [] ).push( func );
				}
			}
		}
	};
}

// Base inspection function for prefilters and transports
function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {

	var inspected = {},
		seekingTransport = ( structure === transports );

	function inspect( dataType ) {
		var selected;
		inspected[ dataType ] = true;
		jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
			var dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );
			if ( typeof dataTypeOrTransport === "string" &&
				!seekingTransport && !inspected[ dataTypeOrTransport ] ) {

				options.dataTypes.unshift( dataTypeOrTransport );
				inspect( dataTypeOrTransport );
				return false;
			} else if ( seekingTransport ) {
				return !( selected = dataTypeOrTransport );
			}
		} );
		return selected;
	}

	return inspect( options.dataTypes[ 0 ] ) || !inspected[ "*" ] && inspect( "*" );
}

// A special extend for ajax options
// that takes "flat" options (not to be deep extended)
// Fixes #9887
function ajaxExtend( target, src ) {
	var key, deep,
		flatOptions = jQuery.ajaxSettings.flatOptions || {};

	for ( key in src ) {
		if ( src[ key ] !== undefined ) {
			( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];
		}
	}
	if ( deep ) {
		jQuery.extend( true, target, deep );
	}

	return target;
}

/* Handles responses to an ajax request:
 * - finds the right dataType (mediates between content-type and expected dataType)
 * - returns the corresponding response
 */
function ajaxHandleResponses( s, jqXHR, responses ) {

	var ct, type, finalDataType, firstDataType,
		contents = s.contents,
		dataTypes = s.dataTypes;

	// Remove auto dataType and get content-type in the process
	while ( dataTypes[ 0 ] === "*" ) {
		dataTypes.shift();
		if ( ct === undefined ) {
			ct = s.mimeType || jqXHR.getResponseHeader( "Content-Type" );
		}
	}

	// Check if we're dealing with a known content-type
	if ( ct ) {
		for ( type in contents ) {
			if ( contents[ type ] && contents[ type ].test( ct ) ) {
				dataTypes.unshift( type );
				break;
			}
		}
	}

	// Check to see if we have a response for the expected dataType
	if ( dataTypes[ 0 ] in responses ) {
		finalDataType = dataTypes[ 0 ];
	} else {

		// Try convertible dataTypes
		for ( type in responses ) {
			if ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[ 0 ] ] ) {
				finalDataType = type;
				break;
			}
			if ( !firstDataType ) {
				firstDataType = type;
			}
		}

		// Or just use first one
		finalDataType = finalDataType || firstDataType;
	}

	// If we found a dataType
	// We add the dataType to the list if needed
	// and return the corresponding response
	if ( finalDataType ) {
		if ( finalDataType !== dataTypes[ 0 ] ) {
			dataTypes.unshift( finalDataType );
		}
		return responses[ finalDataType ];
	}
}

/* Chain conversions given the request and the original response
 * Also sets the responseXXX fields on the jqXHR instance
 */
function ajaxConvert( s, response, jqXHR, isSuccess ) {
	var conv2, current, conv, tmp, prev,
		converters = {},

		// Work with a copy of dataTypes in case we need to modify it for conversion
		dataTypes = s.dataTypes.slice();

	// Create converters map with lowercased keys
	if ( dataTypes[ 1 ] ) {
		for ( conv in s.converters ) {
			converters[ conv.toLowerCase() ] = s.converters[ conv ];
		}
	}

	current = dataTypes.shift();

	// Convert to each sequential dataType
	while ( current ) {

		if ( s.responseFields[ current ] ) {
			jqXHR[ s.responseFields[ current ] ] = response;
		}

		// Apply the dataFilter if provided
		if ( !prev && isSuccess && s.dataFilter ) {
			response = s.dataFilter( response, s.dataType );
		}

		prev = current;
		current = dataTypes.shift();

		if ( current ) {

		// There's only work to do if current dataType is non-auto
			if ( current === "*" ) {

				current = prev;

			// Convert response if prev dataType is non-auto and differs from current
			} else if ( prev !== "*" && prev !== current ) {

				// Seek a direct converter
				conv = converters[ prev + " " + current ] || converters[ "* " + current ];

				// If none found, seek a pair
				if ( !conv ) {
					for ( conv2 in converters ) {

						// If conv2 outputs current
						tmp = conv2.split( " " );
						if ( tmp[ 1 ] === current ) {

							// If prev can be converted to accepted input
							conv = converters[ prev + " " + tmp[ 0 ] ] ||
								converters[ "* " + tmp[ 0 ] ];
							if ( conv ) {

								// Condense equivalence converters
								if ( conv === true ) {
									conv = converters[ conv2 ];

								// Otherwise, insert the intermediate dataType
								} else if ( converters[ conv2 ] !== true ) {
									current = tmp[ 0 ];
									dataTypes.unshift( tmp[ 1 ] );
								}
								break;
							}
						}
					}
				}

				// Apply converter (if not an equivalence)
				if ( conv !== true ) {

					// Unless errors are allowed to bubble, catch and return them
					if ( conv && s.throws ) {
						response = conv( response );
					} else {
						try {
							response = conv( response );
						} catch ( e ) {
							return {
								state: "parsererror",
								error: conv ? e : "No conversion from " + prev + " to " + current
							};
						}
					}
				}
			}
		}
	}

	return { state: "success", data: response };
}

jQuery.extend( {

	// Counter for holding the number of active queries
	active: 0,

	// Last-Modified header cache for next request
	lastModified: {},
	etag: {},

	ajaxSettings: {
		url: location.href,
		type: "GET",
		isLocal: rlocalProtocol.test( location.protocol ),
		global: true,
		processData: true,
		async: true,
		contentType: "application/x-www-form-urlencoded; charset=UTF-8",
		/*
		timeout: 0,
		data: null,
		dataType: null,
		username: null,
		password: null,
		cache: null,
		throws: false,
		traditional: false,
		headers: {},
		*/

		accepts: {
			"*": allTypes,
			text: "text/plain",
			html: "text/html",
			xml: "application/xml, text/xml",
			json: "application/json, text/javascript"
		},

		contents: {
			xml: /\bxml\b/,
			html: /\bhtml/,
			json: /\bjson\b/
		},

		responseFields: {
			xml: "responseXML",
			text: "responseText",
			json: "responseJSON"
		},

		// Data converters
		// Keys separate source (or catchall "*") and destination types with a single space
		converters: {

			// Convert anything to text
			"* text": String,

			// Text to html (true = no transformation)
			"text html": true,

			// Evaluate text as a json expression
			"text json": jQuery.parseJSON,

			// Parse text as xml
			"text xml": jQuery.parseXML
		},

		// For options that shouldn't be deep extended:
		// you can add your own custom options here if
		// and when you create one that shouldn't be
		// deep extended (see ajaxExtend)
		flatOptions: {
			url: true,
			context: true
		}
	},

	// Creates a full fledged settings object into target
	// with both ajaxSettings and settings fields.
	// If target is omitted, writes into ajaxSettings.
	ajaxSetup: function( target, settings ) {
		return settings ?

			// Building a settings object
			ajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :

			// Extending ajaxSettings
			ajaxExtend( jQuery.ajaxSettings, target );
	},

	ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),
	ajaxTransport: addToPrefiltersOrTransports( transports ),

	// Main method
	ajax: function( url, options ) {

		// If url is an object, simulate pre-1.5 signature
		if ( typeof url === "object" ) {
			options = url;
			url = undefined;
		}

		// Force options to be an object
		options = options || {};

		var transport,

			// URL without anti-cache param
			cacheURL,

			// Response headers
			responseHeadersString,
			responseHeaders,

			// timeout handle
			timeoutTimer,

			// Url cleanup var
			urlAnchor,

			// To know if global events are to be dispatched
			fireGlobals,

			// Loop variable
			i,

			// Create the final options object
			s = jQuery.ajaxSetup( {}, options ),

			// Callbacks context
			callbackContext = s.context || s,

			// Context for global events is callbackContext if it is a DOM node or jQuery collection
			globalEventContext = s.context &&
				( callbackContext.nodeType || callbackContext.jquery ) ?
					jQuery( callbackContext ) :
					jQuery.event,

			// Deferreds
			deferred = jQuery.Deferred(),
			completeDeferred = jQuery.Callbacks( "once memory" ),

			// Status-dependent callbacks
			statusCode = s.statusCode || {},

			// Headers (they are sent all at once)
			requestHeaders = {},
			requestHeadersNames = {},

			// The jqXHR state
			state = 0,

			// Default abort message
			strAbort = "canceled",

			// Fake xhr
			jqXHR = {
				readyState: 0,

				// Builds headers hashtable if needed
				getResponseHeader: function( key ) {
					var match;
					if ( state === 2 ) {
						if ( !responseHeaders ) {
							responseHeaders = {};
							while ( ( match = rheaders.exec( responseHeadersString ) ) ) {
								responseHeaders[ match[ 1 ].toLowerCase() ] = match[ 2 ];
							}
						}
						match = responseHeaders[ key.toLowerCase() ];
					}
					return match == null ? null : match;
				},

				// Raw string
				getAllResponseHeaders: function() {
					return state === 2 ? responseHeadersString : null;
				},

				// Caches the header
				setRequestHeader: function( name, value ) {
					var lname = name.toLowerCase();
					if ( !state ) {
						name = requestHeadersNames[ lname ] = requestHeadersNames[ lname ] || name;
						requestHeaders[ name ] = value;
					}
					return this;
				},

				// Overrides response content-type header
				overrideMimeType: function( type ) {
					if ( !state ) {
						s.mimeType = type;
					}
					return this;
				},

				// Status-dependent callbacks
				statusCode: function( map ) {
					var code;
					if ( map ) {
						if ( state < 2 ) {
							for ( code in map ) {

								// Lazy-add the new callback in a way that preserves old ones
								statusCode[ code ] = [ statusCode[ code ], map[ code ] ];
							}
						} else {

							// Execute the appropriate callbacks
							jqXHR.always( map[ jqXHR.status ] );
						}
					}
					return this;
				},

				// Cancel the request
				abort: function( statusText ) {
					var finalText = statusText || strAbort;
					if ( transport ) {
						transport.abort( finalText );
					}
					done( 0, finalText );
					return this;
				}
			};

		// Attach deferreds
		deferred.promise( jqXHR ).complete = completeDeferred.add;
		jqXHR.success = jqXHR.done;
		jqXHR.error = jqXHR.fail;

		// Remove hash character (#7531: and string promotion)
		// Add protocol if not provided (prefilters might expect it)
		// Handle falsy url in the settings object (#10093: consistency with old signature)
		// We also use the url parameter if available
		s.url = ( ( url || s.url || location.href ) + "" ).replace( rhash, "" )
			.replace( rprotocol, location.protocol + "//" );

		// Alias method option to type as per ticket #12004
		s.type = options.method || options.type || s.method || s.type;

		// Extract dataTypes list
		s.dataTypes = jQuery.trim( s.dataType || "*" ).toLowerCase().match( rnotwhite ) || [ "" ];

		// A cross-domain request is in order when the origin doesn't match the current origin.
		if ( s.crossDomain == null ) {
			urlAnchor = document.createElement( "a" );

			// Support: IE8-11+
			// IE throws exception if url is malformed, e.g. http://example.com:80x/
			try {
				urlAnchor.href = s.url;

				// Support: IE8-11+
				// Anchor's host property isn't correctly set when s.url is relative
				urlAnchor.href = urlAnchor.href;
				s.crossDomain = originAnchor.protocol + "//" + originAnchor.host !==
					urlAnchor.protocol + "//" + urlAnchor.host;
			} catch ( e ) {

				// If there is an error parsing the URL, assume it is crossDomain,
				// it can be rejected by the transport if it is invalid
				s.crossDomain = true;
			}
		}

		// Convert data if not already a string
		if ( s.data && s.processData && typeof s.data !== "string" ) {
			s.data = jQuery.param( s.data, s.traditional );
		}

		// Apply prefilters
		inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );

		// If request was aborted inside a prefilter, stop there
		if ( state === 2 ) {
			return jqXHR;
		}

		// We can fire global events as of now if asked to
		// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)
		fireGlobals = jQuery.event && s.global;

		// Watch for a new set of requests
		if ( fireGlobals && jQuery.active++ === 0 ) {
			jQuery.event.trigger( "ajaxStart" );
		}

		// Uppercase the type
		s.type = s.type.toUpperCase();

		// Determine if request has content
		s.hasContent = !rnoContent.test( s.type );

		// Save the URL in case we're toying with the If-Modified-Since
		// and/or If-None-Match header later on
		cacheURL = s.url;

		// More options handling for requests with no content
		if ( !s.hasContent ) {

			// If data is available, append data to url
			if ( s.data ) {
				cacheURL = ( s.url += ( rquery.test( cacheURL ) ? "&" : "?" ) + s.data );

				// #9682: remove data so that it's not used in an eventual retry
				delete s.data;
			}

			// Add anti-cache in url if needed
			if ( s.cache === false ) {
				s.url = rts.test( cacheURL ) ?

					// If there is already a '_' parameter, set its value
					cacheURL.replace( rts, "$1_=" + nonce++ ) :

					// Otherwise add one to the end
					cacheURL + ( rquery.test( cacheURL ) ? "&" : "?" ) + "_=" + nonce++;
			}
		}

		// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
		if ( s.ifModified ) {
			if ( jQuery.lastModified[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ cacheURL ] );
			}
			if ( jQuery.etag[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ cacheURL ] );
			}
		}

		// Set the correct header, if data is being sent
		if ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {
			jqXHR.setRequestHeader( "Content-Type", s.contentType );
		}

		// Set the Accepts header for the server, depending on the dataType
		jqXHR.setRequestHeader(
			"Accept",
			s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?
				s.accepts[ s.dataTypes[ 0 ] ] +
					( s.dataTypes[ 0 ] !== "*" ? ", " + allTypes + "; q=0.01" : "" ) :
				s.accepts[ "*" ]
		);

		// Check for headers option
		for ( i in s.headers ) {
			jqXHR.setRequestHeader( i, s.headers[ i ] );
		}

		// Allow custom headers/mimetypes and early abort
		if ( s.beforeSend &&
			( s.beforeSend.call( callbackContext, jqXHR, s ) === false || state === 2 ) ) {

			// Abort if not done already and return
			return jqXHR.abort();
		}

		// Aborting is no longer a cancellation
		strAbort = "abort";

		// Install callbacks on deferreds
		for ( i in { success: 1, error: 1, complete: 1 } ) {
			jqXHR[ i ]( s[ i ] );
		}

		// Get transport
		transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );

		// If no transport, we auto-abort
		if ( !transport ) {
			done( -1, "No Transport" );
		} else {
			jqXHR.readyState = 1;

			// Send global event
			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );
			}

			// If request was aborted inside ajaxSend, stop there
			if ( state === 2 ) {
				return jqXHR;
			}

			// Timeout
			if ( s.async && s.timeout > 0 ) {
				timeoutTimer = window.setTimeout( function() {
					jqXHR.abort( "timeout" );
				}, s.timeout );
			}

			try {
				state = 1;
				transport.send( requestHeaders, done );
			} catch ( e ) {

				// Propagate exception as error if not done
				if ( state < 2 ) {
					done( -1, e );

				// Simply rethrow otherwise
				} else {
					throw e;
				}
			}
		}

		// Callback for when everything is done
		function done( status, nativeStatusText, responses, headers ) {
			var isSuccess, success, error, response, modified,
				statusText = nativeStatusText;

			// Called once
			if ( state === 2 ) {
				return;
			}

			// State is "done" now
			state = 2;

			// Clear timeout if it exists
			if ( timeoutTimer ) {
				window.clearTimeout( timeoutTimer );
			}

			// Dereference transport for early garbage collection
			// (no matter how long the jqXHR object will be used)
			transport = undefined;

			// Cache response headers
			responseHeadersString = headers || "";

			// Set readyState
			jqXHR.readyState = status > 0 ? 4 : 0;

			// Determine if successful
			isSuccess = status >= 200 && status < 300 || status === 304;

			// Get response data
			if ( responses ) {
				response = ajaxHandleResponses( s, jqXHR, responses );
			}

			// Convert no matter what (that way responseXXX fields are always set)
			response = ajaxConvert( s, response, jqXHR, isSuccess );

			// If successful, handle type chaining
			if ( isSuccess ) {

				// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
				if ( s.ifModified ) {
					modified = jqXHR.getResponseHeader( "Last-Modified" );
					if ( modified ) {
						jQuery.lastModified[ cacheURL ] = modified;
					}
					modified = jqXHR.getResponseHeader( "etag" );
					if ( modified ) {
						jQuery.etag[ cacheURL ] = modified;
					}
				}

				// if no content
				if ( status === 204 || s.type === "HEAD" ) {
					statusText = "nocontent";

				// if not modified
				} else if ( status === 304 ) {
					statusText = "notmodified";

				// If we have data, let's convert it
				} else {
					statusText = response.state;
					success = response.data;
					error = response.error;
					isSuccess = !error;
				}
			} else {

				// Extract error from statusText and normalize for non-aborts
				error = statusText;
				if ( status || !statusText ) {
					statusText = "error";
					if ( status < 0 ) {
						status = 0;
					}
				}
			}

			// Set data for the fake xhr object
			jqXHR.status = status;
			jqXHR.statusText = ( nativeStatusText || statusText ) + "";

			// Success/Error
			if ( isSuccess ) {
				deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );
			} else {
				deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );
			}

			// Status-dependent callbacks
			jqXHR.statusCode( statusCode );
			statusCode = undefined;

			if ( fireGlobals ) {
				globalEventContext.trigger( isSuccess ? "ajaxSuccess" : "ajaxError",
					[ jqXHR, s, isSuccess ? success : error ] );
			}

			// Complete
			completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );

			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );

				// Handle the global AJAX counter
				if ( !( --jQuery.active ) ) {
					jQuery.event.trigger( "ajaxStop" );
				}
			}
		}

		return jqXHR;
	},

	getJSON: function( url, data, callback ) {
		return jQuery.get( url, data, callback, "json" );
	},

	getScript: function( url, callback ) {
		return jQuery.get( url, undefined, callback, "script" );
	}
} );

jQuery.each( [ "get", "post" ], function( i, method ) {
	jQuery[ method ] = function( url, data, callback, type ) {

		// Shift arguments if data argument was omitted
		if ( jQuery.isFunction( data ) ) {
			type = type || callback;
			callback = data;
			data = undefined;
		}

		// The url can be an options object (which then must have .url)
		return jQuery.ajax( jQuery.extend( {
			url: url,
			type: method,
			dataType: type,
			data: data,
			success: callback
		}, jQuery.isPlainObject( url ) && url ) );
	};
} );


jQuery._evalUrl = function( url ) {
	return jQuery.ajax( {
		url: url,

		// Make this explicit, since user can override this through ajaxSetup (#11264)
		type: "GET",
		dataType: "script",
		async: false,
		global: false,
		"throws": true
	} );
};


jQuery.fn.extend( {
	wrapAll: function( html ) {
		var wrap;

		if ( jQuery.isFunction( html ) ) {
			return this.each( function( i ) {
				jQuery( this ).wrapAll( html.call( this, i ) );
			} );
		}

		if ( this[ 0 ] ) {

			// The elements to wrap the target around
			wrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );

			if ( this[ 0 ].parentNode ) {
				wrap.insertBefore( this[ 0 ] );
			}

			wrap.map( function() {
				var elem = this;

				while ( elem.firstElementChild ) {
					elem = elem.firstElementChild;
				}

				return elem;
			} ).append( this );
		}

		return this;
	},

	wrapInner: function( html ) {
		if ( jQuery.isFunction( html ) ) {
			return this.each( function( i ) {
				jQuery( this ).wrapInner( html.call( this, i ) );
			} );
		}

		return this.each( function() {
			var self = jQuery( this ),
				contents = self.contents();

			if ( contents.length ) {
				contents.wrapAll( html );

			} else {
				self.append( html );
			}
		} );
	},

	wrap: function( html ) {
		var isFunction = jQuery.isFunction( html );

		return this.each( function( i ) {
			jQuery( this ).wrapAll( isFunction ? html.call( this, i ) : html );
		} );
	},

	unwrap: function() {
		return this.parent().each( function() {
			if ( !jQuery.nodeName( this, "body" ) ) {
				jQuery( this ).replaceWith( this.childNodes );
			}
		} ).end();
	}
} );


jQuery.expr.filters.hidden = function( elem ) {
	return !jQuery.expr.filters.visible( elem );
};
jQuery.expr.filters.visible = function( elem ) {

	// Support: Opera <= 12.12
	// Opera reports offsetWidths and offsetHeights less than zero on some elements
	// Use OR instead of AND as the element is not visible if either is true
	// See tickets #10406 and #13132
	return elem.offsetWidth > 0 || elem.offsetHeight > 0 || elem.getClientRects().length > 0;
};




var r20 = /%20/g,
	rbracket = /\[\]$/,
	rCRLF = /\r?\n/g,
	rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
	rsubmittable = /^(?:input|select|textarea|keygen)/i;

function buildParams( prefix, obj, traditional, add ) {
	var name;

	if ( jQuery.isArray( obj ) ) {

		// Serialize array item.
		jQuery.each( obj, function( i, v ) {
			if ( traditional || rbracket.test( prefix ) ) {

				// Treat each array item as a scalar.
				add( prefix, v );

			} else {

				// Item is non-scalar (array or object), encode its numeric index.
				buildParams(
					prefix + "[" + ( typeof v === "object" && v != null ? i : "" ) + "]",
					v,
					traditional,
					add
				);
			}
		} );

	} else if ( !traditional && jQuery.type( obj ) === "object" ) {

		// Serialize object item.
		for ( name in obj ) {
			buildParams( prefix + "[" + name + "]", obj[ name ], traditional, add );
		}

	} else {

		// Serialize scalar item.
		add( prefix, obj );
	}
}

// Serialize an array of form elements or a set of
// key/values into a query string
jQuery.param = function( a, traditional ) {
	var prefix,
		s = [],
		add = function( key, value ) {

			// If value is a function, invoke it and return its value
			value = jQuery.isFunction( value ) ? value() : ( value == null ? "" : value );
			s[ s.length ] = encodeURIComponent( key ) + "=" + encodeURIComponent( value );
		};

	// Set traditional to true for jQuery <= 1.3.2 behavior.
	if ( traditional === undefined ) {
		traditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;
	}

	// If an array was passed in, assume that it is an array of form elements.
	if ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {

		// Serialize the form elements
		jQuery.each( a, function() {
			add( this.name, this.value );
		} );

	} else {

		// If traditional, encode the "old" way (the way 1.3.2 or older
		// did it), otherwise encode params recursively.
		for ( prefix in a ) {
			buildParams( prefix, a[ prefix ], traditional, add );
		}
	}

	// Return the resulting serialization
	return s.join( "&" ).replace( r20, "+" );
};

jQuery.fn.extend( {
	serialize: function() {
		return jQuery.param( this.serializeArray() );
	},
	serializeArray: function() {
		return this.map( function() {

			// Can add propHook for "elements" to filter or add form elements
			var elements = jQuery.prop( this, "elements" );
			return elements ? jQuery.makeArray( elements ) : this;
		} )
		.filter( function() {
			var type = this.type;

			// Use .is( ":disabled" ) so that fieldset[disabled] works
			return this.name && !jQuery( this ).is( ":disabled" ) &&
				rsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&
				( this.checked || !rcheckableType.test( type ) );
		} )
		.map( function( i, elem ) {
			var val = jQuery( this ).val();

			return val == null ?
				null :
				jQuery.isArray( val ) ?
					jQuery.map( val, function( val ) {
						return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
					} ) :
					{ name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
		} ).get();
	}
} );


jQuery.ajaxSettings.xhr = function() {
	try {
		return new window.XMLHttpRequest();
	} catch ( e ) {}
};

var xhrSuccessStatus = {

		// File protocol always yields status code 0, assume 200
		0: 200,

		// Support: IE9
		// #1450: sometimes IE returns 1223 when it should be 204
		1223: 204
	},
	xhrSupported = jQuery.ajaxSettings.xhr();

support.cors = !!xhrSupported && ( "withCredentials" in xhrSupported );
support.ajax = xhrSupported = !!xhrSupported;

jQuery.ajaxTransport( function( options ) {
	var callback, errorCallback;

	// Cross domain only allowed if supported through XMLHttpRequest
	if ( support.cors || xhrSupported && !options.crossDomain ) {
		return {
			send: function( headers, complete ) {
				var i,
					xhr = options.xhr();

				xhr.open(
					options.type,
					options.url,
					options.async,
					options.username,
					options.password
				);

				// Apply custom fields if provided
				if ( options.xhrFields ) {
					for ( i in options.xhrFields ) {
						xhr[ i ] = options.xhrFields[ i ];
					}
				}

				// Override mime type if needed
				if ( options.mimeType && xhr.overrideMimeType ) {
					xhr.overrideMimeType( options.mimeType );
				}

				// X-Requested-With header
				// For cross-domain requests, seeing as conditions for a preflight are
				// akin to a jigsaw puzzle, we simply never set it to be sure.
				// (it can always be set on a per-request basis or even using ajaxSetup)
				// For same-domain requests, won't change header if already provided.
				if ( !options.crossDomain && !headers[ "X-Requested-With" ] ) {
					headers[ "X-Requested-With" ] = "XMLHttpRequest";
				}

				// Set headers
				for ( i in headers ) {
					xhr.setRequestHeader( i, headers[ i ] );
				}

				// Callback
				callback = function( type ) {
					return function() {
						if ( callback ) {
							callback = errorCallback = xhr.onload =
								xhr.onerror = xhr.onabort = xhr.onreadystatechange = null;

							if ( type === "abort" ) {
								xhr.abort();
							} else if ( type === "error" ) {

								// Support: IE9
								// On a manual native abort, IE9 throws
								// errors on any property access that is not readyState
								if ( typeof xhr.status !== "number" ) {
									complete( 0, "error" );
								} else {
									complete(

										// File: protocol always yields status 0; see #8605, #14207
										xhr.status,
										xhr.statusText
									);
								}
							} else {
								complete(
									xhrSuccessStatus[ xhr.status ] || xhr.status,
									xhr.statusText,

									// Support: IE9 only
									// IE9 has no XHR2 but throws on binary (trac-11426)
									// For XHR2 non-text, let the caller handle it (gh-2498)
									( xhr.responseType || "text" ) !== "text"  ||
									typeof xhr.responseText !== "string" ?
										{ binary: xhr.response } :
										{ text: xhr.responseText },
									xhr.getAllResponseHeaders()
								);
							}
						}
					};
				};

				// Listen to events
				xhr.onload = callback();
				errorCallback = xhr.onerror = callback( "error" );

				// Support: IE9
				// Use onreadystatechange to replace onabort
				// to handle uncaught aborts
				if ( xhr.onabort !== undefined ) {
					xhr.onabort = errorCallback;
				} else {
					xhr.onreadystatechange = function() {

						// Check readyState before timeout as it changes
						if ( xhr.readyState === 4 ) {

							// Allow onerror to be called first,
							// but that will not handle a native abort
							// Also, save errorCallback to a variable
							// as xhr.onerror cannot be accessed
							window.setTimeout( function() {
								if ( callback ) {
									errorCallback();
								}
							} );
						}
					};
				}

				// Create the abort callback
				callback = callback( "abort" );

				try {

					// Do send the request (this may raise an exception)
					xhr.send( options.hasContent && options.data || null );
				} catch ( e ) {

					// #14683: Only rethrow if this hasn't been notified as an error yet
					if ( callback ) {
						throw e;
					}
				}
			},

			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
} );




// Install script dataType
jQuery.ajaxSetup( {
	accepts: {
		script: "text/javascript, application/javascript, " +
			"application/ecmascript, application/x-ecmascript"
	},
	contents: {
		script: /\b(?:java|ecma)script\b/
	},
	converters: {
		"text script": function( text ) {
			jQuery.globalEval( text );
			return text;
		}
	}
} );

// Handle cache's special case and crossDomain
jQuery.ajaxPrefilter( "script", function( s ) {
	if ( s.cache === undefined ) {
		s.cache = false;
	}
	if ( s.crossDomain ) {
		s.type = "GET";
	}
} );

// Bind script tag hack transport
jQuery.ajaxTransport( "script", function( s ) {

	// This transport only deals with cross domain requests
	if ( s.crossDomain ) {
		var script, callback;
		return {
			send: function( _, complete ) {
				script = jQuery( "<script>" ).prop( {
					charset: s.scriptCharset,
					src: s.url
				} ).on(
					"load error",
					callback = function( evt ) {
						script.remove();
						callback = null;
						if ( evt ) {
							complete( evt.type === "error" ? 404 : 200, evt.type );
						}
					}
				);

				// Use native DOM manipulation to avoid our domManip AJAX trickery
				document.head.appendChild( script[ 0 ] );
			},
			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
} );




var oldCallbacks = [],
	rjsonp = /(=)\?(?=&|$)|\?\?/;

// Default jsonp settings
jQuery.ajaxSetup( {
	jsonp: "callback",
	jsonpCallback: function() {
		var callback = oldCallbacks.pop() || ( jQuery.expando + "_" + ( nonce++ ) );
		this[ callback ] = true;
		return callback;
	}
} );

// Detect, normalize options and install callbacks for jsonp requests
jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {

	var callbackName, overwritten, responseContainer,
		jsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?
			"url" :
			typeof s.data === "string" &&
				( s.contentType || "" )
					.indexOf( "application/x-www-form-urlencoded" ) === 0 &&
				rjsonp.test( s.data ) && "data"
		);

	// Handle iff the expected data type is "jsonp" or we have a parameter to set
	if ( jsonProp || s.dataTypes[ 0 ] === "jsonp" ) {

		// Get callback name, remembering preexisting value associated with it
		callbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?
			s.jsonpCallback() :
			s.jsonpCallback;

		// Insert callback into url or form data
		if ( jsonProp ) {
			s[ jsonProp ] = s[ jsonProp ].replace( rjsonp, "$1" + callbackName );
		} else if ( s.jsonp !== false ) {
			s.url += ( rquery.test( s.url ) ? "&" : "?" ) + s.jsonp + "=" + callbackName;
		}

		// Use data converter to retrieve json after script execution
		s.converters[ "script json" ] = function() {
			if ( !responseContainer ) {
				jQuery.error( callbackName + " was not called" );
			}
			return responseContainer[ 0 ];
		};

		// Force json dataType
		s.dataTypes[ 0 ] = "json";

		// Install callback
		overwritten = window[ callbackName ];
		window[ callbackName ] = function() {
			responseContainer = arguments;
		};

		// Clean-up function (fires after converters)
		jqXHR.always( function() {

			// If previous value didn't exist - remove it
			if ( overwritten === undefined ) {
				jQuery( window ).removeProp( callbackName );

			// Otherwise restore preexisting value
			} else {
				window[ callbackName ] = overwritten;
			}

			// Save back as free
			if ( s[ callbackName ] ) {

				// Make sure that re-using the options doesn't screw things around
				s.jsonpCallback = originalSettings.jsonpCallback;

				// Save the callback name for future use
				oldCallbacks.push( callbackName );
			}

			// Call if it was a function and we have a response
			if ( responseContainer && jQuery.isFunction( overwritten ) ) {
				overwritten( responseContainer[ 0 ] );
			}

			responseContainer = overwritten = undefined;
		} );

		// Delegate to script
		return "script";
	}
} );




// Argument "data" should be string of html
// context (optional): If specified, the fragment will be created in this context,
// defaults to document
// keepScripts (optional): If true, will include scripts passed in the html string
jQuery.parseHTML = function( data, context, keepScripts ) {
	if ( !data || typeof data !== "string" ) {
		return null;
	}
	if ( typeof context === "boolean" ) {
		keepScripts = context;
		context = false;
	}
	context = context || document;

	var parsed = rsingleTag.exec( data ),
		scripts = !keepScripts && [];

	// Single tag
	if ( parsed ) {
		return [ context.createElement( parsed[ 1 ] ) ];
	}

	parsed = buildFragment( [ data ], context, scripts );

	if ( scripts && scripts.length ) {
		jQuery( scripts ).remove();
	}

	return jQuery.merge( [], parsed.childNodes );
};


// Keep a copy of the old load method
var _load = jQuery.fn.load;

/**
 * Load a url into a page
 */
jQuery.fn.load = function( url, params, callback ) {
	if ( typeof url !== "string" && _load ) {
		return _load.apply( this, arguments );
	}

	var selector, type, response,
		self = this,
		off = url.indexOf( " " );

	if ( off > -1 ) {
		selector = jQuery.trim( url.slice( off ) );
		url = url.slice( 0, off );
	}

	// If it's a function
	if ( jQuery.isFunction( params ) ) {

		// We assume that it's the callback
		callback = params;
		params = undefined;

	// Otherwise, build a param string
	} else if ( params && typeof params === "object" ) {
		type = "POST";
	}

	// If we have elements to modify, make the request
	if ( self.length > 0 ) {
		jQuery.ajax( {
			url: url,

			// If "type" variable is undefined, then "GET" method will be used.
			// Make value of this field explicit since
			// user can override it through ajaxSetup method
			type: type || "GET",
			dataType: "html",
			data: params
		} ).done( function( responseText ) {

			// Save response for use in complete callback
			response = arguments;

			self.html( selector ?

				// If a selector was specified, locate the right elements in a dummy div
				// Exclude scripts to avoid IE 'Permission Denied' errors
				jQuery( "<div>" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :

				// Otherwise use the full result
				responseText );

		// If the request succeeds, this function gets "data", "status", "jqXHR"
		// but they are ignored because response was set above.
		// If it fails, this function gets "jqXHR", "status", "error"
		} ).always( callback && function( jqXHR, status ) {
			self.each( function() {
				callback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );
			} );
		} );
	}

	return this;
};




// Attach a bunch of functions for handling common AJAX events
jQuery.each( [
	"ajaxStart",
	"ajaxStop",
	"ajaxComplete",
	"ajaxError",
	"ajaxSuccess",
	"ajaxSend"
], function( i, type ) {
	jQuery.fn[ type ] = function( fn ) {
		return this.on( type, fn );
	};
} );




jQuery.expr.filters.animated = function( elem ) {
	return jQuery.grep( jQuery.timers, function( fn ) {
		return elem === fn.elem;
	} ).length;
};




/**
 * Gets a window from an element
 */
function getWindow( elem ) {
	return jQuery.isWindow( elem ) ? elem : elem.nodeType === 9 && elem.defaultView;
}

jQuery.offset = {
	setOffset: function( elem, options, i ) {
		var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,
			position = jQuery.css( elem, "position" ),
			curElem = jQuery( elem ),
			props = {};

		// Set position first, in-case top/left are set even on static elem
		if ( position === "static" ) {
			elem.style.position = "relative";
		}

		curOffset = curElem.offset();
		curCSSTop = jQuery.css( elem, "top" );
		curCSSLeft = jQuery.css( elem, "left" );
		calculatePosition = ( position === "absolute" || position === "fixed" ) &&
			( curCSSTop + curCSSLeft ).indexOf( "auto" ) > -1;

		// Need to be able to calculate position if either
		// top or left is auto and position is either absolute or fixed
		if ( calculatePosition ) {
			curPosition = curElem.position();
			curTop = curPosition.top;
			curLeft = curPosition.left;

		} else {
			curTop = parseFloat( curCSSTop ) || 0;
			curLeft = parseFloat( curCSSLeft ) || 0;
		}

		if ( jQuery.isFunction( options ) ) {

			// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)
			options = options.call( elem, i, jQuery.extend( {}, curOffset ) );
		}

		if ( options.top != null ) {
			props.top = ( options.top - curOffset.top ) + curTop;
		}
		if ( options.left != null ) {
			props.left = ( options.left - curOffset.left ) + curLeft;
		}

		if ( "using" in options ) {
			options.using.call( elem, props );

		} else {
			curElem.css( props );
		}
	}
};

jQuery.fn.extend( {
	offset: function( options ) {
		if ( arguments.length ) {
			return options === undefined ?
				this :
				this.each( function( i ) {
					jQuery.offset.setOffset( this, options, i );
				} );
		}

		var docElem, win,
			elem = this[ 0 ],
			box = { top: 0, left: 0 },
			doc = elem && elem.ownerDocument;

		if ( !doc ) {
			return;
		}

		docElem = doc.documentElement;

		// Make sure it's not a disconnected DOM node
		if ( !jQuery.contains( docElem, elem ) ) {
			return box;
		}

		box = elem.getBoundingClientRect();
		win = getWindow( doc );
		return {
			top: box.top + win.pageYOffset - docElem.clientTop,
			left: box.left + win.pageXOffset - docElem.clientLeft
		};
	},

	position: function() {
		if ( !this[ 0 ] ) {
			return;
		}

		var offsetParent, offset,
			elem = this[ 0 ],
			parentOffset = { top: 0, left: 0 };

		// Fixed elements are offset from window (parentOffset = {top:0, left: 0},
		// because it is its only offset parent
		if ( jQuery.css( elem, "position" ) === "fixed" ) {

			// Assume getBoundingClientRect is there when computed position is fixed
			offset = elem.getBoundingClientRect();

		} else {

			// Get *real* offsetParent
			offsetParent = this.offsetParent();

			// Get correct offsets
			offset = this.offset();
			if ( !jQuery.nodeName( offsetParent[ 0 ], "html" ) ) {
				parentOffset = offsetParent.offset();
			}

			// Add offsetParent borders
			parentOffset.top += jQuery.css( offsetParent[ 0 ], "borderTopWidth", true );
			parentOffset.left += jQuery.css( offsetParent[ 0 ], "borderLeftWidth", true );
		}

		// Subtract parent offsets and element margins
		return {
			top: offset.top - parentOffset.top - jQuery.css( elem, "marginTop", true ),
			left: offset.left - parentOffset.left - jQuery.css( elem, "marginLeft", true )
		};
	},

	// This method will return documentElement in the following cases:
	// 1) For the element inside the iframe without offsetParent, this method will return
	//    documentElement of the parent window
	// 2) For the hidden or detached element
	// 3) For body or html element, i.e. in case of the html node - it will return itself
	//
	// but those exceptions were never presented as a real life use-cases
	// and might be considered as more preferable results.
	//
	// This logic, however, is not guaranteed and can change at any point in the future
	offsetParent: function() {
		return this.map( function() {
			var offsetParent = this.offsetParent;

			while ( offsetParent && jQuery.css( offsetParent, "position" ) === "static" ) {
				offsetParent = offsetParent.offsetParent;
			}

			return offsetParent || documentElement;
		} );
	}
} );

// Create scrollLeft and scrollTop methods
jQuery.each( { scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function( method, prop ) {
	var top = "pageYOffset" === prop;

	jQuery.fn[ method ] = function( val ) {
		return access( this, function( elem, method, val ) {
			var win = getWindow( elem );

			if ( val === undefined ) {
				return win ? win[ prop ] : elem[ method ];
			}

			if ( win ) {
				win.scrollTo(
					!top ? val : win.pageXOffset,
					top ? val : win.pageYOffset
				);

			} else {
				elem[ method ] = val;
			}
		}, method, val, arguments.length );
	};
} );

// Support: Safari<7-8+, Chrome<37-44+
// Add the top/left cssHooks using jQuery.fn.position
// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
// Blink bug: https://code.google.com/p/chromium/issues/detail?id=229280
// getComputedStyle returns percent when specified for top/left/bottom/right;
// rather than make the css module depend on the offset module, just check for it here
jQuery.each( [ "top", "left" ], function( i, prop ) {
	jQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,
		function( elem, computed ) {
			if ( computed ) {
				computed = curCSS( elem, prop );

				// If curCSS returns percentage, fallback to offset
				return rnumnonpx.test( computed ) ?
					jQuery( elem ).position()[ prop ] + "px" :
					computed;
			}
		}
	);
} );


// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
	jQuery.each( { padding: "inner" + name, content: type, "": "outer" + name },
		function( defaultExtra, funcName ) {

		// Margin is only for outerHeight, outerWidth
		jQuery.fn[ funcName ] = function( margin, value ) {
			var chainable = arguments.length && ( defaultExtra || typeof margin !== "boolean" ),
				extra = defaultExtra || ( margin === true || value === true ? "margin" : "border" );

			return access( this, function( elem, type, value ) {
				var doc;

				if ( jQuery.isWindow( elem ) ) {

					// As of 5/8/2012 this will yield incorrect results for Mobile Safari, but there
					// isn't a whole lot we can do. See pull request at this URL for discussion:
					// https://github.com/jquery/jquery/pull/764
					return elem.document.documentElement[ "client" + name ];
				}

				// Get document width or height
				if ( elem.nodeType === 9 ) {
					doc = elem.documentElement;

					// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],
					// whichever is greatest
					return Math.max(
						elem.body[ "scroll" + name ], doc[ "scroll" + name ],
						elem.body[ "offset" + name ], doc[ "offset" + name ],
						doc[ "client" + name ]
					);
				}

				return value === undefined ?

					// Get width or height on the element, requesting but not forcing parseFloat
					jQuery.css( elem, type, extra ) :

					// Set width or height on the element
					jQuery.style( elem, type, value, extra );
			}, type, chainable ? margin : undefined, chainable, null );
		};
	} );
} );


jQuery.fn.extend( {

	bind: function( types, data, fn ) {
		return this.on( types, null, data, fn );
	},
	unbind: function( types, fn ) {
		return this.off( types, null, fn );
	},

	delegate: function( selector, types, data, fn ) {
		return this.on( types, selector, data, fn );
	},
	undelegate: function( selector, types, fn ) {

		// ( namespace ) or ( selector, types [, fn] )
		return arguments.length === 1 ?
			this.off( selector, "**" ) :
			this.off( types, selector || "**", fn );
	},
	size: function() {
		return this.length;
	}
} );

jQuery.fn.andSelf = jQuery.fn.addBack;




// Register as a named AMD module, since jQuery can be concatenated with other
// files that may use define, but not via a proper concatenation script that
// understands anonymous AMD modules. A named AMD is safest and most robust
// way to register. Lowercase jquery is used because AMD module names are
// derived from file names, and jQuery is normally delivered in a lowercase
// file name. Do this after creating the global so that if an AMD module wants
// to call noConflict to hide this version of jQuery, it will work.

// Note that for maximum portability, libraries that are not jQuery should
// declare themselves as anonymous modules, and avoid setting a global if an
// AMD loader is present. jQuery is a special case. For more information, see
// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon

if ( true ) {
	!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {
		return jQuery;
	}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
}



var

	// Map over jQuery in case of overwrite
	_jQuery = window.jQuery,

	// Map over the $ in case of overwrite
	_$ = window.$;

jQuery.noConflict = function( deep ) {
	if ( window.$ === jQuery ) {
		window.$ = _$;
	}

	if ( deep && window.jQuery === jQuery ) {
		window.jQuery = _jQuery;
	}

	return jQuery;
};

// Expose jQuery and $ identifiers, even in AMD
// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)
// and CommonJS for browser emulators (#13566)
if ( !noGlobal ) {
	window.jQuery = window.$ = jQuery;
}

return jQuery;
}));


/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global, module, jQuery) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/********************************************************************
 *	Kalendae, a framework agnostic javascript date picker           *
 *	Copyright(c) 2013-2016 Jarvis Badgley (chipersoft@gmail.com)    *
 *	http://github.com/ChiperSoft/Kalendae                           *
 *	Version 0.6.1                                                   *
 ********************************************************************/
(function (undefined) {

    (function (factory) {
        if (true) {
            // AMD. Register as an anonymous module.
            !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
        } else if (typeof exports === 'object') {
            // Node/CommonJS
            module.exports = factory();
        } else {
            // Browser globals
            window.Kalendae = factory();
        }
    })(function () {

        var moment;
        var getTodayYearDate = function () {
            return Kalendae.moment().startOf('day').yearDay();
        };

        var Kalendae = function (targetElement, options) {
            if (typeof document.addEventListener !== 'function' && !util.isIE8()) return;

            //if the first argument isn't an element and isn't a string, assume that it is the options object
            var is_element = false;
            try {
                is_element = targetElement instanceof Element;
            } catch (err) {
                is_element = !!targetElement && is_element.nodeType === 1;
            }
            if (!(is_element || typeof targetElement === 'string')) options = targetElement;

            var self = this,
                classes = self.classes,
                opts = self.settings = util.merge(self.defaults, { attachTo: targetElement }, options || {}),
                $container = self.container = util.make('div', { 'class': classes.container }),
                calendars = self.calendars = [],
                startDay = moment().day(opts.weekStart),
                vsd,
                columnHeaders = [],
                $cal,
                $title,
                $caption,
                $header,
                $days,
                $week,
                dayNodes = [],
                $span,
                i = 0,
                j = opts.months;

            if (util.isIE8()) util.addClassName($container, 'ie8');

            //generate the column headers (Su, Mo, Tu, etc)
            i = 7;
            while (i--) {
                columnHeaders.push(startDay.format(opts.columnHeaderFormat));
                startDay.add(1, 'days');
            }

            //setup publish/subscribe and apply any subscriptions passed in settings
            MinPubSub(self);
            if (typeof opts.subscribe === 'object') {
                for (i in opts.subscribe) if (opts.subscribe.hasOwnProperty(i)) {
                    self.subscribe(i, opts.subscribe[i]);
                }
            }

            //set the view month
            if (!!opts.viewStartDate) {
                vsd = moment(opts.viewStartDate, opts.format);
            } else {
                vsd = moment();
            }
            self.viewStartDate = vsd.date(1);

            //process default selected dates
            self._sel = [];
            if (!!opts.selected) {
                self.setSelected(opts.selected, false);
                self.viewStartDate = moment(self._sel[0]);
            }

            var viewDelta = {
                'past': opts.months - 1,
                'today-past': opts.months - 1,
                'any': opts.months > 2 ? Math.floor(opts.months / 2) : 0,
                'today-future': 0,
                'future': 0
            }[this.settings.direction];

            if (viewDelta && moment().month() == moment(self.viewStartDate).month()) {
                self.viewStartDate = moment(self.viewStartDate).subtract({ M: viewDelta }).date(1);
            }

            // store the view that the calendar initialized with in-case we want to reset.
            self.defaultView = moment(self.viewStartDate);

            if (typeof opts.blackout === 'function') {
                self.blackout = opts.blackout;
            } else if (!!opts.blackout) {
                var bdates = parseDates(opts.blackout, opts.parseSplitDelimiter, opts.format);
                self.blackout = function (input) {
                    input = moment(input).startOf('day').yearDay();
                    if (input < 1 || !self._sel) return false;
                    var i = bdates.length;
                    while (i--) if (bdates[i].startOf('day').yearDay() === input) return true;
                    return false;
                };
            } else {
                self.blackout = function () {
                    return false;
                };
            }

            self.direction = self.directions[opts.direction] ? self.directions[opts.direction] : self.directions['any'];

            //for the total months setting, generate N calendar views and add them to the container
            j = Math.max(opts.months, 1);
            while (j--) {
                $cal = util.make('div', { 'class': classes.calendar }, $container);

                $cal.setAttribute('data-cal-index', j);
                if (opts.months > 1) {
                    if (j == Math.max(opts.months - 1, 1)) util.addClassName($cal, classes.monthFirst);else if (j === 0) util.addClassName($cal, classes.monthLast);else util.addClassName($cal, classes.monthMiddle);
                }

                //title bar
                $title = util.make('div', { 'class': classes.title }, $cal);
                if (!opts.useYearNav) {
                    util.addClassName($title, classes.disableYearNav);
                }
                util.make('a', { 'class': classes.previousYear }, $title); //previous button
                util.make('a', { 'class': classes.previousMonth }, $title); //previous button
                util.make('a', { 'class': classes.nextYear }, $title); //next button
                util.make('a', { 'class': classes.nextMonth }, $title); //next button
                $caption = util.make('span', { 'class': classes.caption }, $title); //title caption

                //column headers
                $header = util.make('div', { 'class': classes.header + ' ' + (opts.dayHeaderClickable == true ? classes.dayActive : '') }, $cal);
                i = 0;
                do {
                    $span = util.make('span', { 'data-day': i }, $header);

                    if (opts.dayHeaderClickable == true && opts.mode == 'multiple') {
                        $span.addEventListener("mouseover", function (e) {
                            var daysContainer = e.target.parentNode.nextSibling;
                            daysToHover = daysContainer.getElementsByClassName('k-day-week-' + e.target.getAttribute('data-day'));
                            if (daysToHover.length > 0) {
                                for (var i = 0; i < daysToHover.length; i++) {
                                    if (util.hasClassName(daysToHover[i], classes.dayActive)) util.addClassName(daysToHover[i], 'k-day-hover-active');
                                }
                            }
                        });
                        $span.addEventListener("mouseleave", function (e) {
                            var daysContainer = e.target.parentNode.nextSibling;
                            daysToHover = daysContainer.getElementsByClassName('k-day-week-' + e.target.getAttribute('data-day'));
                            if (daysToHover.length > 0) {
                                for (var i = 0; i < daysToHover.length; i++) {
                                    if (util.hasClassName(daysToHover[i], classes.dayActive)) util.removeClassName(daysToHover[i], 'k-day-hover-active');
                                }
                            }
                        });
                    }
                    $span.innerHTML = columnHeaders[i];
                } while (++i < 7);

                //individual day cells
                $days = util.make('div', { 'class': classes.days }, $cal);
                i = 0;
                dayNodes = [];
                do {
                    if (opts.mode == 'week') {
                        if (i % 7 === 0) {
                            $week = util.make('div', { 'class': classes.week + ' clearfix' }, $days);
                            dayNodes.push($week);
                        }
                        util.make('span', {}, $week);
                    } else {
                        dayNodes.push(util.make('span', {}, $days));
                    }
                } while (++i < 42);

                //store each calendar view for easy redrawing
                calendars.push({
                    header: $header,
                    caption: $caption,
                    days: dayNodes
                });

                if (j) util.make('div', { 'class': classes.monthSeparator }, $container);
            }

            self.draw();

            util.addEvent($container, 'mousedown', function (event, target) {
                var clickedDate;
                if (util.hasClassName(target, classes.nextMonth)) {
                    //NEXT MONTH BUTTON
                    if (!self.disableNext && self.publish('view-changed', self, ['next-month']) !== false) {
                        self.viewStartDate.add(1, 'months');
                        self.draw();
                    }
                    return false;
                } else if (util.hasClassName(target, classes.previousMonth)) {
                    //PREVIOUS MONTH BUTTON
                    if (!self.disablePreviousMonth && self.publish('view-changed', self, ['previous-month']) !== false) {
                        self.viewStartDate.subtract(1, 'months');
                        self.draw();
                    }
                    return false;
                } else if (util.hasClassName(target, classes.nextYear)) {
                    //NEXT MONTH BUTTON
                    if (!self.disableNext && self.publish('view-changed', self, ['next-year']) !== false) {
                        self.viewStartDate.add(1, 'years');
                        self.draw();
                    }
                    return false;
                } else if (util.hasClassName(target, classes.previousYear)) {
                    //PREVIOUS MONTH BUTTON
                    if (!self.disablePreviousMonth && self.publish('view-changed', self, ['previous-year']) !== false) {
                        self.viewStartDate.subtract(1, 'years');
                        self.draw();
                    }
                    return false;
                } else if ((util.hasClassName(target.parentNode, classes.days) || util.hasClassName(target.parentNode, classes.week)) && util.hasClassName(target, classes.dayActive) && (clickedDate = target.getAttribute('data-date'))) {
                    //DAY CLICK
                    clickedDate = moment(clickedDate, opts.dayAttributeFormat).hours(12);
                    if (self.publish('date-clicked', self, [clickedDate]) !== false) {

                        switch (opts.mode) {
                            case 'multiple':
                                if (!self.addSelected(clickedDate)) self.removeSelected(clickedDate);
                                break;
                            case 'range':
                                self.addSelected(clickedDate);
                                break;
                            case 'week':
                                self.weekSelected(clickedDate);
                                break;
                            case 'single':
                            /* falls through */
                            default:
                                self.addSelected(clickedDate);
                                break;
                        }
                    }
                    return false;
                } else if (util.hasClassName(target.parentNode, classes.week) && (clickedDate = target.getAttribute('data-date'))) {
                    //INACTIVE WEEK CLICK
                    clickedDate = moment(clickedDate, opts.dayAttributeFormat).hours(12);
                    if (self.publish('date-clicked', self, [clickedDate]) !== false) {
                        if (opts.mode == 'week') {
                            self.weekSelected(clickedDate);
                        }
                    }
                    return false;
                } else if (util.hasClassName(target.parentNode, classes.header)) {
                    if (opts.mode == 'multiple' && opts.dayHeaderClickable == true) {
                        var parentSelected = util.hasClassName(target, classes.daySelected),
                            month = target.parentNode.parentNode.getAttribute('data-datestart'),
                            dayToSelect = target.getAttribute('data-day');

                        if (parentSelected == true) {
                            self.monthDaySelected(month, dayToSelect, true);
                        } else {
                            self.monthDaySelected(month, dayToSelect, false);
                        }
                    }
                    return false;
                }

                return false;
            });

            if (!!(opts.attachTo = util.$(opts.attachTo))) {
                opts.attachTo.appendChild($container);
            }
        };

        Kalendae.prototype = {
            defaults: {
                attachTo: null, /* the element to attach the root container to. can be string or DOMElement */
                months: 1, /* total number of months to display side by side */
                weekStart: 0, /* day to use for the start of the week. 0 is Sunday */
                direction: 'any', /* past, today-past, any, today-future, future */
                directionScrolling: true, /* if a direction other than any is defined, prevent scrolling out of range */
                viewStartDate: null, /* date in the month to display.  When multiple months, this is the left most */
                blackout: null, /* array of dates, or function to be passed a date */
                selected: null, /* dates already selected.  can be string, date, or array of strings or dates. */
                mode: 'single', /* single, multiple, range */
                dayOutOfMonthClickable: false,
                dayHeaderClickable: false,
                format: null, /* string used for parsing dates. */
                subscribe: null, /* object containing events to subscribe to */

                columnHeaderFormat: 'dd', /* number of characters to show in the column headers */
                titleFormat: 'MMMM, YYYY', /* format mask for month titles. See momentjs.com for rules */
                dayNumberFormat: 'D', /* format mask for individual days */
                dayAttributeFormat: 'YYYY-MM-DD', /* format mask for the data-date attribute set on every span */
                parseSplitDelimiter: /,\s*|\s+-\s+/, /* regex to use for splitting multiple dates from a passed string */
                rangeDelimiter: ' - ', /* string to use between dates when outputting in range mode */
                multipleDelimiter: ', ', /* string to use between dates when outputting in multiple mode */
                useYearNav: true,

                dateClassMap: {}
            },
            classes: {
                container: 'kalendae',
                calendar: 'k-calendar',
                monthFirst: 'k-first-month',
                monthMiddle: 'k-middle-month',
                monthLast: 'k-last-month',
                title: 'k-title',
                previousMonth: 'k-btn-previous-month',
                nextMonth: 'k-btn-next-month',
                previousYear: 'k-btn-previous-year',
                nextYear: 'k-btn-next-year',
                caption: 'k-caption',
                header: 'k-header',
                days: 'k-days',
                week: 'k-week',
                dayOutOfMonth: 'k-out-of-month',
                dayInMonth: 'k-in-month',
                dayActive: 'k-active',
                daySelected: 'k-selected',
                dayInRange: 'k-range',
                dayInRangeStart: 'k-range-start',
                dayInRangeEnd: 'k-range-end',
                dayToday: 'k-today',
                monthSeparator: 'k-separator',
                disablePreviousMonth: 'k-disable-previous-month-btn',
                disableNextMonth: 'k-disable-next-month-btn',
                disablePreviousYear: 'k-disable-previous-year-btn',
                disableNextYear: 'k-disable-next-year-btn',
                disableYearNav: 'k-disable-year-nav'
            },

            disablePreviousMonth: false,
            disableNextMonth: false,
            disablePreviousYear: false,
            disableNextYear: false,

            directions: {
                'past': function (date) {
                    return moment(date).startOf('day').yearDay() >= getTodayYearDate();
                },
                'today-past': function (date) {
                    return moment(date).startOf('day').yearDay() > getTodayYearDate();
                },
                'any': function (date) {
                    return false;
                },
                'today-future': function (date) {
                    return moment(date).startOf('day').yearDay() < getTodayYearDate();
                },
                'future': function (date) {
                    return moment(date).startOf('day').yearDay() <= getTodayYearDate();
                }
            },

            getSelectedAsDates: function () {
                var out = [];
                var i = 0,
                    c = this._sel.length;
                for (; i < c; i++) {
                    out.push(this._sel[i].toDate());
                }
                return out;
            },

            getSelectedAsText: function (format) {
                var out = [];
                var i = 0,
                    c = this._sel.length;
                for (; i < c; i++) {
                    out.push(this._sel[i].format(format || this.settings.format || 'YYYY-MM-DD'));
                }
                return out;
            },

            getSelectedRaw: function () {
                var out = [];
                var i = 0,
                    c = this._sel.length;
                for (; i < c; i++) {
                    out.push(moment(this._sel[i]));
                }
                return out;
            },

            getSelected: function (format) {
                var sel = this.getSelectedAsText(format);
                switch (this.settings.mode) {
                    case 'week':
                    /* falls through range */

                    case 'range':
                        sel.splice(2); //shouldn't be more than two, but lets just make sure.
                        return sel.join(this.settings.rangeDelimiter);

                    case 'multiple':
                        return sel.join(this.settings.multipleDelimiter);

                    case 'single':
                    /* falls through */
                    default:
                        return sel[0] || null;
                }
            },

            isSelected: function (input) {
                input = moment(input).startOf('day').yearDay();
                if (input < 1 || !this._sel || this._sel.length < 1) return false;

                switch (this.settings.mode) {
                    case 'week':
                    /* falls through range */
                    case 'range':
                        var a = this._sel[0] ? this._sel[0].startOf('day').yearDay() : 0,
                            b = this._sel[1] ? this._sel[1].startOf('day').yearDay() : 0;

                        if (a === input || b === input) return 1;
                        if (!a || !b) return 0;

                        if (input > a && input < b || a < b && input < a && input > b) return -1;
                        return false;

                    case 'multiple':
                        var i = this._sel.length;
                        while (i--) {
                            if (this._sel[i].startOf('day').yearDay() === input) {
                                return true;
                            }
                        }
                        return false;

                    case 'single':
                    /* falls through */
                    default:
                        return this._sel[0] && this._sel[0].startOf('day').yearDay() === input;
                }

                return false;
            },

            setSelected: function (input, draw) {
                var i,
                    new_dates = parseDates(input, this.settings.parseSplitDelimiter, this.settings.format),
                    old_dates = parseDates(this.getSelected(), this.settings.parseSplitDelimiter, this.settings.format);

                i = old_dates.length;
                while (i--) {
                    this.removeSelected(old_dates[i], false);
                }

                i = new_dates.length;
                while (i--) {
                    this.addSelected(new_dates[i], false);
                }

                if (draw !== false) {
                    if (new_dates[0]) {
                        this.viewStartDate = moment(new_dates[0], this.settings.format);
                    }
                    this.draw();
                }
            },

            addSelected: function (date, draw) {
                date = moment(date, this.settings.format).hours(12);

                if (this.settings.dayOutOfMonthClickable && this.settings.mode !== 'range') {
                    this.makeSelectedDateVisible(date);
                }

                switch (this.settings.mode) {
                    case 'multiple':
                        if (!this.isSelected(date)) this._sel.push(date);else return false;
                        break;
                    case 'range':

                        if (this._sel.length !== 1) this._sel = [date];else {
                            if (date.startOf('day').yearDay() > this._sel[0].startOf('day').yearDay()) this._sel[1] = date;else this._sel = [date, this._sel[0]];
                        }
                        break;
                    case 'single':
                    /* falls through */
                    default:
                        this._sel = [date];
                        break;
                }
                this._sel.sort(function (a, b) {
                    return a.startOf('day').yearDay() - b.startOf('day').yearDay();
                });
                this.publish('change', this, [date]);
                if (draw !== false) this.draw();
                return true;
            },

            weekSelected: function (mom) {
                var x = mom.toDate();
                var start = moment(x).startOf('week');
                var end = moment(x).endOf('week').subtract(1, 'day');
                this._sel = [start, end];
                this.publish('change', this, [mom.day()]);
                this.draw();
            },

            monthDaySelected: function (month, daynumber, unselected) {
                var days = moment(month).startOf('month').weekday(daynumber),
                    endMonth = moment(month).endOf('month');
                selected = [];

                while (days <= endMonth) {
                    if (days >= moment(month).startOf('month') && !this.direction(days)) {
                        if (unselected) {
                            this.removeSelected(moment(days).hours(12));
                        } else {
                            this.addSelected(moment(days).hours(12));
                        }
                    }
                    days.add(7, 'd');
                }
            },

            makeSelectedDateVisible: function (date) {
                outOfViewMonth = moment(date).date('1').diff(this.viewStartDate, 'months');

                if (outOfViewMonth < 0) {
                    this.viewStartDate.subtract(1, 'months');
                } else if (outOfViewMonth > 0 && outOfViewMonth >= this.settings.months) {
                    this.viewStartDate.add(1, 'months');
                }
            },

            removeSelected: function (date, draw) {
                date = moment(date, this.settings.format).hours(12);
                var i = this._sel.length;
                while (i--) {
                    if (this._sel[i].startOf('day').yearDay() === date.startOf('day').yearDay()) {
                        this._sel.splice(i, 1);
                        this.publish('change', this, [date]);
                        if (draw !== false) this.draw();
                        return true;
                    }
                }
                return false;
            },

            draw: function draw() {
                // return;
                var month = moment(this.viewStartDate).startOf('month').add(12, 'hours'),
                    //force middle of the day to avoid any weird date shifts
                day,
                    classes = this.classes,
                    cal,
                    $span,
                    klass,
                    i = 0,
                    c,
                    j = 0,
                    k,
                    t = 0,
                    z,
                    w,
                    s,
                    headers,
                    dateString,
                    opts = this.settings,
                    diff;

                c = this.calendars.length;

                do {
                    day = moment(month).date(1);
                    day.day(day.day() < this.settings.weekStart ? this.settings.weekStart - 7 : this.settings.weekStart);
                    //if the first day of the month is less than our week start, back up a week

                    cal = this.calendars[i];

                    cal.header.parentNode.setAttribute('data-datestart', month.format(this.settings.dayAttributeFormat));

                    cal.caption.innerHTML = month.format(this.settings.titleFormat);
                    j = 0;
                    w = 0;
                    t = 0;
                    headers = [];
                    for (var z = 0; z < 7; z++) {
                        util.removeClassName(cal.header.children[z], classes.daySelected);
                        headers[z] = 0;
                    }

                    do {
                        if (opts.mode == 'week') {
                            if (j % 7 === 0 && j !== 0) {
                                w++;
                            }
                            $span = cal.days[w].childNodes[j % 7];
                        } else {
                            $span = cal.days[j];
                        }

                        klass = [];

                        s = this.isSelected(day);

                        if (s) klass.push({ '-1': classes.dayInRange, '1': classes.daySelected, 'true': classes.daySelected }[s]);

                        if (opts.mode === 'range') {
                            if (this._sel[0] && this._sel[0].startOf('day').yearDay() === day.clone().startOf('day').yearDay()) {
                                klass.push(classes.dayInRangeStart);
                            }
                            if (this._sel[1] && this._sel[1].startOf('day').yearDay() === day.clone().startOf('day').yearDay()) {
                                klass.push(classes.dayInRangeEnd);
                            }
                        }

                        if (opts.dayHeaderClickable && opts.mode === 'multiple') {
                            klass.push('k-day-week-' + day.weekday());
                            if ((s == true || s == 1) && !this.direction(day) && month.format('M') == day.format('M')) {
                                headers[day.weekday()] = headers[day.weekday()] + 1;
                            }
                        }

                        if (day.month() != month.month()) klass.push(classes.dayOutOfMonth);else klass.push(classes.dayInMonth);

                        if (!(this.blackout(day) || this.direction(day) || day.month() != month.month() && opts.dayOutOfMonthClickable === false) || s > 0) klass.push(classes.dayActive);

                        if (day.clone().startOf('day').yearDay() === getTodayYearDate()) klass.push(classes.dayToday);

                        dateString = day.format(this.settings.dayAttributeFormat);
                        if (opts.dateClassMap[dateString]) klass.push(opts.dateClassMap[dateString]);

                        $span.innerHTML = day.format(opts.dayNumberFormat);
                        $span.className = klass.join(' ');
                        $span.setAttribute('data-date', dateString);

                        day.add(1, 'days');
                    } while (++j < 42);
                    z = 0;
                    if (headers.length > 0) {
                        do {
                            if (headers[z] > 0) {
                                var firstDay = Kalendae.moment(month).startOf('month').weekday(z),
                                    startMonth = Kalendae.moment(month).startOf('month');
                                endMonth = Kalendae.moment(month).endOf('month');
                                t = 0;
                                do {
                                    if (firstDay >= startMonth && !this.direction(firstDay)) t++;
                                    firstDay.add(7, 'd');
                                } while (firstDay <= endMonth);

                                if (t == headers[z]) util.addClassName(cal.header.children[z], classes.daySelected);else util.removeClassName(cal.header.children[z], classes.daySelected);
                            }
                        } while (++z < headers.length);
                    }

                    month.add(1, 'months');
                } while (++i < c);

                if (opts.directionScrolling) {
                    var diffComparison = moment().startOf('day').hours(12);
                    diff = month.diff(diffComparison, 'months', true);

                    if (opts.direction === 'today-past' || opts.direction === 'past') {
                        if (diff <= 0) {
                            this.disableNextMonth = false;
                            util.removeClassName(this.container, classes.disableNextMonth);
                        } else {
                            this.disableNextMonth = true;
                            util.addClassName(this.container, classes.disableNextMonth);
                        }
                    } else if (opts.direction === 'today-future' || opts.direction === 'future') {
                        if (diff > opts.months) {
                            this.disablePreviousMonth = false;
                            util.removeClassName(this.container, classes.disablePreviousMonth);
                        } else {
                            this.disablePreviousMonth = true;
                            util.addClassName(this.container, classes.disablePreviousMonth);
                        }
                    }

                    if (opts.direction === 'today-past' || opts.direction === 'past') {
                        if (diff <= -11) {
                            this.disableNextYear = false;
                            util.removeClassName(this.container, classes.disableNextYear);
                        } else {
                            this.disableNextYear = true;
                            util.addClassName(this.container, classes.disableNextYear);
                        }
                    } else if (opts.direction === 'today-future' || opts.direction === 'future') {
                        if (diff > 11 + opts.months) {
                            this.disablePreviousYear = false;
                            util.removeClassName(this.container, classes.disablePreviousYear);
                        } else {
                            this.disablePreviousYear = true;
                            util.addClassName(this.container, classes.disablePreviousYear);
                        }
                    }
                }
            }
        };

        var parseDates = function (input, delimiter, format) {
            var output = [];

            if (typeof input === 'string') {
                input = input.split(delimiter);
            } else if (!util.isArray(input)) {
                input = [input];
            }

            var c = input.length,
                i = 0,
                m;

            do {
                if (input[i]) {
                    m = moment(input[i], format).hours(12);
                    if (m.isValid()) output.push(m);
                }
            } while (++i < c);

            return output;
        };

        window.Kalendae = Kalendae;

        var util = Kalendae.util = {

            isIE8: function () {
                return !!(/msie 8./i.test(navigator.appVersion) && !/opera/i.test(navigator.userAgent) && window.ActiveXObject && XDomainRequest && !window.msPerformance);
            },

            // ELEMENT FUNCTIONS

            $: function (elem) {
                return typeof elem == 'string' ? document.getElementById(elem) : elem;
            },

            $$: function (selector) {
                return document.querySelectorAll(selector);
            },

            make: function (tagName, attributes, attach) {
                var k,
                    e = document.createElement(tagName);
                if (!!attributes) for (k in attributes) if (attributes.hasOwnProperty(k)) e.setAttribute(k, attributes[k]);
                if (!!attach) attach.appendChild(e);
                return e;
            },

            // Returns true if the DOM element is visible, false if it's hidden.
            // Checks if display is anything other than none.
            isVisible: function (elem) {
                // shamelessly copied from jQuery
                return elem.offsetWidth > 0 || elem.offsetHeight > 0;
            },

            getStyle: function (elem, styleProp) {
                var y, s;
                if (elem.currentStyle) {
                    y = elem.currentStyle[styleProp];
                } else if (window.getComputedStyle) {
                    s = window.getComputedStyle(elem, null);
                    y = s ? s[styleProp] : '';
                }
                return y;
            },

            domReady: function (f) {
                var state = document.readyState;
                if (state === 'complete' || state === 'interactive') {
                    f();
                } else {
                    setTimeout(function () {
                        util.domReady(f);
                    }, 9);
                }
            },

            // Adds a listener callback to a DOM element which is fired on a specified
            // event.  Callback is sent the event object and the element that triggered the event
            addEvent: function (elem, eventName, callback) {
                var listener = function (event) {
                    event = event || window.event;
                    var target = event.target || event.srcElement;
                    var block = callback.apply(elem, [event, target]);
                    if (block === false) {
                        if (!!event.preventDefault) event.preventDefault();else {
                            event.returnValue = false;
                            event.cancelBubble = true;
                        }
                    }
                    return block;
                };
                if (elem.attachEvent) {
                    // IE only.  The "on" is mandatory.
                    elem.attachEvent("on" + eventName, listener);
                } else {
                    // Other browsers.
                    elem.addEventListener(eventName, listener, false);
                }
                return listener;
            },

            // Removes a listener callback from a DOM element which is fired on a specified
            // event.
            removeEvent: function (elem, event, listener) {
                if (elem.detachEvent) {
                    // IE only.  The "on" is mandatory.
                    elem.detachEvent("on" + event, listener);
                } else {
                    // Other browsers.
                    elem.removeEventListener(event, listener, false);
                }
            },

            fireEvent: function (elem, event) {
                if (document.createEvent) {
                    var e = document.createEvent('HTMLEvents');
                    e.initEvent(event, true, true);
                    elem.dispatchEvent(e);
                } else if (document.createEventObject) {
                    elem.fireEvent('on' + event);
                } else if (typeof elem['on' + event] == 'function') {
                    elem['on' + event]();
                }
            },

            hasClassName: function (elem, className) {
                //copied and modified from Prototype.js
                if (!(elem = util.$(elem))) return false;
                var eClassName = elem.className;
                return eClassName.length > 0 && (eClassName == className || new RegExp("(^|\\s)" + className + "(\\s|$)").test(eClassName));
            },

            addClassName: function (elem, className) {
                //copied and modified from Prototype.js
                if (!(elem = util.$(elem))) return;
                if (!util.hasClassName(elem, className)) elem.className += (elem.className ? ' ' : '') + className;
            },

            removeClassName: function (elem, className) {
                //copied and modified from Prototype.js
                if (!(elem = util.$(elem))) return;
                elem.className = util.trimString(elem.className.replace(new RegExp("(^|\\s+)" + className + "(\\s+|$)"), ' '));
            },

            isFixed: function (elem) {
                do {
                    if (util.getStyle(elem, 'position') === 'fixed') return true;
                } while (elem = elem.offsetParent);
                return false;
            },

            scrollContainer: function (elem) {
                do {
                    var overflow = util.getStyle(elem, 'overflow');
                    if (overflow === 'auto' || overflow === 'scroll') return elem;
                } while ((elem = elem.parentNode) && elem != window.document.body);
                return null;
            },

            getPosition: function (elem, isInner) {
                var x = elem.offsetLeft,
                    y = elem.offsetTop,
                    r = {};

                if (!isInner) {
                    while (elem = elem.offsetParent) {
                        x += elem.offsetLeft;
                        y += elem.offsetTop;
                    }
                }

                r[0] = r.left = x - 220;
                r[1] = r.top = y;
                return r;
            },

            getHeight: function (elem) {
                return elem.offsetHeight || elem.scrollHeight;
            },

            getWidth: function (elem) {
                return elem.offsetWidth || elem.scrollWidth;
            },

            // TEXT FUNCTIONS

            trimString: function (input) {
                return input.replace(/^\s+/, '').replace(/\s+$/, '');
            },

            // OBJECT FUNCTIONS

            merge: function () {
                /* Combines multiple objects into one.
                 * Syntax: util.extend([true], object1, object2, ... objectN)
                 * If first argument is true, function will merge recursively.
                 */

                var deep = arguments[0] === true,
                    d = {},
                    i = deep ? 1 : 0;

                var _c = function (a, b) {
                    if (typeof b !== 'object') return;
                    for (var k in b) if (b.hasOwnProperty(k)) {
                        //if property is an object or array, merge the contents instead of overwriting, if extend() was called as such
                        if (deep && typeof a[k] === 'object' && typeof b[k] === 'object') _update(a[k], b[k]);else a[k] = b[k];
                    }
                    return a;
                };

                for (; i < arguments.length; i++) {
                    _c(d, arguments[i]);
                }
                return d;
            },

            isArray: function (array) {
                return Object.prototype.toString.call(array) == "[object Array]";
            }
        };

        //auto-initializaiton code
        if (typeof document.addEventListener === 'function') Kalendae.util.domReady(function () {
            var els = util.$$('.auto-kal'),
                i = els.length,
                e,
                options,
                optionsRaw;

            while (i--) {
                e = els[i];
                optionsRaw = e.getAttribute('data-kal');
                options = optionsRaw == null || optionsRaw == "" ? {} : new Function('return {' + optionsRaw + '};')();

                if (e.tagName === 'INPUT') {
                    //if element is an input, bind a popup calendar to the input.
                    new Kalendae.Input(e, options);
                } else {
                    //otherwise, insert a flat calendar into the element.
                    new Kalendae(util.merge(options, { attachTo: e }));
                }
            }
        });
        Kalendae.Input = function (targetElement, options) {
            if (typeof document.addEventListener !== 'function' && !util.isIE8()) return;

            var $input = this.input = util.$(targetElement),
                overwriteInput,
                $closeButton,
                changing = false;

            if (!$input || $input.tagName !== 'INPUT') throw "First argument for Kalendae.Input must be an <input> element or a valid element id.";

            var self = this,
                classes = self.classes,
                opts = self.settings = util.merge(self.defaults, options);

            this._events = {};

            //force attachment to the body
            opts.attachTo = window.document.body;

            //if no override provided, use the input's contents
            if (!opts.selected) opts.selected = $input.value;else overwriteInput = true;

            //call our parent constructor
            Kalendae.call(self, opts);

            //create the close button
            if (opts.closeButton) {
                $closeButton = util.make('a', { 'class': classes.closeButton }, self.container);
                util.addEvent($closeButton, 'click', function () {
                    $input.blur();
                });
            }

            if (overwriteInput) $input.value = self.getSelected();

            var $container = self.container,
                noclose = false;

            $container.style.display = 'none';
            util.addClassName($container, classes.positioned);

            this._events.containerMouseDown = util.addEvent($container, 'mousedown', function (event, target) {
                noclose = true; //IE8 doesn't obey event blocking when it comes to focusing, so we have to do this shit.
            });

            this._events.documentMousedown = util.addEvent(window.document, 'mousedown', function (event, target) {
                noclose = false;
            });

            this._events.inputFocus = util.addEvent($input, 'focus', function () {
                changing = true; // prevent setSelected from altering the input contents.
                self.setSelected(this.value);
                changing = false;
                self.show();
            });

            this._events.inputBlur = util.addEvent($input, 'blur', function () {
                if (noclose && util.isIE8()) {
                    noclose = false;
                    $input.focus();
                } else self.hide();
            });

            this._events.inputKeyup = util.addEvent($input, 'keyup', function (event) {
                changing = true; // prevent setSelected from altering the input contents.
                var dateValue = parseDates(this.value, self.settings.parseSplitDelimiter, self.settings.format);

                // If the date in the field is parsable as a valid date, update.  Otherwise deselect and show default view.
                if (dateValue && dateValue.length && dateValue[0] && dateValue[0].year() > 1000) {
                    self.setSelected(this.value);
                } else {
                    self.setSelected('', null);
                    self.viewStartDate = moment(self.defaultView);
                    self.draw();
                }
                changing = false;
            });

            var $scrollContainer = util.scrollContainer($input);

            if ($scrollContainer) {

                // Hide calendar when $scrollContainer is scrolled
                util.addEvent($scrollContainer, 'scroll', function (event) {
                    $input.blur();
                });
            }

            self.subscribe('change', function () {
                if (changing) {
                    // the change event came from an internal modification, don't update the field contents
                    return;
                }
                $input.value = self.getSelected();
                util.fireEvent($input, 'change');
            });
        };

        Kalendae.Input.prototype = util.merge(Kalendae.prototype, {
            defaults: util.merge(Kalendae.prototype.defaults, {
                format: 'MM/DD/YYYY',
                side: 'bottom',
                closeButton: true,
                offsetLeft: 0,
                offsetTop: 0
            }),
            classes: util.merge(Kalendae.prototype.classes, {
                positioned: 'k-floating',
                closeButton: 'k-btn-close'
            }),

            show: function () {
                var $container = this.container,
                    style = $container.style,
                    $input = this.input,
                    pos = util.getPosition($input),
                    $scrollContainer = util.scrollContainer($input),
                    scrollTop = $scrollContainer ? $scrollContainer.scrollTop : 0,
                    scrollLeft = $scrollContainer ? $scrollContainer.scrollLeft : 0,
                    opts = this.settings;

                style.display = '';
                switch (opts.side) {
                    case 'left':
                        style.left = pos.left - util.getWidth($container) + opts.offsetLeft - scrollLeft + 'px';
                        style.top = pos.top + opts.offsetTop - scrollTop + 'px';
                        break;
                    case 'right':
                        style.left = pos.left + util.getWidth($input) - scrollLeft + 'px';
                        style.top = pos.top + opts.offsetTop - scrollTop + 'px';
                        break;
                    case 'top':
                        style.left = pos.left + opts.offsetLeft - scrollLeft + 'px';
                        style.top = pos.top - util.getHeight($container) + opts.offsetTop - scrollTop + 'px';
                        break;
                    case 'bottom right':
                        style.left = pos.left - util.getWidth($container) + util.getWidth($input) + opts.offsetLeft + 'px';
                        style.top = pos.top + util.getHeight($input) + opts.offsetTop - scrollTop + 'px';
                        break;
                    case 'bottom':
                    /* falls through */
                    default:
                        style.left = pos.left + opts.offsetLeft - scrollLeft + 'px';
                        style.top = pos.top + util.getHeight($input) + opts.offsetTop - scrollTop + 'px';
                        break;
                }

                style.position = util.isFixed($input) ? 'fixed' : 'absolute';
                this.publish('show', this);
            },

            hide: function () {
                this.container.style.display = 'none';
                this.publish('hide', this);
            },

            destroy: function () {
                var $container = this.container;
                var $input = this.input;

                util.removeEvent($container, 'mousedown', this._events.containerMousedown);

                util.removeEvent(window.document, 'mousedown', this._events.documentMousedown);

                util.removeEvent($input, 'focus', this._events.inputFocus);

                util.removeEvent($input, 'blur', this._events.inputBlur);

                util.removeEvent($input, 'keyup', this._events.inputKeyup);

                if ($container.parentNode) {
                    $container.parentNode.removeChild($container);
                }
            }
        });

        /*!
        * MinPubSub, modified for use on Kalendae
        * Copyright(c) 2011 Daniel Lamb <daniellmb.com>
        * https://github.com/daniellmb/MinPubSub
        * MIT Licensed
        */

        var MinPubSub = function (d) {

            if (!d) d = this;

            // the topic/subscription hash
            var cache = d.c_ || {}; //check for "c_" cache for unit testing

            d.publish = function ( /* String */topic, /* Object */target, /* Array? */args) {
                // summary:
                //		Publish some data on a named topic.
                // topic: String
                //		The channel to publish on
                // args: Array?
                //		The data to publish. Each array item is converted into an ordered
                //		arguments on the subscribed functions.
                //
                // example:
                //		Publish stuff on '/some/topic'. Anything subscribed will be called
                //		with a function signature like: function(a,b,c){ ... }
                //
                //		publish("/some/topic", ["a","b","c"]);

                var subs = cache[topic],
                    len = subs ? subs.length : 0,
                    r;

                //can change loop or reverse array if the order matters
                while (len--) {
                    r = subs[len].apply(target, args || []);
                    if (typeof r === 'boolean') return r;
                }
            };

            d.subscribe = function ( /* String */topic, /* Function */callback, /* Boolean */topPriority) {
                // summary:
                //		Register a callback on a named topic.
                // topic: String
                //		The channel to subscribe to
                // callback: Function
                //		The handler event. Anytime something is publish'ed on a
                //		subscribed channel, the callback will be called with the
                //		published array as ordered arguments.
                //
                // returns: Array
                //		A handle which can be used to unsubscribe this particular subscription.
                //
                // example:
                //		subscribe("/some/topic", function(a, b, c){ /* handle data */ });

                if (!cache[topic]) {
                    cache[topic] = [];
                }
                if (topPriority) cache[topic].push(callback);else cache[topic].unshift(callback);
                return [topic, callback]; // Array
            };

            d.unsubscribe = function ( /* Array */handle) {
                // summary:
                //		Disconnect a subscribed function for a topic.
                // handle: Array
                //		The return value from a subscribe call.
                // example:
                //		var handle = subscribe("/some/topic", function(){});
                //		unsubscribe(handle);

                var subs = cache[handle[0]],
                    callback = handle[1],
                    len = subs ? subs.length : 0;

                while (len--) {
                    if (subs[len] === callback) {
                        subs.splice(len, 1);
                    }
                }
            };
        }; //! moment.js
        //! version : 2.9.0
        //! authors : Tim Wood, Iskren Chernev, Moment.js contributors
        //! license : MIT
        //! momentjs.com

        (function (undefined) {
            /************************************
                Constants
            ************************************/

            var moment,
                VERSION = '2.9.0',

            // the global-scope this is NOT the global object in Node.js
            globalScope = typeof global !== 'undefined' && (typeof window === 'undefined' || window === global.window) ? global : this,
                oldGlobalMoment,
                round = Math.round,
                hasOwnProperty = Object.prototype.hasOwnProperty,
                i,
                YEAR = 0,
                MONTH = 1,
                DATE = 2,
                HOUR = 3,
                MINUTE = 4,
                SECOND = 5,
                MILLISECOND = 6,


            // internal storage for locale config files
            locales = {},


            // extra moment internal properties (plugins register props here)
            momentProperties = [],


            // check for nodeJS
            hasModule = typeof module !== 'undefined' && module && module.exports,


            // ASP.NET json date format regex
            aspNetJsonRegex = /^\/?Date\((\-?\d+)/i,
                aspNetTimeSpanJsonRegex = /(\-)?(?:(\d*)\.)?(\d+)\:(\d+)(?:\:(\d+)\.?(\d{3})?)?/,


            // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html
            // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere
            isoDurationRegex = /^(-)?P(?:(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?|([0-9,.]*)W)$/,


            // format tokens
            formattingTokens = /(\[[^\[]*\])|(\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Q|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,4}|x|X|zz?|ZZ?|.)/g,
                localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,


            // parsing token regexes
            parseTokenOneOrTwoDigits = /\d\d?/,
                // 0 - 99
            parseTokenOneToThreeDigits = /\d{1,3}/,
                // 0 - 999
            parseTokenOneToFourDigits = /\d{1,4}/,
                // 0 - 9999
            parseTokenOneToSixDigits = /[+\-]?\d{1,6}/,
                // -999,999 - 999,999
            parseTokenDigits = /\d+/,
                // nonzero number of digits
            parseTokenWord = /[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i,
                // any word (or two) characters or numbers including two/three word month in arabic.
            parseTokenTimezone = /Z|[\+\-]\d\d:?\d\d/gi,
                // +00:00 -00:00 +0000 -0000 or Z
            parseTokenT = /T/i,
                // T (ISO separator)
            parseTokenOffsetMs = /[\+\-]?\d+/,
                // 1234567890123
            parseTokenTimestampMs = /[\+\-]?\d+(\.\d{1,3})?/,
                // 123456789 123456789.123

            //strict parsing regexes
            parseTokenOneDigit = /\d/,
                // 0 - 9
            parseTokenTwoDigits = /\d\d/,
                // 00 - 99
            parseTokenThreeDigits = /\d{3}/,
                // 000 - 999
            parseTokenFourDigits = /\d{4}/,
                // 0000 - 9999
            parseTokenSixDigits = /[+-]?\d{6}/,
                // -999,999 - 999,999
            parseTokenSignedNumber = /[+-]?\d+/,
                // -inf - inf

            // iso 8601 regex
            // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)
            isoRegex = /^\s*(?:[+-]\d{6}|\d{4})-(?:(\d\d-\d\d)|(W\d\d$)|(W\d\d-\d)|(\d\d\d))((T| )(\d\d(:\d\d(:\d\d(\.\d+)?)?)?)?([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,
                isoFormat = 'YYYY-MM-DDTHH:mm:ssZ',
                isoDates = [['YYYYYY-MM-DD', /[+-]\d{6}-\d{2}-\d{2}/], ['YYYY-MM-DD', /\d{4}-\d{2}-\d{2}/], ['GGGG-[W]WW-E', /\d{4}-W\d{2}-\d/], ['GGGG-[W]WW', /\d{4}-W\d{2}/], ['YYYY-DDD', /\d{4}-\d{3}/]],


            // iso time formats and regexes
            isoTimes = [['HH:mm:ss.SSSS', /(T| )\d\d:\d\d:\d\d\.\d+/], ['HH:mm:ss', /(T| )\d\d:\d\d:\d\d/], ['HH:mm', /(T| )\d\d:\d\d/], ['HH', /(T| )\d\d/]],


            // timezone chunker '+10:00' > ['10', '00'] or '-1530' > ['-', '15', '30']
            parseTimezoneChunker = /([\+\-]|\d\d)/gi,


            // getter and setter names
            proxyGettersAndSetters = 'Date|Hours|Minutes|Seconds|Milliseconds'.split('|'),
                unitMillisecondFactors = {
                'Milliseconds': 1,
                'Seconds': 1e3,
                'Minutes': 6e4,
                'Hours': 36e5,
                'Days': 864e5,
                'Months': 2592e6,
                'Years': 31536e6
            },
                unitAliases = {
                ms: 'millisecond',
                s: 'second',
                m: 'minute',
                h: 'hour',
                d: 'day',
                D: 'date',
                w: 'week',
                W: 'isoWeek',
                M: 'month',
                Q: 'quarter',
                y: 'year',
                DDD: 'dayOfYear',
                e: 'weekday',
                E: 'isoWeekday',
                gg: 'weekYear',
                GG: 'isoWeekYear'
            },
                camelFunctions = {
                dayofyear: 'dayOfYear',
                isoweekday: 'isoWeekday',
                isoweek: 'isoWeek',
                weekyear: 'weekYear',
                isoweekyear: 'isoWeekYear'
            },


            // format function strings
            formatFunctions = {},


            // default relative time thresholds
            relativeTimeThresholds = {
                s: 45, // seconds to minute
                m: 45, // minutes to hour
                h: 22, // hours to day
                d: 26, // days to month
                M: 11 // months to year
            },


            // tokens to ordinalize and pad
            ordinalizeTokens = 'DDD w W M D d'.split(' '),
                paddedTokens = 'M D H h m s w W'.split(' '),
                formatTokenFunctions = {
                M: function () {
                    return this.month() + 1;
                },
                MMM: function (format) {
                    return this.localeData().monthsShort(this, format);
                },
                MMMM: function (format) {
                    return this.localeData().months(this, format);
                },
                D: function () {
                    return this.date();
                },
                DDD: function () {
                    return this.dayOfYear();
                },
                d: function () {
                    return this.day();
                },
                dd: function (format) {
                    return this.localeData().weekdaysMin(this, format);
                },
                ddd: function (format) {
                    return this.localeData().weekdaysShort(this, format);
                },
                dddd: function (format) {
                    return this.localeData().weekdays(this, format);
                },
                w: function () {
                    return this.week();
                },
                W: function () {
                    return this.isoWeek();
                },
                YY: function () {
                    return leftZeroFill(this.year() % 100, 2);
                },
                YYYY: function () {
                    return leftZeroFill(this.year(), 4);
                },
                YYYYY: function () {
                    return leftZeroFill(this.year(), 5);
                },
                YYYYYY: function () {
                    var y = this.year(),
                        sign = y >= 0 ? '+' : '-';
                    return sign + leftZeroFill(Math.abs(y), 6);
                },
                gg: function () {
                    return leftZeroFill(this.weekYear() % 100, 2);
                },
                gggg: function () {
                    return leftZeroFill(this.weekYear(), 4);
                },
                ggggg: function () {
                    return leftZeroFill(this.weekYear(), 5);
                },
                GG: function () {
                    return leftZeroFill(this.isoWeekYear() % 100, 2);
                },
                GGGG: function () {
                    return leftZeroFill(this.isoWeekYear(), 4);
                },
                GGGGG: function () {
                    return leftZeroFill(this.isoWeekYear(), 5);
                },
                e: function () {
                    return this.weekday();
                },
                E: function () {
                    return this.isoWeekday();
                },
                a: function () {
                    return this.localeData().meridiem(this.hours(), this.minutes(), true);
                },
                A: function () {
                    return this.localeData().meridiem(this.hours(), this.minutes(), false);
                },
                H: function () {
                    return this.hours();
                },
                h: function () {
                    return this.hours() % 12 || 12;
                },
                m: function () {
                    return this.minutes();
                },
                s: function () {
                    return this.seconds();
                },
                S: function () {
                    return toInt(this.milliseconds() / 100);
                },
                SS: function () {
                    return leftZeroFill(toInt(this.milliseconds() / 10), 2);
                },
                SSS: function () {
                    return leftZeroFill(this.milliseconds(), 3);
                },
                SSSS: function () {
                    return leftZeroFill(this.milliseconds(), 3);
                },
                Z: function () {
                    var a = this.utcOffset(),
                        b = '+';
                    if (a < 0) {
                        a = -a;
                        b = '-';
                    }
                    return b + leftZeroFill(toInt(a / 60), 2) + ':' + leftZeroFill(toInt(a) % 60, 2);
                },
                ZZ: function () {
                    var a = this.utcOffset(),
                        b = '+';
                    if (a < 0) {
                        a = -a;
                        b = '-';
                    }
                    return b + leftZeroFill(toInt(a / 60), 2) + leftZeroFill(toInt(a) % 60, 2);
                },
                z: function () {
                    return this.zoneAbbr();
                },
                zz: function () {
                    return this.zoneName();
                },
                x: function () {
                    return this.valueOf();
                },
                X: function () {
                    return this.unix();
                },
                Q: function () {
                    return this.quarter();
                }
            },
                deprecations = {},
                lists = ['months', 'monthsShort', 'weekdays', 'weekdaysShort', 'weekdaysMin'],
                updateInProgress = false;

            // Pick the first defined of two or three arguments. dfl comes from
            // default.
            function dfl(a, b, c) {
                switch (arguments.length) {
                    case 2:
                        return a != null ? a : b;
                    case 3:
                        return a != null ? a : b != null ? b : c;
                    default:
                        throw new Error('Implement me');
                }
            }

            function hasOwnProp(a, b) {
                return hasOwnProperty.call(a, b);
            }

            function defaultParsingFlags() {
                // We need to deep clone this object, and es5 standard is not very
                // helpful.
                return {
                    empty: false,
                    unusedTokens: [],
                    unusedInput: [],
                    overflow: -2,
                    charsLeftOver: 0,
                    nullInput: false,
                    invalidMonth: null,
                    invalidFormat: false,
                    userInvalidated: false,
                    iso: false
                };
            }

            function printMsg(msg) {
                if (moment.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn) {
                    console.warn('Deprecation warning: ' + msg);
                }
            }

            function deprecate(msg, fn) {
                var firstTime = true;
                return extend(function () {
                    if (firstTime) {
                        printMsg(msg);
                        firstTime = false;
                    }
                    return fn.apply(this, arguments);
                }, fn);
            }

            function deprecateSimple(name, msg) {
                if (!deprecations[name]) {
                    printMsg(msg);
                    deprecations[name] = true;
                }
            }

            function padToken(func, count) {
                return function (a) {
                    return leftZeroFill(func.call(this, a), count);
                };
            }
            function ordinalizeToken(func, period) {
                return function (a) {
                    return this.localeData().ordinal(func.call(this, a), period);
                };
            }

            function monthDiff(a, b) {
                // difference in months
                var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),

                // b is in (anchor - 1 month, anchor + 1 month)
                anchor = a.clone().add(wholeMonthDiff, 'months'),
                    anchor2,
                    adjust;

                if (b - anchor < 0) {
                    anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');
                    // linear across the month
                    adjust = (b - anchor) / (anchor - anchor2);
                } else {
                    anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');
                    // linear across the month
                    adjust = (b - anchor) / (anchor2 - anchor);
                }

                return -(wholeMonthDiff + adjust);
            }

            while (ordinalizeTokens.length) {
                i = ordinalizeTokens.pop();
                formatTokenFunctions[i + 'o'] = ordinalizeToken(formatTokenFunctions[i], i);
            }
            while (paddedTokens.length) {
                i = paddedTokens.pop();
                formatTokenFunctions[i + i] = padToken(formatTokenFunctions[i], 2);
            }
            formatTokenFunctions.DDDD = padToken(formatTokenFunctions.DDD, 3);

            function meridiemFixWrap(locale, hour, meridiem) {
                var isPm;

                if (meridiem == null) {
                    // nothing to do
                    return hour;
                }
                if (locale.meridiemHour != null) {
                    return locale.meridiemHour(hour, meridiem);
                } else if (locale.isPM != null) {
                    // Fallback
                    isPm = locale.isPM(meridiem);
                    if (isPm && hour < 12) {
                        hour += 12;
                    }
                    if (!isPm && hour === 12) {
                        hour = 0;
                    }
                    return hour;
                } else {
                    // thie is not supposed to happen
                    return hour;
                }
            }

            /************************************
                Constructors
            ************************************/

            function Locale() {}

            // Moment prototype object
            function Moment(config, skipOverflow) {
                if (skipOverflow !== false) {
                    checkOverflow(config);
                }
                copyConfig(this, config);
                this._d = new Date(+config._d);
                // Prevent infinite loop in case updateOffset creates new moment
                // objects.
                if (updateInProgress === false) {
                    updateInProgress = true;
                    moment.updateOffset(this);
                    updateInProgress = false;
                }
            }

            // Duration Constructor
            function Duration(duration) {
                var normalizedInput = normalizeObjectUnits(duration),
                    years = normalizedInput.year || 0,
                    quarters = normalizedInput.quarter || 0,
                    months = normalizedInput.month || 0,
                    weeks = normalizedInput.week || 0,
                    days = normalizedInput.day || 0,
                    hours = normalizedInput.hour || 0,
                    minutes = normalizedInput.minute || 0,
                    seconds = normalizedInput.second || 0,
                    milliseconds = normalizedInput.millisecond || 0;

                // representation for dateAddRemove
                this._milliseconds = +milliseconds + seconds * 1e3 + // 1000
                minutes * 6e4 + // 1000 * 60
                hours * 36e5; // 1000 * 60 * 60
                // Because of dateAddRemove treats 24 hours as different from a
                // day when working around DST, we need to store them separately
                this._days = +days + weeks * 7;
                // It is impossible translate months into days without knowing
                // which months you are are talking about, so we have to store
                // it separately.
                this._months = +months + quarters * 3 + years * 12;

                this._data = {};

                this._locale = moment.localeData();

                this._bubble();
            }

            /************************************
                Helpers
            ************************************/

            function extend(a, b) {
                for (var i in b) {
                    if (hasOwnProp(b, i)) {
                        a[i] = b[i];
                    }
                }

                if (hasOwnProp(b, 'toString')) {
                    a.toString = b.toString;
                }

                if (hasOwnProp(b, 'valueOf')) {
                    a.valueOf = b.valueOf;
                }

                return a;
            }

            function copyConfig(to, from) {
                var i, prop, val;

                if (typeof from._isAMomentObject !== 'undefined') {
                    to._isAMomentObject = from._isAMomentObject;
                }
                if (typeof from._i !== 'undefined') {
                    to._i = from._i;
                }
                if (typeof from._f !== 'undefined') {
                    to._f = from._f;
                }
                if (typeof from._l !== 'undefined') {
                    to._l = from._l;
                }
                if (typeof from._strict !== 'undefined') {
                    to._strict = from._strict;
                }
                if (typeof from._tzm !== 'undefined') {
                    to._tzm = from._tzm;
                }
                if (typeof from._isUTC !== 'undefined') {
                    to._isUTC = from._isUTC;
                }
                if (typeof from._offset !== 'undefined') {
                    to._offset = from._offset;
                }
                if (typeof from._pf !== 'undefined') {
                    to._pf = from._pf;
                }
                if (typeof from._locale !== 'undefined') {
                    to._locale = from._locale;
                }

                if (momentProperties.length > 0) {
                    for (i in momentProperties) {
                        prop = momentProperties[i];
                        val = from[prop];
                        if (typeof val !== 'undefined') {
                            to[prop] = val;
                        }
                    }
                }

                return to;
            }

            function absRound(number) {
                if (number < 0) {
                    return Math.ceil(number);
                } else {
                    return Math.floor(number);
                }
            }

            // left zero fill a number
            // see http://jsperf.com/left-zero-filling for performance comparison
            function leftZeroFill(number, targetLength, forceSign) {
                var output = '' + Math.abs(number),
                    sign = number >= 0;

                while (output.length < targetLength) {
                    output = '0' + output;
                }
                return (sign ? forceSign ? '+' : '' : '-') + output;
            }

            function positiveMomentsDifference(base, other) {
                var res = { milliseconds: 0, months: 0 };

                res.months = other.month() - base.month() + (other.year() - base.year()) * 12;
                if (base.clone().add(res.months, 'M').isAfter(other)) {
                    --res.months;
                }

                res.milliseconds = +other - +base.clone().add(res.months, 'M');

                return res;
            }

            function momentsDifference(base, other) {
                var res;
                other = makeAs(other, base);
                if (base.isBefore(other)) {
                    res = positiveMomentsDifference(base, other);
                } else {
                    res = positiveMomentsDifference(other, base);
                    res.milliseconds = -res.milliseconds;
                    res.months = -res.months;
                }

                return res;
            }

            // TODO: remove 'name' arg after deprecation is removed
            function createAdder(direction, name) {
                return function (val, period) {
                    var dur, tmp;
                    //invert the arguments, but complain about it
                    if (period !== null && !isNaN(+period)) {
                        deprecateSimple(name, 'moment().' + name + '(period, number) is deprecated. Please use moment().' + name + '(number, period).');
                        tmp = val;val = period;period = tmp;
                    }

                    val = typeof val === 'string' ? +val : val;
                    dur = moment.duration(val, period);
                    addOrSubtractDurationFromMoment(this, dur, direction);
                    return this;
                };
            }

            function addOrSubtractDurationFromMoment(mom, duration, isAdding, updateOffset) {
                var milliseconds = duration._milliseconds,
                    days = duration._days,
                    months = duration._months;
                updateOffset = updateOffset == null ? true : updateOffset;

                if (milliseconds) {
                    mom._d.setTime(+mom._d + milliseconds * isAdding);
                }
                if (days) {
                    rawSetter(mom, 'Date', rawGetter(mom, 'Date') + days * isAdding);
                }
                if (months) {
                    rawMonthSetter(mom, rawGetter(mom, 'Month') + months * isAdding);
                }
                if (updateOffset) {
                    moment.updateOffset(mom, days || months);
                }
            }

            // check if is an array
            function isArray(input) {
                return Object.prototype.toString.call(input) === '[object Array]';
            }

            function isDate(input) {
                return Object.prototype.toString.call(input) === '[object Date]' || input instanceof Date;
            }

            // compare two arrays, return the number of differences
            function compareArrays(array1, array2, dontConvert) {
                var len = Math.min(array1.length, array2.length),
                    lengthDiff = Math.abs(array1.length - array2.length),
                    diffs = 0,
                    i;
                for (i = 0; i < len; i++) {
                    if (dontConvert && array1[i] !== array2[i] || !dontConvert && toInt(array1[i]) !== toInt(array2[i])) {
                        diffs++;
                    }
                }
                return diffs + lengthDiff;
            }

            function normalizeUnits(units) {
                if (units) {
                    var lowered = units.toLowerCase().replace(/(.)s$/, '$1');
                    units = unitAliases[units] || camelFunctions[lowered] || lowered;
                }
                return units;
            }

            function normalizeObjectUnits(inputObject) {
                var normalizedInput = {},
                    normalizedProp,
                    prop;

                for (prop in inputObject) {
                    if (hasOwnProp(inputObject, prop)) {
                        normalizedProp = normalizeUnits(prop);
                        if (normalizedProp) {
                            normalizedInput[normalizedProp] = inputObject[prop];
                        }
                    }
                }

                return normalizedInput;
            }

            function makeList(field) {
                var count, setter;

                if (field.indexOf('week') === 0) {
                    count = 7;
                    setter = 'day';
                } else if (field.indexOf('month') === 0) {
                    count = 12;
                    setter = 'month';
                } else {
                    return;
                }

                moment[field] = function (format, index) {
                    var i,
                        getter,
                        method = moment._locale[field],
                        results = [];

                    if (typeof format === 'number') {
                        index = format;
                        format = undefined;
                    }

                    getter = function (i) {
                        var m = moment().utc().set(setter, i);
                        return method.call(moment._locale, m, format || '');
                    };

                    if (index != null) {
                        return getter(index);
                    } else {
                        for (i = 0; i < count; i++) {
                            results.push(getter(i));
                        }
                        return results;
                    }
                };
            }

            function toInt(argumentForCoercion) {
                var coercedNumber = +argumentForCoercion,
                    value = 0;

                if (coercedNumber !== 0 && isFinite(coercedNumber)) {
                    if (coercedNumber >= 0) {
                        value = Math.floor(coercedNumber);
                    } else {
                        value = Math.ceil(coercedNumber);
                    }
                }

                return value;
            }

            function daysInMonth(year, month) {
                return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();
            }

            function weeksInYear(year, dow, doy) {
                return weekOfYear(moment([year, 11, 31 + dow - doy]), dow, doy).week;
            }

            function daysInYear(year) {
                return isLeapYear(year) ? 366 : 365;
            }

            function isLeapYear(year) {
                return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;
            }

            function checkOverflow(m) {
                var overflow;
                if (m._a && m._pf.overflow === -2) {
                    overflow = m._a[MONTH] < 0 || m._a[MONTH] > 11 ? MONTH : m._a[DATE] < 1 || m._a[DATE] > daysInMonth(m._a[YEAR], m._a[MONTH]) ? DATE : m._a[HOUR] < 0 || m._a[HOUR] > 24 || m._a[HOUR] === 24 && (m._a[MINUTE] !== 0 || m._a[SECOND] !== 0 || m._a[MILLISECOND] !== 0) ? HOUR : m._a[MINUTE] < 0 || m._a[MINUTE] > 59 ? MINUTE : m._a[SECOND] < 0 || m._a[SECOND] > 59 ? SECOND : m._a[MILLISECOND] < 0 || m._a[MILLISECOND] > 999 ? MILLISECOND : -1;

                    if (m._pf._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {
                        overflow = DATE;
                    }

                    m._pf.overflow = overflow;
                }
            }

            function isValid(m) {
                if (m._isValid == null) {
                    m._isValid = !isNaN(m._d.getTime()) && m._pf.overflow < 0 && !m._pf.empty && !m._pf.invalidMonth && !m._pf.nullInput && !m._pf.invalidFormat && !m._pf.userInvalidated;

                    if (m._strict) {
                        m._isValid = m._isValid && m._pf.charsLeftOver === 0 && m._pf.unusedTokens.length === 0 && m._pf.bigHour === undefined;
                    }
                }
                return m._isValid;
            }

            function normalizeLocale(key) {
                return key ? key.toLowerCase().replace('_', '-') : key;
            }

            // pick the locale from the array
            // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
            // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root
            function chooseLocale(names) {
                var i = 0,
                    j,
                    next,
                    locale,
                    split;

                while (i < names.length) {
                    split = normalizeLocale(names[i]).split('-');
                    j = split.length;
                    next = normalizeLocale(names[i + 1]);
                    next = next ? next.split('-') : null;
                    while (j > 0) {
                        locale = loadLocale(split.slice(0, j).join('-'));
                        if (locale) {
                            return locale;
                        }
                        if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {
                            //the next array item is better than a shallower substring of this one
                            break;
                        }
                        j--;
                    }
                    i++;
                }
                return null;
            }

            function loadLocale(name) {
                var oldLocale = null;
                if (!locales[name] && hasModule) {
                    try {
                        oldLocale = moment.locale();
                        !(function webpackMissingModule() { var e = new Error("Cannot find module \"./locale\""); e.code = 'MODULE_NOT_FOUND'; throw e; }());
                        // because defineLocale currently also sets the global locale, we want to undo that for lazy loaded locales
                        moment.locale(oldLocale);
                    } catch (e) {}
                }
                return locales[name];
            }

            // Return a moment from input, that is local/utc/utcOffset equivalent to
            // model.
            function makeAs(input, model) {
                var res, diff;
                if (model._isUTC) {
                    res = model.clone();
                    diff = (moment.isMoment(input) || isDate(input) ? +input : +moment(input)) - +res;
                    // Use low-level api, because this fn is low-level api.
                    res._d.setTime(+res._d + diff);
                    moment.updateOffset(res, false);
                    return res;
                } else {
                    return moment(input).local();
                }
            }

            /************************************
                Locale
            ************************************/

            extend(Locale.prototype, {

                set: function (config) {
                    var prop, i;
                    for (i in config) {
                        prop = config[i];
                        if (typeof prop === 'function') {
                            this[i] = prop;
                        } else {
                            this['_' + i] = prop;
                        }
                    }
                    // Lenient ordinal parsing accepts just a number in addition to
                    // number + (possibly) stuff coming from _ordinalParseLenient.
                    this._ordinalParseLenient = new RegExp(this._ordinalParse.source + '|' + /\d{1,2}/.source);
                },

                // _months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
                _months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
                months: function (m) {
                    return this._months[m.month()];
                },

                _monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
                monthsShort: function (m) {
                    return this._monthsShort[m.month()];
                },

                monthsParse: function (monthName, format, strict) {
                    var i, mom, regex;

                    if (!this._monthsParse) {
                        this._monthsParse = [];
                        this._longMonthsParse = [];
                        this._shortMonthsParse = [];
                    }

                    for (i = 0; i < 12; i++) {
                        // make the regex if we don't have it already
                        mom = moment.utc([2000, i]);
                        if (strict && !this._longMonthsParse[i]) {
                            this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');
                            this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');
                        }
                        if (!strict && !this._monthsParse[i]) {
                            regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');
                            this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');
                        }
                        // test the regex
                        if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {
                            return i;
                        } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {
                            return i;
                        } else if (!strict && this._monthsParse[i].test(monthName)) {
                            return i;
                        }
                    }
                },

                _weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
                weekdays: function (m) {
                    return this._weekdays[m.day()];
                },

                // _weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
                _weekdaysShort: '周日_周一_周二_周三_周四_周五_周六'.split('_'),
                weekdaysShort: function (m) {
                    return this._weekdaysShort[m.day()];
                },

                // _weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
                _weekdaysMin: '日_一_二_三_四_五_六'.split('_'),
                weekdaysMin: function (m) {
                    return this._weekdaysMin[m.day()];
                },

                weekdaysParse: function (weekdayName) {
                    var i, mom, regex;

                    if (!this._weekdaysParse) {
                        this._weekdaysParse = [];
                    }

                    for (i = 0; i < 7; i++) {
                        // make the regex if we don't have it already
                        if (!this._weekdaysParse[i]) {
                            mom = moment([2000, 1]).day(i);
                            regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');
                            this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');
                        }
                        // test the regex
                        if (this._weekdaysParse[i].test(weekdayName)) {
                            return i;
                        }
                    }
                },

                _longDateFormat: {
                    LTS: 'h:mm:ss A',
                    LT: 'h:mm A',
                    L: 'MM/DD/YYYY',
                    LL: 'MMMM D, YYYY',
                    LLL: 'MMMM D, YYYY LT',
                    LLLL: 'dddd, MMMM D, YYYY LT'
                },
                longDateFormat: function (key) {
                    var output = this._longDateFormat[key];
                    if (!output && this._longDateFormat[key.toUpperCase()]) {
                        output = this._longDateFormat[key.toUpperCase()].replace(/MMMM|MM|DD|dddd/g, function (val) {
                            return val.slice(1);
                        });
                        this._longDateFormat[key] = output;
                    }
                    return output;
                },

                isPM: function (input) {
                    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays
                    // Using charAt should be more compatible.
                    return (input + '').toLowerCase().charAt(0) === 'p';
                },

                _meridiemParse: /[ap]\.?m?\.?/i,
                meridiem: function (hours, minutes, isLower) {
                    if (hours > 11) {
                        return isLower ? 'pm' : 'PM';
                    } else {
                        return isLower ? 'am' : 'AM';
                    }
                },

                _calendar: {
                    sameDay: '[Today at] LT',
                    nextDay: '[Tomorrow at] LT',
                    nextWeek: 'dddd [at] LT',
                    lastDay: '[Yesterday at] LT',
                    lastWeek: '[Last] dddd [at] LT',
                    sameElse: 'L'
                },
                calendar: function (key, mom, now) {
                    var output = this._calendar[key];
                    return typeof output === 'function' ? output.apply(mom, [now]) : output;
                },

                _relativeTime: {
                    future: 'in %s',
                    past: '%s ago',
                    s: 'a few seconds',
                    m: 'a minute',
                    mm: '%d minutes',
                    h: 'an hour',
                    hh: '%d hours',
                    d: 'a day',
                    dd: '%d days',
                    M: 'a month',
                    MM: '%d months',
                    y: 'a year',
                    yy: '%d years'
                },

                relativeTime: function (number, withoutSuffix, string, isFuture) {
                    var output = this._relativeTime[string];
                    return typeof output === 'function' ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number);
                },

                pastFuture: function (diff, output) {
                    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];
                    return typeof format === 'function' ? format(output) : format.replace(/%s/i, output);
                },

                ordinal: function (number) {
                    return this._ordinal.replace('%d', number);
                },
                _ordinal: '%d',
                _ordinalParse: /\d{1,2}/,

                preparse: function (string) {
                    return string;
                },

                postformat: function (string) {
                    return string;
                },

                week: function (mom) {
                    return weekOfYear(mom, this._week.dow, this._week.doy).week;
                },

                _week: {
                    dow: 0, // Sunday is the first day of the week.
                    doy: 6 // The week that contains Jan 1st is the first week of the year.
                },

                firstDayOfWeek: function () {
                    return this._week.dow;
                },

                firstDayOfYear: function () {
                    return this._week.doy;
                },

                _invalidDate: 'Invalid date',
                invalidDate: function () {
                    return this._invalidDate;
                }
            });

            /************************************
                Formatting
            ************************************/

            function removeFormattingTokens(input) {
                if (input.match(/\[[\s\S]/)) {
                    return input.replace(/^\[|\]$/g, '');
                }
                return input.replace(/\\/g, '');
            }

            function makeFormatFunction(format) {
                var array = format.match(formattingTokens),
                    i,
                    length;

                for (i = 0, length = array.length; i < length; i++) {
                    if (formatTokenFunctions[array[i]]) {
                        array[i] = formatTokenFunctions[array[i]];
                    } else {
                        array[i] = removeFormattingTokens(array[i]);
                    }
                }

                return function (mom) {
                    var output = '';
                    for (i = 0; i < length; i++) {
                        output += array[i] instanceof Function ? array[i].call(mom, format) : array[i];
                    }
                    return output;
                };
            }

            // format date using native date object
            function formatMoment(m, format) {
                if (!m.isValid()) {
                    return m.localeData().invalidDate();
                }

                format = expandFormat(format, m.localeData());

                if (!formatFunctions[format]) {
                    formatFunctions[format] = makeFormatFunction(format);
                }

                return formatFunctions[format](m);
            }

            function expandFormat(format, locale) {
                var i = 5;

                function replaceLongDateFormatTokens(input) {
                    return locale.longDateFormat(input) || input;
                }

                localFormattingTokens.lastIndex = 0;
                while (i >= 0 && localFormattingTokens.test(format)) {
                    format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);
                    localFormattingTokens.lastIndex = 0;
                    i -= 1;
                }

                return format;
            }

            /************************************
                Parsing
            ************************************/

            // get the regex to find the next token
            function getParseRegexForToken(token, config) {
                var a,
                    strict = config._strict;
                switch (token) {
                    case 'Q':
                        return parseTokenOneDigit;
                    case 'DDDD':
                        return parseTokenThreeDigits;
                    case 'YYYY':
                    case 'GGGG':
                    case 'gggg':
                        return strict ? parseTokenFourDigits : parseTokenOneToFourDigits;
                    case 'Y':
                    case 'G':
                    case 'g':
                        return parseTokenSignedNumber;
                    case 'YYYYYY':
                    case 'YYYYY':
                    case 'GGGGG':
                    case 'ggggg':
                        return strict ? parseTokenSixDigits : parseTokenOneToSixDigits;
                    case 'S':
                        if (strict) {
                            return parseTokenOneDigit;
                        }
                    /* falls through */
                    case 'SS':
                        if (strict) {
                            return parseTokenTwoDigits;
                        }
                    /* falls through */
                    case 'SSS':
                        if (strict) {
                            return parseTokenThreeDigits;
                        }
                    /* falls through */
                    case 'DDD':
                        return parseTokenOneToThreeDigits;
                    case 'MMM':
                    case 'MMMM':
                    case 'dd':
                    case 'ddd':
                    case 'dddd':
                        return parseTokenWord;
                    case 'a':
                    case 'A':
                        return config._locale._meridiemParse;
                    case 'x':
                        return parseTokenOffsetMs;
                    case 'X':
                        return parseTokenTimestampMs;
                    case 'Z':
                    case 'ZZ':
                        return parseTokenTimezone;
                    case 'T':
                        return parseTokenT;
                    case 'SSSS':
                        return parseTokenDigits;
                    case 'MM':
                    case 'DD':
                    case 'YY':
                    case 'GG':
                    case 'gg':
                    case 'HH':
                    case 'hh':
                    case 'mm':
                    case 'ss':
                    case 'ww':
                    case 'WW':
                        return strict ? parseTokenTwoDigits : parseTokenOneOrTwoDigits;
                    case 'M':
                    case 'D':
                    case 'd':
                    case 'H':
                    case 'h':
                    case 'm':
                    case 's':
                    case 'w':
                    case 'W':
                    case 'e':
                    case 'E':
                        return parseTokenOneOrTwoDigits;
                    case 'Do':
                        return strict ? config._locale._ordinalParse : config._locale._ordinalParseLenient;
                    default:
                        a = new RegExp(regexpEscape(unescapeFormat(token.replace('\\', '')), 'i'));
                        return a;
                }
            }

            function utcOffsetFromString(string) {
                string = string || '';
                var possibleTzMatches = string.match(parseTokenTimezone) || [],
                    tzChunk = possibleTzMatches[possibleTzMatches.length - 1] || [],
                    parts = (tzChunk + '').match(parseTimezoneChunker) || ['-', 0, 0],
                    minutes = +(parts[1] * 60) + toInt(parts[2]);

                return parts[0] === '+' ? minutes : -minutes;
            }

            // function to convert string input to date
            function addTimeToArrayFromToken(token, input, config) {
                var a,
                    datePartArray = config._a;

                switch (token) {
                    // QUARTER
                    case 'Q':
                        if (input != null) {
                            datePartArray[MONTH] = (toInt(input) - 1) * 3;
                        }
                        break;
                    // MONTH
                    case 'M': // fall through to MM
                    case 'MM':
                        if (input != null) {
                            datePartArray[MONTH] = toInt(input) - 1;
                        }
                        break;
                    case 'MMM': // fall through to MMMM
                    case 'MMMM':
                        a = config._locale.monthsParse(input, token, config._strict);
                        // if we didn't find a month name, mark the date as invalid.
                        if (a != null) {
                            datePartArray[MONTH] = a;
                        } else {
                            config._pf.invalidMonth = input;
                        }
                        break;
                    // DAY OF MONTH
                    case 'D': // fall through to DD
                    case 'DD':
                        if (input != null) {
                            datePartArray[DATE] = toInt(input);
                        }
                        break;
                    case 'Do':
                        if (input != null) {
                            datePartArray[DATE] = toInt(parseInt(input.match(/\d{1,2}/)[0], 10));
                        }
                        break;
                    // DAY OF YEAR
                    case 'DDD': // fall through to DDDD
                    case 'DDDD':
                        if (input != null) {
                            config._dayOfYear = toInt(input);
                        }

                        break;
                    // YEAR
                    case 'YY':
                        datePartArray[YEAR] = moment.parseTwoDigitYear(input);
                        break;
                    case 'YYYY':
                    case 'YYYYY':
                    case 'YYYYYY':
                        datePartArray[YEAR] = toInt(input);
                        break;
                    // AM / PM
                    case 'a': // fall through to A
                    case 'A':
                        config._meridiem = input;
                        // config._isPm = config._locale.isPM(input);
                        break;
                    // HOUR
                    case 'h': // fall through to hh
                    case 'hh':
                        config._pf.bigHour = true;
                    /* falls through */
                    case 'H': // fall through to HH
                    case 'HH':
                        datePartArray[HOUR] = toInt(input);
                        break;
                    // MINUTE
                    case 'm': // fall through to mm
                    case 'mm':
                        datePartArray[MINUTE] = toInt(input);
                        break;
                    // SECOND
                    case 's': // fall through to ss
                    case 'ss':
                        datePartArray[SECOND] = toInt(input);
                        break;
                    // MILLISECOND
                    case 'S':
                    case 'SS':
                    case 'SSS':
                    case 'SSSS':
                        datePartArray[MILLISECOND] = toInt(('0.' + input) * 1000);
                        break;
                    // UNIX OFFSET (MILLISECONDS)
                    case 'x':
                        config._d = new Date(toInt(input));
                        break;
                    // UNIX TIMESTAMP WITH MS
                    case 'X':
                        config._d = new Date(parseFloat(input) * 1000);
                        break;
                    // TIMEZONE
                    case 'Z': // fall through to ZZ
                    case 'ZZ':
                        config._useUTC = true;
                        config._tzm = utcOffsetFromString(input);
                        break;
                    // WEEKDAY - human
                    case 'dd':
                    case 'ddd':
                    case 'dddd':
                        a = config._locale.weekdaysParse(input);
                        // if we didn't get a weekday name, mark the date as invalid
                        if (a != null) {
                            config._w = config._w || {};
                            config._w['d'] = a;
                        } else {
                            config._pf.invalidWeekday = input;
                        }
                        break;
                    // WEEK, WEEK DAY - numeric
                    case 'w':
                    case 'ww':
                    case 'W':
                    case 'WW':
                    case 'd':
                    case 'e':
                    case 'E':
                        token = token.substr(0, 1);
                    /* falls through */
                    case 'gggg':
                    case 'GGGG':
                    case 'GGGGG':
                        token = token.substr(0, 2);
                        if (input) {
                            config._w = config._w || {};
                            config._w[token] = toInt(input);
                        }
                        break;
                    case 'gg':
                    case 'GG':
                        config._w = config._w || {};
                        config._w[token] = moment.parseTwoDigitYear(input);
                }
            }

            function dayOfYearFromWeekInfo(config) {
                var w, weekYear, week, weekday, dow, doy, temp;

                w = config._w;
                if (w.GG != null || w.W != null || w.E != null) {
                    dow = 1;
                    doy = 4;

                    // TODO: We need to take the current isoWeekYear, but that depends on
                    // how we interpret now (local, utc, fixed offset). So create
                    // a now version of current config (take local/utc/offset flags, and
                    // create now).
                    weekYear = dfl(w.GG, config._a[YEAR], weekOfYear(moment(), 1, 4).year);
                    week = dfl(w.W, 1);
                    weekday = dfl(w.E, 1);
                } else {
                    dow = config._locale._week.dow;
                    doy = config._locale._week.doy;

                    weekYear = dfl(w.gg, config._a[YEAR], weekOfYear(moment(), dow, doy).year);
                    week = dfl(w.w, 1);

                    if (w.d != null) {
                        // weekday -- low day numbers are considered next week
                        weekday = w.d;
                        if (weekday < dow) {
                            ++week;
                        }
                    } else if (w.e != null) {
                        // local weekday -- counting starts from begining of week
                        weekday = w.e + dow;
                    } else {
                        // default to begining of week
                        weekday = dow;
                    }
                }
                temp = dayOfYearFromWeeks(weekYear, week, weekday, doy, dow);

                config._a[YEAR] = temp.year;
                config._dayOfYear = temp.dayOfYear;
            }

            // convert an array to a date.
            // the array should mirror the parameters below
            // note: all values past the year are optional and will default to the lowest possible value.
            // [year, month, day , hour, minute, second, millisecond]
            function dateFromConfig(config) {
                var i,
                    date,
                    input = [],
                    currentDate,
                    yearToUse;

                if (config._d) {
                    return;
                }

                currentDate = currentDateArray(config);

                //compute day of the year from weeks and weekdays
                if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {
                    dayOfYearFromWeekInfo(config);
                }

                //if the day of the year is set, figure out what it is
                if (config._dayOfYear) {
                    yearToUse = dfl(config._a[YEAR], currentDate[YEAR]);

                    if (config._dayOfYear > daysInYear(yearToUse)) {
                        config._pf._overflowDayOfYear = true;
                    }

                    date = makeUTCDate(yearToUse, 0, config._dayOfYear);
                    config._a[MONTH] = date.getUTCMonth();
                    config._a[DATE] = date.getUTCDate();
                }

                // Default to current date.
                // * if no year, month, day of month are given, default to today
                // * if day of month is given, default month and year
                // * if month is given, default only year
                // * if year is given, don't default anything
                for (i = 0; i < 3 && config._a[i] == null; ++i) {
                    config._a[i] = input[i] = currentDate[i];
                }

                // Zero out whatever was not defaulted, including time
                for (; i < 7; i++) {
                    config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];
                }

                // Check for 24:00:00.000
                if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {
                    config._nextDay = true;
                    config._a[HOUR] = 0;
                }

                config._d = (config._useUTC ? makeUTCDate : makeDate).apply(null, input);
                // Apply timezone offset from input. The actual utcOffset can be changed
                // with parseZone.
                if (config._tzm != null) {
                    config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
                }

                if (config._nextDay) {
                    config._a[HOUR] = 24;
                }
            }

            function dateFromObject(config) {
                var normalizedInput;

                if (config._d) {
                    return;
                }

                normalizedInput = normalizeObjectUnits(config._i);
                config._a = [normalizedInput.year, normalizedInput.month, normalizedInput.day || normalizedInput.date, normalizedInput.hour, normalizedInput.minute, normalizedInput.second, normalizedInput.millisecond];

                dateFromConfig(config);
            }

            function currentDateArray(config) {
                var now = new Date();
                if (config._useUTC) {
                    return [now.getUTCFullYear(), now.getUTCMonth(), now.getUTCDate()];
                } else {
                    return [now.getFullYear(), now.getMonth(), now.getDate()];
                }
            }

            // date from string and format string
            function makeDateFromStringAndFormat(config) {
                if (config._f === moment.ISO_8601) {
                    parseISO(config);
                    return;
                }

                config._a = [];
                config._pf.empty = true;

                // This array is used to make a Date, either with `new Date` or `Date.UTC`
                var string = '' + config._i,
                    i,
                    parsedInput,
                    tokens,
                    token,
                    skipped,
                    stringLength = string.length,
                    totalParsedInputLength = 0;

                tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];

                for (i = 0; i < tokens.length; i++) {
                    token = tokens[i];
                    parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];
                    if (parsedInput) {
                        skipped = string.substr(0, string.indexOf(parsedInput));
                        if (skipped.length > 0) {
                            config._pf.unusedInput.push(skipped);
                        }
                        string = string.slice(string.indexOf(parsedInput) + parsedInput.length);
                        totalParsedInputLength += parsedInput.length;
                    }
                    // don't parse if it's not a known token
                    if (formatTokenFunctions[token]) {
                        if (parsedInput) {
                            config._pf.empty = false;
                        } else {
                            config._pf.unusedTokens.push(token);
                        }
                        addTimeToArrayFromToken(token, parsedInput, config);
                    } else if (config._strict && !parsedInput) {
                        config._pf.unusedTokens.push(token);
                    }
                }

                // add remaining unparsed input length to the string
                config._pf.charsLeftOver = stringLength - totalParsedInputLength;
                if (string.length > 0) {
                    config._pf.unusedInput.push(string);
                }

                // clear _12h flag if hour is <= 12
                if (config._pf.bigHour === true && config._a[HOUR] <= 12) {
                    config._pf.bigHour = undefined;
                }
                // handle meridiem
                config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);
                dateFromConfig(config);
                checkOverflow(config);
            }

            function unescapeFormat(s) {
                return s.replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (matched, p1, p2, p3, p4) {
                    return p1 || p2 || p3 || p4;
                });
            }

            // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript
            function regexpEscape(s) {
                return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
            }

            // date from string and array of format strings
            function makeDateFromStringAndArray(config) {
                var tempConfig, bestMoment, scoreToBeat, i, currentScore;

                if (config._f.length === 0) {
                    config._pf.invalidFormat = true;
                    config._d = new Date(NaN);
                    return;
                }

                for (i = 0; i < config._f.length; i++) {
                    currentScore = 0;
                    tempConfig = copyConfig({}, config);
                    if (config._useUTC != null) {
                        tempConfig._useUTC = config._useUTC;
                    }
                    tempConfig._pf = defaultParsingFlags();
                    tempConfig._f = config._f[i];
                    makeDateFromStringAndFormat(tempConfig);

                    if (!isValid(tempConfig)) {
                        continue;
                    }

                    // if there is any input that was not parsed add a penalty for that format
                    currentScore += tempConfig._pf.charsLeftOver;

                    //or tokens
                    currentScore += tempConfig._pf.unusedTokens.length * 10;

                    tempConfig._pf.score = currentScore;

                    if (scoreToBeat == null || currentScore < scoreToBeat) {
                        scoreToBeat = currentScore;
                        bestMoment = tempConfig;
                    }
                }

                extend(config, bestMoment || tempConfig);
            }

            // date from iso format
            function parseISO(config) {
                var i,
                    l,
                    string = config._i,
                    match = isoRegex.exec(string);

                if (match) {
                    config._pf.iso = true;
                    for (i = 0, l = isoDates.length; i < l; i++) {
                        if (isoDates[i][1].exec(string)) {
                            // match[5] should be 'T' or undefined
                            config._f = isoDates[i][0] + (match[6] || ' ');
                            break;
                        }
                    }
                    for (i = 0, l = isoTimes.length; i < l; i++) {
                        if (isoTimes[i][1].exec(string)) {
                            config._f += isoTimes[i][0];
                            break;
                        }
                    }
                    if (string.match(parseTokenTimezone)) {
                        config._f += 'Z';
                    }
                    makeDateFromStringAndFormat(config);
                } else {
                    config._isValid = false;
                }
            }

            // date from iso format or fallback
            function makeDateFromString(config) {
                parseISO(config);
                if (config._isValid === false) {
                    delete config._isValid;
                    moment.createFromInputFallback(config);
                }
            }

            function map(arr, fn) {
                var res = [],
                    i;
                for (i = 0; i < arr.length; ++i) {
                    res.push(fn(arr[i], i));
                }
                return res;
            }

            function makeDateFromInput(config) {
                var input = config._i,
                    matched;
                if (input === undefined) {
                    config._d = new Date();
                } else if (isDate(input)) {
                    config._d = new Date(+input);
                } else if ((matched = aspNetJsonRegex.exec(input)) !== null) {
                    config._d = new Date(+matched[1]);
                } else if (typeof input === 'string') {
                    makeDateFromString(config);
                } else if (isArray(input)) {
                    config._a = map(input.slice(0), function (obj) {
                        return parseInt(obj, 10);
                    });
                    dateFromConfig(config);
                } else if (typeof input === 'object') {
                    dateFromObject(config);
                } else if (typeof input === 'number') {
                    // from milliseconds
                    config._d = new Date(input);
                } else {
                    moment.createFromInputFallback(config);
                }
            }

            function makeDate(y, m, d, h, M, s, ms) {
                //can't just apply() to create a date:
                //http://stackoverflow.com/questions/181348/instantiating-a-javascript-object-by-calling-prototype-constructor-apply
                var date = new Date(y, m, d, h, M, s, ms);

                //the date constructor doesn't accept years < 1970
                if (y < 1970) {
                    date.setFullYear(y);
                }
                return date;
            }

            function makeUTCDate(y) {
                var date = new Date(Date.UTC.apply(null, arguments));
                if (y < 1970) {
                    date.setUTCFullYear(y);
                }
                return date;
            }

            function parseWeekday(input, locale) {
                if (typeof input === 'string') {
                    if (!isNaN(input)) {
                        input = parseInt(input, 10);
                    } else {
                        input = locale.weekdaysParse(input);
                        if (typeof input !== 'number') {
                            return null;
                        }
                    }
                }
                return input;
            }

            /************************************
                Relative Time
            ************************************/

            // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize
            function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {
                return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
            }

            function relativeTime(posNegDuration, withoutSuffix, locale) {
                var duration = moment.duration(posNegDuration).abs(),
                    seconds = round(duration.as('s')),
                    minutes = round(duration.as('m')),
                    hours = round(duration.as('h')),
                    days = round(duration.as('d')),
                    months = round(duration.as('M')),
                    years = round(duration.as('y')),
                    args = seconds < relativeTimeThresholds.s && ['s', seconds] || minutes === 1 && ['m'] || minutes < relativeTimeThresholds.m && ['mm', minutes] || hours === 1 && ['h'] || hours < relativeTimeThresholds.h && ['hh', hours] || days === 1 && ['d'] || days < relativeTimeThresholds.d && ['dd', days] || months === 1 && ['M'] || months < relativeTimeThresholds.M && ['MM', months] || years === 1 && ['y'] || ['yy', years];

                args[2] = withoutSuffix;
                args[3] = +posNegDuration > 0;
                args[4] = locale;
                return substituteTimeAgo.apply({}, args);
            }

            /************************************
                Week of Year
            ************************************/

            // firstDayOfWeek       0 = sun, 6 = sat
            //                      the day of the week that starts the week
            //                      (usually sunday or monday)
            // firstDayOfWeekOfYear 0 = sun, 6 = sat
            //                      the first week is the week that contains the first
            //                      of this day of the week
            //                      (eg. ISO weeks use thursday (4))
            function weekOfYear(mom, firstDayOfWeek, firstDayOfWeekOfYear) {
                var end = firstDayOfWeekOfYear - firstDayOfWeek,
                    daysToDayOfWeek = firstDayOfWeekOfYear - mom.day(),
                    adjustedMoment;

                if (daysToDayOfWeek > end) {
                    daysToDayOfWeek -= 7;
                }

                if (daysToDayOfWeek < end - 7) {
                    daysToDayOfWeek += 7;
                }

                adjustedMoment = moment(mom).add(daysToDayOfWeek, 'd');
                return {
                    week: Math.ceil(adjustedMoment.dayOfYear() / 7),
                    year: adjustedMoment.year()
                };
            }

            //http://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday
            function dayOfYearFromWeeks(year, week, weekday, firstDayOfWeekOfYear, firstDayOfWeek) {
                var d = makeUTCDate(year, 0, 1).getUTCDay(),
                    daysToAdd,
                    dayOfYear;

                d = d === 0 ? 7 : d;
                weekday = weekday != null ? weekday : firstDayOfWeek;
                daysToAdd = firstDayOfWeek - d + (d > firstDayOfWeekOfYear ? 7 : 0) - (d < firstDayOfWeek ? 7 : 0);
                dayOfYear = 7 * (week - 1) + (weekday - firstDayOfWeek) + daysToAdd + 1;

                return {
                    year: dayOfYear > 0 ? year : year - 1,
                    dayOfYear: dayOfYear > 0 ? dayOfYear : daysInYear(year - 1) + dayOfYear
                };
            }

            /************************************
                Top Level Functions
            ************************************/

            function makeMoment(config) {
                var input = config._i,
                    format = config._f,
                    res;

                config._locale = config._locale || moment.localeData(config._l);

                if (input === null || format === undefined && input === '') {
                    return moment.invalid({ nullInput: true });
                }

                if (typeof input === 'string') {
                    config._i = input = config._locale.preparse(input);
                }

                if (moment.isMoment(input)) {
                    return new Moment(input, true);
                } else if (format) {
                    if (isArray(format)) {
                        makeDateFromStringAndArray(config);
                    } else {
                        makeDateFromStringAndFormat(config);
                    }
                } else {
                    makeDateFromInput(config);
                }

                res = new Moment(config);
                if (res._nextDay) {
                    // Adding is smart enough around DST
                    res.add(1, 'd');
                    res._nextDay = undefined;
                }

                return res;
            }

            moment = function (input, format, locale, strict) {
                var c;

                if (typeof locale === 'boolean') {
                    strict = locale;
                    locale = undefined;
                }
                // object construction must be done this way.
                // https://github.com/moment/moment/issues/1423
                c = {};
                c._isAMomentObject = true;
                c._i = input;
                c._f = format;
                c._l = locale;
                c._strict = strict;
                c._isUTC = false;
                c._pf = defaultParsingFlags();

                return makeMoment(c);
            };

            moment.suppressDeprecationWarnings = false;

            moment.createFromInputFallback = deprecate('moment construction falls back to js Date. This is ' + 'discouraged and will be removed in upcoming major ' + 'release. Please refer to ' + 'https://github.com/moment/moment/issues/1407 for more info.', function (config) {
                config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));
            });

            // Pick a moment m from moments so that m[fn](other) is true for all
            // other. This relies on the function fn to be transitive.
            //
            // moments should either be an array of moment objects or an array, whose
            // first element is an array of moment objects.
            function pickBy(fn, moments) {
                var res, i;
                if (moments.length === 1 && isArray(moments[0])) {
                    moments = moments[0];
                }
                if (!moments.length) {
                    return moment();
                }
                res = moments[0];
                for (i = 1; i < moments.length; ++i) {
                    if (moments[i][fn](res)) {
                        res = moments[i];
                    }
                }
                return res;
            }

            moment.min = function () {
                var args = [].slice.call(arguments, 0);

                return pickBy('isBefore', args);
            };

            moment.max = function () {
                var args = [].slice.call(arguments, 0);

                return pickBy('isAfter', args);
            };

            // creating with utc
            moment.utc = function (input, format, locale, strict) {
                var c;

                if (typeof locale === 'boolean') {
                    strict = locale;
                    locale = undefined;
                }
                // object construction must be done this way.
                // https://github.com/moment/moment/issues/1423
                c = {};
                c._isAMomentObject = true;
                c._useUTC = true;
                c._isUTC = true;
                c._l = locale;
                c._i = input;
                c._f = format;
                c._strict = strict;
                c._pf = defaultParsingFlags();

                return makeMoment(c).utc();
            };

            // creating with unix timestamp (in seconds)
            moment.unix = function (input) {
                return moment(input * 1000);
            };

            // duration
            moment.duration = function (input, key) {
                var duration = input,

                // matching against regexp is expensive, do it on demand
                match = null,
                    sign,
                    ret,
                    parseIso,
                    diffRes;

                if (moment.isDuration(input)) {
                    duration = {
                        ms: input._milliseconds,
                        d: input._days,
                        M: input._months
                    };
                } else if (typeof input === 'number') {
                    duration = {};
                    if (key) {
                        duration[key] = input;
                    } else {
                        duration.milliseconds = input;
                    }
                } else if (!!(match = aspNetTimeSpanJsonRegex.exec(input))) {
                    sign = match[1] === '-' ? -1 : 1;
                    duration = {
                        y: 0,
                        d: toInt(match[DATE]) * sign,
                        h: toInt(match[HOUR]) * sign,
                        m: toInt(match[MINUTE]) * sign,
                        s: toInt(match[SECOND]) * sign,
                        ms: toInt(match[MILLISECOND]) * sign
                    };
                } else if (!!(match = isoDurationRegex.exec(input))) {
                    sign = match[1] === '-' ? -1 : 1;
                    parseIso = function (inp) {
                        // We'd normally use ~~inp for this, but unfortunately it also
                        // converts floats to ints.
                        // inp may be undefined, so careful calling replace on it.
                        var res = inp && parseFloat(inp.replace(',', '.'));
                        // apply sign while we're at it
                        return (isNaN(res) ? 0 : res) * sign;
                    };
                    duration = {
                        y: parseIso(match[2]),
                        M: parseIso(match[3]),
                        d: parseIso(match[4]),
                        h: parseIso(match[5]),
                        m: parseIso(match[6]),
                        s: parseIso(match[7]),
                        w: parseIso(match[8])
                    };
                } else if (duration == null) {
                    // checks for null or undefined
                    duration = {};
                } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {
                    diffRes = momentsDifference(moment(duration.from), moment(duration.to));

                    duration = {};
                    duration.ms = diffRes.milliseconds;
                    duration.M = diffRes.months;
                }

                ret = new Duration(duration);

                if (moment.isDuration(input) && hasOwnProp(input, '_locale')) {
                    ret._locale = input._locale;
                }

                return ret;
            };

            // version number
            moment.version = VERSION;

            // default format
            moment.defaultFormat = isoFormat;

            // constant that refers to the ISO standard
            moment.ISO_8601 = function () {};

            // Plugins that add properties should also add the key here (null value),
            // so we can properly clone ourselves.
            moment.momentProperties = momentProperties;

            // This function will be called whenever a moment is mutated.
            // It is intended to keep the offset in sync with the timezone.
            moment.updateOffset = function () {};

            // This function allows you to set a threshold for relative time strings
            moment.relativeTimeThreshold = function (threshold, limit) {
                if (relativeTimeThresholds[threshold] === undefined) {
                    return false;
                }
                if (limit === undefined) {
                    return relativeTimeThresholds[threshold];
                }
                relativeTimeThresholds[threshold] = limit;
                return true;
            };

            moment.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', function (key, value) {
                return moment.locale(key, value);
            });

            // This function will load locale and then set the global locale.  If
            // no arguments are passed in, it will simply return the current global
            // locale key.
            moment.locale = function (key, values) {
                var data;
                if (key) {
                    if (typeof values !== 'undefined') {
                        data = moment.defineLocale(key, values);
                    } else {
                        data = moment.localeData(key);
                    }

                    if (data) {
                        moment.duration._locale = moment._locale = data;
                    }
                }

                return moment._locale._abbr;
            };

            moment.defineLocale = function (name, values) {
                if (values !== null) {
                    values.abbr = name;
                    if (!locales[name]) {
                        locales[name] = new Locale();
                    }
                    locales[name].set(values);

                    // backwards compat for now: also set the locale
                    moment.locale(name);

                    return locales[name];
                } else {
                    // useful for testing
                    delete locales[name];
                    return null;
                }
            };

            moment.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', function (key) {
                return moment.localeData(key);
            });

            // returns locale data
            moment.localeData = function (key) {
                var locale;

                if (key && key._locale && key._locale._abbr) {
                    key = key._locale._abbr;
                }

                if (!key) {
                    return moment._locale;
                }

                if (!isArray(key)) {
                    //short-circuit everything else
                    locale = loadLocale(key);
                    if (locale) {
                        return locale;
                    }
                    key = [key];
                }

                return chooseLocale(key);
            };

            // compare moment object
            moment.isMoment = function (obj) {
                return obj instanceof Moment || obj != null && hasOwnProp(obj, '_isAMomentObject');
            };

            // for typechecking Duration objects
            moment.isDuration = function (obj) {
                return obj instanceof Duration;
            };

            for (i = lists.length - 1; i >= 0; --i) {
                makeList(lists[i]);
            }

            moment.normalizeUnits = function (units) {
                return normalizeUnits(units);
            };

            moment.invalid = function (flags) {
                var m = moment.utc(NaN);
                if (flags != null) {
                    extend(m._pf, flags);
                } else {
                    m._pf.userInvalidated = true;
                }

                return m;
            };

            moment.parseZone = function () {
                return moment.apply(null, arguments).parseZone();
            };

            moment.parseTwoDigitYear = function (input) {
                return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);
            };

            moment.isDate = isDate;

            /************************************
                Moment Prototype
            ************************************/

            extend(moment.fn = Moment.prototype, {

                clone: function () {
                    return moment(this);
                },

                valueOf: function () {
                    return +this._d - (this._offset || 0) * 60000;
                },

                unix: function () {
                    return Math.floor(+this / 1000);
                },

                toString: function () {
                    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');
                },

                toDate: function () {
                    return this._offset ? new Date(+this) : this._d;
                },

                toISOString: function () {
                    var m = moment(this).utc();
                    if (0 < m.year() && m.year() <= 9999) {
                        if ('function' === typeof Date.prototype.toISOString) {
                            // native implementation is ~50x faster, use it when we can
                            return this.toDate().toISOString();
                        } else {
                            return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');
                        }
                    } else {
                        return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');
                    }
                },

                toArray: function () {
                    var m = this;
                    return [m.year(), m.month(), m.date(), m.hours(), m.minutes(), m.seconds(), m.milliseconds()];
                },

                isValid: function () {
                    return isValid(this);
                },

                isDSTShifted: function () {
                    if (this._a) {
                        return this.isValid() && compareArrays(this._a, (this._isUTC ? moment.utc(this._a) : moment(this._a)).toArray()) > 0;
                    }

                    return false;
                },

                parsingFlags: function () {
                    return extend({}, this._pf);
                },

                invalidAt: function () {
                    return this._pf.overflow;
                },

                utc: function (keepLocalTime) {
                    return this.utcOffset(0, keepLocalTime);
                },

                local: function (keepLocalTime) {
                    if (this._isUTC) {
                        this.utcOffset(0, keepLocalTime);
                        this._isUTC = false;

                        if (keepLocalTime) {
                            this.subtract(this._dateUtcOffset(), 'm');
                        }
                    }
                    return this;
                },

                format: function (inputString) {
                    var output = formatMoment(this, inputString || moment.defaultFormat);
                    return this.localeData().postformat(output);
                },

                add: createAdder(1, 'add'),

                subtract: createAdder(-1, 'subtract'),

                diff: function (input, units, asFloat) {
                    var that = makeAs(input, this),
                        zoneDiff = (that.utcOffset() - this.utcOffset()) * 6e4,
                        anchor,
                        diff,
                        output,
                        daysAdjust;

                    units = normalizeUnits(units);

                    if (units === 'year' || units === 'month' || units === 'quarter') {
                        output = monthDiff(this, that);
                        if (units === 'quarter') {
                            output = output / 3;
                        } else if (units === 'year') {
                            output = output / 12;
                        }
                    } else {
                        diff = this - that;
                        output = units === 'second' ? diff / 1e3 : // 1000
                        units === 'minute' ? diff / 6e4 : // 1000 * 60
                        units === 'hour' ? diff / 36e5 : // 1000 * 60 * 60
                        units === 'day' ? (diff - zoneDiff) / 864e5 : // 1000 * 60 * 60 * 24, negate dst
                        units === 'week' ? (diff - zoneDiff) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst
                        diff;
                    }
                    return asFloat ? output : absRound(output);
                },

                from: function (time, withoutSuffix) {
                    return moment.duration({ to: this, from: time }).locale(this.locale()).humanize(!withoutSuffix);
                },

                fromNow: function (withoutSuffix) {
                    return this.from(moment(), withoutSuffix);
                },

                calendar: function (time) {
                    // We want to compare the start of today, vs this.
                    // Getting start-of-today depends on whether we're locat/utc/offset
                    // or not.
                    var now = time || moment(),
                        sod = makeAs(now, this).startOf('day'),
                        diff = this.diff(sod, 'days', true),
                        format = diff < -6 ? 'sameElse' : diff < -1 ? 'lastWeek' : diff < 0 ? 'lastDay' : diff < 1 ? 'sameDay' : diff < 2 ? 'nextDay' : diff < 7 ? 'nextWeek' : 'sameElse';
                    return this.format(this.localeData().calendar(format, this, moment(now)));
                },

                isLeapYear: function () {
                    return isLeapYear(this.year());
                },

                isDST: function () {
                    return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();
                },

                day: function (input) {
                    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
                    if (input != null) {
                        input = parseWeekday(input, this.localeData());
                        return this.add(input - day, 'd');
                    } else {
                        return day;
                    }
                },

                month: makeAccessor('Month', true),

                startOf: function (units) {
                    units = normalizeUnits(units);
                    // the following switch intentionally omits break keywords
                    // to utilize falling through the cases.
                    switch (units) {
                        case 'year':
                            this.month(0);
                        /* falls through */
                        case 'quarter':
                        case 'month':
                            this.date(1);
                        /* falls through */
                        case 'week':
                        case 'isoWeek':
                        case 'day':
                            this.hours(0);
                        /* falls through */
                        case 'hour':
                            this.minutes(0);
                        /* falls through */
                        case 'minute':
                            this.seconds(0);
                        /* falls through */
                        case 'second':
                            this.milliseconds(0);
                        /* falls through */
                    }

                    // weeks are a special case
                    if (units === 'week') {
                        this.weekday(0);
                    } else if (units === 'isoWeek') {
                        this.isoWeekday(1);
                    }

                    // quarters are also special
                    if (units === 'quarter') {
                        this.month(Math.floor(this.month() / 3) * 3);
                    }

                    return this;
                },

                endOf: function (units) {
                    units = normalizeUnits(units);
                    if (units === undefined || units === 'millisecond') {
                        return this;
                    }
                    return this.startOf(units).add(1, units === 'isoWeek' ? 'week' : units).subtract(1, 'ms');
                },

                isAfter: function (input, units) {
                    var inputMs;
                    units = normalizeUnits(typeof units !== 'undefined' ? units : 'millisecond');
                    if (units === 'millisecond') {
                        input = moment.isMoment(input) ? input : moment(input);
                        return +this > +input;
                    } else {
                        inputMs = moment.isMoment(input) ? +input : +moment(input);
                        return inputMs < +this.clone().startOf(units);
                    }
                },

                isBefore: function (input, units) {
                    var inputMs;
                    units = normalizeUnits(typeof units !== 'undefined' ? units : 'millisecond');
                    if (units === 'millisecond') {
                        input = moment.isMoment(input) ? input : moment(input);
                        return +this < +input;
                    } else {
                        inputMs = moment.isMoment(input) ? +input : +moment(input);
                        return +this.clone().endOf(units) < inputMs;
                    }
                },

                isBetween: function (from, to, units) {
                    return this.isAfter(from, units) && this.isBefore(to, units);
                },

                isSame: function (input, units) {
                    var inputMs;
                    units = normalizeUnits(units || 'millisecond');
                    if (units === 'millisecond') {
                        input = moment.isMoment(input) ? input : moment(input);
                        return +this === +input;
                    } else {
                        inputMs = +moment(input);
                        return +this.clone().startOf(units) <= inputMs && inputMs <= +this.clone().endOf(units);
                    }
                },

                min: deprecate('moment().min is deprecated, use moment.min instead. https://github.com/moment/moment/issues/1548', function (other) {
                    other = moment.apply(null, arguments);
                    return other < this ? this : other;
                }),

                max: deprecate('moment().max is deprecated, use moment.max instead. https://github.com/moment/moment/issues/1548', function (other) {
                    other = moment.apply(null, arguments);
                    return other > this ? this : other;
                }),

                zone: deprecate('moment().zone is deprecated, use moment().utcOffset instead. ' + 'https://github.com/moment/moment/issues/1779', function (input, keepLocalTime) {
                    if (input != null) {
                        if (typeof input !== 'string') {
                            input = -input;
                        }

                        this.utcOffset(input, keepLocalTime);

                        return this;
                    } else {
                        return -this.utcOffset();
                    }
                }),

                // keepLocalTime = true means only change the timezone, without
                // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->
                // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset
                // +0200, so we adjust the time as needed, to be valid.
                //
                // Keeping the time actually adds/subtracts (one hour)
                // from the actual represented time. That is why we call updateOffset
                // a second time. In case it wants us to change the offset again
                // _changeInProgress == true case, then we have to adjust, because
                // there is no such time in the given timezone.
                utcOffset: function (input, keepLocalTime) {
                    var offset = this._offset || 0,
                        localAdjust;
                    if (input != null) {
                        if (typeof input === 'string') {
                            input = utcOffsetFromString(input);
                        }
                        if (Math.abs(input) < 16) {
                            input = input * 60;
                        }
                        if (!this._isUTC && keepLocalTime) {
                            localAdjust = this._dateUtcOffset();
                        }
                        this._offset = input;
                        this._isUTC = true;
                        if (localAdjust != null) {
                            this.add(localAdjust, 'm');
                        }
                        if (offset !== input) {
                            if (!keepLocalTime || this._changeInProgress) {
                                addOrSubtractDurationFromMoment(this, moment.duration(input - offset, 'm'), 1, false);
                            } else if (!this._changeInProgress) {
                                this._changeInProgress = true;
                                moment.updateOffset(this, true);
                                this._changeInProgress = null;
                            }
                        }

                        return this;
                    } else {
                        return this._isUTC ? offset : this._dateUtcOffset();
                    }
                },

                isLocal: function () {
                    return !this._isUTC;
                },

                isUtcOffset: function () {
                    return this._isUTC;
                },

                isUtc: function () {
                    return this._isUTC && this._offset === 0;
                },

                zoneAbbr: function () {
                    return this._isUTC ? 'UTC' : '';
                },

                zoneName: function () {
                    return this._isUTC ? 'Coordinated Universal Time' : '';
                },

                parseZone: function () {
                    if (this._tzm) {
                        this.utcOffset(this._tzm);
                    } else if (typeof this._i === 'string') {
                        this.utcOffset(utcOffsetFromString(this._i));
                    }
                    return this;
                },

                hasAlignedHourOffset: function (input) {
                    if (!input) {
                        input = 0;
                    } else {
                        input = moment(input).utcOffset();
                    }

                    return (this.utcOffset() - input) % 60 === 0;
                },

                daysInMonth: function () {
                    return daysInMonth(this.year(), this.month());
                },

                dayOfYear: function (input) {
                    var dayOfYear = round((moment(this).startOf('day') - moment(this).startOf('year')) / 864e5) + 1;
                    return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');
                },

                quarter: function (input) {
                    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);
                },

                weekYear: function (input) {
                    var year = weekOfYear(this, this.localeData()._week.dow, this.localeData()._week.doy).year;
                    return input == null ? year : this.add(input - year, 'y');
                },

                isoWeekYear: function (input) {
                    var year = weekOfYear(this, 1, 4).year;
                    return input == null ? year : this.add(input - year, 'y');
                },

                week: function (input) {
                    var week = this.localeData().week(this);
                    return input == null ? week : this.add((input - week) * 7, 'd');
                },

                isoWeek: function (input) {
                    var week = weekOfYear(this, 1, 4).week;
                    return input == null ? week : this.add((input - week) * 7, 'd');
                },

                weekday: function (input) {
                    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
                    return input == null ? weekday : this.add(input - weekday, 'd');
                },

                isoWeekday: function (input) {
                    // behaves the same as moment#day except
                    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
                    // as a setter, sunday should belong to the previous week.
                    return input == null ? this.day() || 7 : this.day(this.day() % 7 ? input : input - 7);
                },

                isoWeeksInYear: function () {
                    return weeksInYear(this.year(), 1, 4);
                },

                weeksInYear: function () {
                    var weekInfo = this.localeData()._week;
                    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
                },

                get: function (units) {
                    units = normalizeUnits(units);
                    return this[units]();
                },

                set: function (units, value) {
                    var unit;
                    if (typeof units === 'object') {
                        for (unit in units) {
                            this.set(unit, units[unit]);
                        }
                    } else {
                        units = normalizeUnits(units);
                        if (typeof this[units] === 'function') {
                            this[units](value);
                        }
                    }
                    return this;
                },

                // If passed a locale key, it will set the locale for this
                // instance.  Otherwise, it will return the locale configuration
                // variables for this instance.
                locale: function (key) {
                    var newLocaleData;

                    if (key === undefined) {
                        return this._locale._abbr;
                    } else {
                        newLocaleData = moment.localeData(key);
                        if (newLocaleData != null) {
                            this._locale = newLocaleData;
                        }
                        return this;
                    }
                },

                lang: deprecate('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.', function (key) {
                    if (key === undefined) {
                        return this.localeData();
                    } else {
                        return this.locale(key);
                    }
                }),

                localeData: function () {
                    return this._locale;
                },

                _dateUtcOffset: function () {
                    // On Firefox.24 Date#getTimezoneOffset returns a floating point.
                    // https://github.com/moment/moment/pull/1871
                    return -Math.round(this._d.getTimezoneOffset() / 15) * 15;
                }

            });

            function rawMonthSetter(mom, value) {
                var dayOfMonth;

                // TODO: Move this out of here!
                if (typeof value === 'string') {
                    value = mom.localeData().monthsParse(value);
                    // TODO: Another silent failure?
                    if (typeof value !== 'number') {
                        return mom;
                    }
                }

                dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));
                mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);
                return mom;
            }

            function rawGetter(mom, unit) {
                return mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]();
            }

            function rawSetter(mom, unit, value) {
                if (unit === 'Month') {
                    return rawMonthSetter(mom, value);
                } else {
                    return mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);
                }
            }

            function makeAccessor(unit, keepTime) {
                return function (value) {
                    if (value != null) {
                        rawSetter(this, unit, value);
                        moment.updateOffset(this, keepTime);
                        return this;
                    } else {
                        return rawGetter(this, unit);
                    }
                };
            }

            moment.fn.millisecond = moment.fn.milliseconds = makeAccessor('Milliseconds', false);
            moment.fn.second = moment.fn.seconds = makeAccessor('Seconds', false);
            moment.fn.minute = moment.fn.minutes = makeAccessor('Minutes', false);
            // Setting the hour should keep the time, because the user explicitly
            // specified which hour he wants. So trying to maintain the same hour (in
            // a new timezone) makes sense. Adding/subtracting hours does not follow
            // this rule.
            moment.fn.hour = moment.fn.hours = makeAccessor('Hours', true);
            // moment.fn.month is defined separately
            moment.fn.date = makeAccessor('Date', true);
            moment.fn.dates = deprecate('dates accessor is deprecated. Use date instead.', makeAccessor('Date', true));
            moment.fn.year = makeAccessor('FullYear', true);
            moment.fn.years = deprecate('years accessor is deprecated. Use year instead.', makeAccessor('FullYear', true));

            // add plural methods
            moment.fn.days = moment.fn.day;
            moment.fn.months = moment.fn.month;
            moment.fn.weeks = moment.fn.week;
            moment.fn.isoWeeks = moment.fn.isoWeek;
            moment.fn.quarters = moment.fn.quarter;

            // add aliased format methods
            moment.fn.toJSON = moment.fn.toISOString;

            // alias isUtc for dev-friendliness
            moment.fn.isUTC = moment.fn.isUtc;

            /************************************
                Duration Prototype
            ************************************/

            function daysToYears(days) {
                // 400 years have 146097 days (taking into account leap year rules)
                return days * 400 / 146097;
            }

            function yearsToDays(years) {
                // years * 365 + absRound(years / 4) -
                //     absRound(years / 100) + absRound(years / 400);
                return years * 146097 / 400;
            }

            extend(moment.duration.fn = Duration.prototype, {

                _bubble: function () {
                    var milliseconds = this._milliseconds,
                        days = this._days,
                        months = this._months,
                        data = this._data,
                        seconds,
                        minutes,
                        hours,
                        years = 0;

                    // The following code bubbles up values, see the tests for
                    // examples of what that means.
                    data.milliseconds = milliseconds % 1000;

                    seconds = absRound(milliseconds / 1000);
                    data.seconds = seconds % 60;

                    minutes = absRound(seconds / 60);
                    data.minutes = minutes % 60;

                    hours = absRound(minutes / 60);
                    data.hours = hours % 24;

                    days += absRound(hours / 24);

                    // Accurately convert days to years, assume start from year 0.
                    years = absRound(daysToYears(days));
                    days -= absRound(yearsToDays(years));

                    // 30 days to a month
                    // TODO (iskren): Use anchor date (like 1st Jan) to compute this.
                    months += absRound(days / 30);
                    days %= 30;

                    // 12 months -> 1 year
                    years += absRound(months / 12);
                    months %= 12;

                    data.days = days;
                    data.months = months;
                    data.years = years;
                },

                abs: function () {
                    this._milliseconds = Math.abs(this._milliseconds);
                    this._days = Math.abs(this._days);
                    this._months = Math.abs(this._months);

                    this._data.milliseconds = Math.abs(this._data.milliseconds);
                    this._data.seconds = Math.abs(this._data.seconds);
                    this._data.minutes = Math.abs(this._data.minutes);
                    this._data.hours = Math.abs(this._data.hours);
                    this._data.months = Math.abs(this._data.months);
                    this._data.years = Math.abs(this._data.years);

                    return this;
                },

                weeks: function () {
                    return absRound(this.days() / 7);
                },

                valueOf: function () {
                    return this._milliseconds + this._days * 864e5 + this._months % 12 * 2592e6 + toInt(this._months / 12) * 31536e6;
                },

                humanize: function (withSuffix) {
                    var output = relativeTime(this, !withSuffix, this.localeData());

                    if (withSuffix) {
                        output = this.localeData().pastFuture(+this, output);
                    }

                    return this.localeData().postformat(output);
                },

                add: function (input, val) {
                    // supports only 2.0-style add(1, 's') or add(moment)
                    var dur = moment.duration(input, val);

                    this._milliseconds += dur._milliseconds;
                    this._days += dur._days;
                    this._months += dur._months;

                    this._bubble();

                    return this;
                },

                subtract: function (input, val) {
                    var dur = moment.duration(input, val);

                    this._milliseconds -= dur._milliseconds;
                    this._days -= dur._days;
                    this._months -= dur._months;

                    this._bubble();

                    return this;
                },

                get: function (units) {
                    units = normalizeUnits(units);
                    return this[units.toLowerCase() + 's']();
                },

                as: function (units) {
                    var days, months;
                    units = normalizeUnits(units);

                    if (units === 'month' || units === 'year') {
                        days = this._days + this._milliseconds / 864e5;
                        months = this._months + daysToYears(days) * 12;
                        return units === 'month' ? months : months / 12;
                    } else {
                        // handle milliseconds separately because of floating point math errors (issue #1867)
                        days = this._days + Math.round(yearsToDays(this._months / 12));
                        switch (units) {
                            case 'week':
                                return days / 7 + this._milliseconds / 6048e5;
                            case 'day':
                                return days + this._milliseconds / 864e5;
                            case 'hour':
                                return days * 24 + this._milliseconds / 36e5;
                            case 'minute':
                                return days * 24 * 60 + this._milliseconds / 6e4;
                            case 'second':
                                return days * 24 * 60 * 60 + this._milliseconds / 1000;
                            // Math.floor prevents floating point math errors here
                            case 'millisecond':
                                return Math.floor(days * 24 * 60 * 60 * 1000) + this._milliseconds;
                            default:
                                throw new Error('Unknown unit ' + units);
                        }
                    }
                },

                lang: moment.fn.lang,
                locale: moment.fn.locale,

                toIsoString: deprecate('toIsoString() is deprecated. Please use toISOString() instead ' + '(notice the capitals)', function () {
                    return this.toISOString();
                }),

                toISOString: function () {
                    // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js
                    var years = Math.abs(this.years()),
                        months = Math.abs(this.months()),
                        days = Math.abs(this.days()),
                        hours = Math.abs(this.hours()),
                        minutes = Math.abs(this.minutes()),
                        seconds = Math.abs(this.seconds() + this.milliseconds() / 1000);

                    if (!this.asSeconds()) {
                        // this is the same as C#'s (Noda) and python (isodate)...
                        // but not other JS (goog.date)
                        return 'P0D';
                    }

                    return (this.asSeconds() < 0 ? '-' : '') + 'P' + (years ? years + 'Y' : '') + (months ? months + 'M' : '') + (days ? days + 'D' : '') + (hours || minutes || seconds ? 'T' : '') + (hours ? hours + 'H' : '') + (minutes ? minutes + 'M' : '') + (seconds ? seconds + 'S' : '');
                },

                localeData: function () {
                    return this._locale;
                },

                toJSON: function () {
                    return this.toISOString();
                }
            });

            moment.duration.fn.toString = moment.duration.fn.toISOString;

            function makeDurationGetter(name) {
                moment.duration.fn[name] = function () {
                    return this._data[name];
                };
            }

            for (i in unitMillisecondFactors) {
                if (hasOwnProp(unitMillisecondFactors, i)) {
                    makeDurationGetter(i.toLowerCase());
                }
            }

            moment.duration.fn.asMilliseconds = function () {
                return this.as('ms');
            };
            moment.duration.fn.asSeconds = function () {
                return this.as('s');
            };
            moment.duration.fn.asMinutes = function () {
                return this.as('m');
            };
            moment.duration.fn.asHours = function () {
                return this.as('h');
            };
            moment.duration.fn.asDays = function () {
                return this.as('d');
            };
            moment.duration.fn.asWeeks = function () {
                return this.as('weeks');
            };
            moment.duration.fn.asMonths = function () {
                return this.as('M');
            };
            moment.duration.fn.asYears = function () {
                return this.as('y');
            };

            /************************************
                Default Locale
            ************************************/

            // Set default locale, other locale will inherit from English.
            moment.locale('en', {
                ordinalParse: /\d{1,2}(th|st|nd|rd)/,
                ordinal: function (number) {
                    var b = number % 10,
                        output = toInt(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';
                    return number + output;
                }
            });

            /* EMBED_LOCALES */

            /************************************
                Exposing Moment
            ************************************/

            globalScope.moment = moment;
        }).call(Kalendae);
        if (typeof moment !== 'undefined') {
            Kalendae.moment = moment;
        }

        if (!Kalendae.moment) {
            if (window.moment) {
                Kalendae.moment = window.moment;
            } else {
                throw "Kalendae requires moment.js. You must use kalendae.standalone.js if moment is not available on the page.";
            }
        }

        moment = Kalendae.moment;

        //function to get the total number of days since the epoch.
        moment.fn.yearDay = function (input) {
            var yearday = Math.floor(this._d / 86400000);
            return typeof input === 'undefined' ? yearday : this.add({ d: input - yearday });
        };
        if (typeof jQuery !== 'undefined' && (typeof document.addEventListener === 'function' || util.isIE8())) {
            jQuery.fn.kalendae = function (options) {
                this.each(function (i, e) {
                    if (e.tagName === 'INPUT') {
                        //if element is an input, bind a popup calendar to the input.
                        jQuery(e).data('kalendae', new Kalendae.Input(e, options));
                    } else {
                        //otherwise, insert a flat calendar into the element.
                        jQuery(e).data('kalendae', new Kalendae(jQuery.extend({}, { attachTo: e }, options)));
                    }
                });
                return this;
            };
        }

        return Kalendae;
    });
})();
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(14), __webpack_require__(132)(module), __webpack_require__(8)))

/***/ }),
/* 10 */,
/* 11 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(123)

var Component = __webpack_require__(1)(
  /* script */
  __webpack_require__(22),
  /* template */
  __webpack_require__(103),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

var Component = __webpack_require__(1)(
  /* script */
  __webpack_require__(43),
  /* template */
  __webpack_require__(98),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

var Component = __webpack_require__(1)(
  /* script */
  __webpack_require__(44),
  /* template */
  __webpack_require__(108),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 14 */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || Function("return this")() || (1,eval)("this");
} catch(e) {
	// This works if the window reference is available
	if(typeof window === "object")
		g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),
/* 15 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_vuex__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__modules_manage_js__ = __webpack_require__(50);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__modules_produceline_js__ = __webpack_require__(51);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__modules_alarm_js__ = __webpack_require__(49);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__modules_turnpage_js__ = __webpack_require__(52);








const debug = "production" !== 'production';
__WEBPACK_IMPORTED_MODULE_0_vue___default.a.use(__WEBPACK_IMPORTED_MODULE_1_vuex__["a" /* default */]);
__WEBPACK_IMPORTED_MODULE_0_vue___default.a.config.debug = debug;

//导出store对象
/* harmony default export */ __webpack_exports__["a"] = (new __WEBPACK_IMPORTED_MODULE_1_vuex__["a" /* default */].Store({
    //组合各个模块
    modules: {
        produceline: __WEBPACK_IMPORTED_MODULE_3__modules_produceline_js__["a" /* default */],
        manage: __WEBPACK_IMPORTED_MODULE_2__modules_manage_js__["a" /* default */],
        alarm: __WEBPACK_IMPORTED_MODULE_4__modules_alarm_js__["a" /* default */],
        turnpage: __WEBPACK_IMPORTED_MODULE_5__modules_turnpage_js__["a" /* default */]
    },
    strict: debug

}));

/***/ }),
/* 16 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Components_pages_Home_vue__ = __webpack_require__(78);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Components_pages_Home_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__Components_pages_Home_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Components_pages_ManagAll_vue__ = __webpack_require__(79);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Components_pages_ManagAll_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__Components_pages_ManagAll_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Components_pages_Manageitems_vue__ = __webpack_require__(80);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Components_pages_Manageitems_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__Components_pages_Manageitems_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Components_pages_Runlog_vue__ = __webpack_require__(83);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Components_pages_Runlog_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__Components_pages_Runlog_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__Components_pages_Alarm_vue__ = __webpack_require__(75);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__Components_pages_Alarm_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4__Components_pages_Alarm_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__Components_pages_AlarmInfo_vue__ = __webpack_require__(76);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__Components_pages_AlarmInfo_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5__Components_pages_AlarmInfo_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__Components_pages_Manageusers_vue__ = __webpack_require__(81);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__Components_pages_Manageusers_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6__Components_pages_Manageusers_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__Components_pages_Productline_vue__ = __webpack_require__(82);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__Components_pages_Productline_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7__Components_pages_Productline_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__Components_pages_AlarmInfoBatch_vue__ = __webpack_require__(77);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__Components_pages_AlarmInfoBatch_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8__Components_pages_AlarmInfoBatch_vue__);











/* harmony default export */ __webpack_exports__["a"] = ({
	routes: [
	// {path:'/index',component:Home},
	{ path: '/index', component: __WEBPACK_IMPORTED_MODULE_2__Components_pages_Manageitems_vue___default.a }, { path: '/manageitems', component: __WEBPACK_IMPORTED_MODULE_2__Components_pages_Manageitems_vue___default.a }, { path: '/manageitemsname/:itemname', component: __WEBPACK_IMPORTED_MODULE_2__Components_pages_Manageitems_vue___default.a }, { path: '/runlog', component: __WEBPACK_IMPORTED_MODULE_3__Components_pages_Runlog_vue___default.a }, { path: '/alarm', component: __WEBPACK_IMPORTED_MODULE_4__Components_pages_Alarm_vue___default.a }, { path: '/alarm/:alertid', component: __WEBPACK_IMPORTED_MODULE_4__Components_pages_Alarm_vue___default.a }, { path: '/alarminfo/:alertid', component: __WEBPACK_IMPORTED_MODULE_5__Components_pages_AlarmInfo_vue___default.a }, { path: '/', component: __WEBPACK_IMPORTED_MODULE_2__Components_pages_Manageitems_vue___default.a }, { path: '*', redirect: '/manageitems' }, { path: '/manageusers', component: __WEBPACK_IMPORTED_MODULE_6__Components_pages_Manageusers_vue___default.a }, { path: '/productline', component: __WEBPACK_IMPORTED_MODULE_7__Components_pages_Productline_vue___default.a }, { path: '/alarminfobatch', component: __WEBPACK_IMPORTED_MODULE_8__Components_pages_AlarmInfoBatch_vue___default.a }]
});

/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(130)

var Component = __webpack_require__(1)(
  /* script */
  __webpack_require__(20),
  /* template */
  __webpack_require__(117),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 18 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export Url */
/* unused harmony export Http */
/* unused harmony export Resource */
/*!
 * vue-resource v1.3.1
 * https://github.com/pagekit/vue-resource
 * Released under the MIT License.
 */

/**
 * Promises/A+ polyfill v1.1.4 (https://github.com/bramstein/promis)
 */

var RESOLVED = 0;
var REJECTED = 1;
var PENDING  = 2;

function Promise$1(executor) {

    this.state = PENDING;
    this.value = undefined;
    this.deferred = [];

    var promise = this;

    try {
        executor(function (x) {
            promise.resolve(x);
        }, function (r) {
            promise.reject(r);
        });
    } catch (e) {
        promise.reject(e);
    }
}

Promise$1.reject = function (r) {
    return new Promise$1(function (resolve, reject) {
        reject(r);
    });
};

Promise$1.resolve = function (x) {
    return new Promise$1(function (resolve, reject) {
        resolve(x);
    });
};

Promise$1.all = function all(iterable) {
    return new Promise$1(function (resolve, reject) {
        var count = 0, result = [];

        if (iterable.length === 0) {
            resolve(result);
        }

        function resolver(i) {
            return function (x) {
                result[i] = x;
                count += 1;

                if (count === iterable.length) {
                    resolve(result);
                }
            };
        }

        for (var i = 0; i < iterable.length; i += 1) {
            Promise$1.resolve(iterable[i]).then(resolver(i), reject);
        }
    });
};

Promise$1.race = function race(iterable) {
    return new Promise$1(function (resolve, reject) {
        for (var i = 0; i < iterable.length; i += 1) {
            Promise$1.resolve(iterable[i]).then(resolve, reject);
        }
    });
};

var p$1 = Promise$1.prototype;

p$1.resolve = function resolve(x) {
    var promise = this;

    if (promise.state === PENDING) {
        if (x === promise) {
            throw new TypeError('Promise settled with itself.');
        }

        var called = false;

        try {
            var then = x && x['then'];

            if (x !== null && typeof x === 'object' && typeof then === 'function') {
                then.call(x, function (x) {
                    if (!called) {
                        promise.resolve(x);
                    }
                    called = true;

                }, function (r) {
                    if (!called) {
                        promise.reject(r);
                    }
                    called = true;
                });
                return;
            }
        } catch (e) {
            if (!called) {
                promise.reject(e);
            }
            return;
        }

        promise.state = RESOLVED;
        promise.value = x;
        promise.notify();
    }
};

p$1.reject = function reject(reason) {
    var promise = this;

    if (promise.state === PENDING) {
        if (reason === promise) {
            throw new TypeError('Promise settled with itself.');
        }

        promise.state = REJECTED;
        promise.value = reason;
        promise.notify();
    }
};

p$1.notify = function notify() {
    var promise = this;

    nextTick(function () {
        if (promise.state !== PENDING) {
            while (promise.deferred.length) {
                var deferred = promise.deferred.shift(),
                    onResolved = deferred[0],
                    onRejected = deferred[1],
                    resolve = deferred[2],
                    reject = deferred[3];

                try {
                    if (promise.state === RESOLVED) {
                        if (typeof onResolved === 'function') {
                            resolve(onResolved.call(undefined, promise.value));
                        } else {
                            resolve(promise.value);
                        }
                    } else if (promise.state === REJECTED) {
                        if (typeof onRejected === 'function') {
                            resolve(onRejected.call(undefined, promise.value));
                        } else {
                            reject(promise.value);
                        }
                    }
                } catch (e) {
                    reject(e);
                }
            }
        }
    });
};

p$1.then = function then(onResolved, onRejected) {
    var promise = this;

    return new Promise$1(function (resolve, reject) {
        promise.deferred.push([onResolved, onRejected, resolve, reject]);
        promise.notify();
    });
};

p$1.catch = function (onRejected) {
    return this.then(undefined, onRejected);
};

/**
 * Promise adapter.
 */

if (typeof Promise === 'undefined') {
    window.Promise = Promise$1;
}

function PromiseObj(executor, context) {

    if (executor instanceof Promise) {
        this.promise = executor;
    } else {
        this.promise = new Promise(executor.bind(context));
    }

    this.context = context;
}

PromiseObj.all = function (iterable, context) {
    return new PromiseObj(Promise.all(iterable), context);
};

PromiseObj.resolve = function (value, context) {
    return new PromiseObj(Promise.resolve(value), context);
};

PromiseObj.reject = function (reason, context) {
    return new PromiseObj(Promise.reject(reason), context);
};

PromiseObj.race = function (iterable, context) {
    return new PromiseObj(Promise.race(iterable), context);
};

var p = PromiseObj.prototype;

p.bind = function (context) {
    this.context = context;
    return this;
};

p.then = function (fulfilled, rejected) {

    if (fulfilled && fulfilled.bind && this.context) {
        fulfilled = fulfilled.bind(this.context);
    }

    if (rejected && rejected.bind && this.context) {
        rejected = rejected.bind(this.context);
    }

    return new PromiseObj(this.promise.then(fulfilled, rejected), this.context);
};

p.catch = function (rejected) {

    if (rejected && rejected.bind && this.context) {
        rejected = rejected.bind(this.context);
    }

    return new PromiseObj(this.promise.catch(rejected), this.context);
};

p.finally = function (callback) {

    return this.then(function (value) {
            callback.call(this);
            return value;
        }, function (reason) {
            callback.call(this);
            return Promise.reject(reason);
        }
    );
};

/**
 * Utility functions.
 */

var ref = {};
var hasOwnProperty = ref.hasOwnProperty;

var ref$1 = [];
var slice = ref$1.slice;
var debug = false;
var ntick;

var inBrowser = typeof window !== 'undefined';

var Util = function (ref) {
    var config = ref.config;
    var nextTick = ref.nextTick;

    ntick = nextTick;
    debug = config.debug || !config.silent;
};

function warn(msg) {
    if (typeof console !== 'undefined' && debug) {
        console.warn('[VueResource warn]: ' + msg);
    }
}

function error(msg) {
    if (typeof console !== 'undefined') {
        console.error(msg);
    }
}

function nextTick(cb, ctx) {
    return ntick(cb, ctx);
}

function trim(str) {
    return str ? str.replace(/^\s*|\s*$/g, '') : '';
}

function toLower(str) {
    return str ? str.toLowerCase() : '';
}

function toUpper(str) {
    return str ? str.toUpperCase() : '';
}

var isArray = Array.isArray;

function isString(val) {
    return typeof val === 'string';
}



function isFunction(val) {
    return typeof val === 'function';
}

function isObject(obj) {
    return obj !== null && typeof obj === 'object';
}

function isPlainObject(obj) {
    return isObject(obj) && Object.getPrototypeOf(obj) == Object.prototype;
}

function isBlob(obj) {
    return typeof Blob !== 'undefined' && obj instanceof Blob;
}

function isFormData(obj) {
    return typeof FormData !== 'undefined' && obj instanceof FormData;
}

function when(value, fulfilled, rejected) {

    var promise = PromiseObj.resolve(value);

    if (arguments.length < 2) {
        return promise;
    }

    return promise.then(fulfilled, rejected);
}

function options(fn, obj, opts) {

    opts = opts || {};

    if (isFunction(opts)) {
        opts = opts.call(obj);
    }

    return merge(fn.bind({$vm: obj, $options: opts}), fn, {$options: opts});
}

function each(obj, iterator) {

    var i, key;

    if (isArray(obj)) {
        for (i = 0; i < obj.length; i++) {
            iterator.call(obj[i], obj[i], i);
        }
    } else if (isObject(obj)) {
        for (key in obj) {
            if (hasOwnProperty.call(obj, key)) {
                iterator.call(obj[key], obj[key], key);
            }
        }
    }

    return obj;
}

var assign = Object.assign || _assign;

function merge(target) {

    var args = slice.call(arguments, 1);

    args.forEach(function (source) {
        _merge(target, source, true);
    });

    return target;
}

function defaults(target) {

    var args = slice.call(arguments, 1);

    args.forEach(function (source) {

        for (var key in source) {
            if (target[key] === undefined) {
                target[key] = source[key];
            }
        }

    });

    return target;
}

function _assign(target) {

    var args = slice.call(arguments, 1);

    args.forEach(function (source) {
        _merge(target, source);
    });

    return target;
}

function _merge(target, source, deep) {
    for (var key in source) {
        if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {
            if (isPlainObject(source[key]) && !isPlainObject(target[key])) {
                target[key] = {};
            }
            if (isArray(source[key]) && !isArray(target[key])) {
                target[key] = [];
            }
            _merge(target[key], source[key], deep);
        } else if (source[key] !== undefined) {
            target[key] = source[key];
        }
    }
}

/**
 * Root Prefix Transform.
 */

var root = function (options$$1, next) {

    var url = next(options$$1);

    if (isString(options$$1.root) && !url.match(/^(https?:)?\//)) {
        url = options$$1.root + '/' + url;
    }

    return url;
};

/**
 * Query Parameter Transform.
 */

var query = function (options$$1, next) {

    var urlParams = Object.keys(Url.options.params), query = {}, url = next(options$$1);

    each(options$$1.params, function (value, key) {
        if (urlParams.indexOf(key) === -1) {
            query[key] = value;
        }
    });

    query = Url.params(query);

    if (query) {
        url += (url.indexOf('?') == -1 ? '?' : '&') + query;
    }

    return url;
};

/**
 * URL Template v2.0.6 (https://github.com/bramstein/url-template)
 */

function expand(url, params, variables) {

    var tmpl = parse(url), expanded = tmpl.expand(params);

    if (variables) {
        variables.push.apply(variables, tmpl.vars);
    }

    return expanded;
}

function parse(template) {

    var operators = ['+', '#', '.', '/', ';', '?', '&'], variables = [];

    return {
        vars: variables,
        expand: function expand(context) {
            return template.replace(/\{([^\{\}]+)\}|([^\{\}]+)/g, function (_, expression, literal) {
                if (expression) {

                    var operator = null, values = [];

                    if (operators.indexOf(expression.charAt(0)) !== -1) {
                        operator = expression.charAt(0);
                        expression = expression.substr(1);
                    }

                    expression.split(/,/g).forEach(function (variable) {
                        var tmp = /([^:\*]*)(?::(\d+)|(\*))?/.exec(variable);
                        values.push.apply(values, getValues(context, operator, tmp[1], tmp[2] || tmp[3]));
                        variables.push(tmp[1]);
                    });

                    if (operator && operator !== '+') {

                        var separator = ',';

                        if (operator === '?') {
                            separator = '&';
                        } else if (operator !== '#') {
                            separator = operator;
                        }

                        return (values.length !== 0 ? operator : '') + values.join(separator);
                    } else {
                        return values.join(',');
                    }

                } else {
                    return encodeReserved(literal);
                }
            });
        }
    };
}

function getValues(context, operator, key, modifier) {

    var value = context[key], result = [];

    if (isDefined(value) && value !== '') {
        if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {
            value = value.toString();

            if (modifier && modifier !== '*') {
                value = value.substring(0, parseInt(modifier, 10));
            }

            result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : null));
        } else {
            if (modifier === '*') {
                if (Array.isArray(value)) {
                    value.filter(isDefined).forEach(function (value) {
                        result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : null));
                    });
                } else {
                    Object.keys(value).forEach(function (k) {
                        if (isDefined(value[k])) {
                            result.push(encodeValue(operator, value[k], k));
                        }
                    });
                }
            } else {
                var tmp = [];

                if (Array.isArray(value)) {
                    value.filter(isDefined).forEach(function (value) {
                        tmp.push(encodeValue(operator, value));
                    });
                } else {
                    Object.keys(value).forEach(function (k) {
                        if (isDefined(value[k])) {
                            tmp.push(encodeURIComponent(k));
                            tmp.push(encodeValue(operator, value[k].toString()));
                        }
                    });
                }

                if (isKeyOperator(operator)) {
                    result.push(encodeURIComponent(key) + '=' + tmp.join(','));
                } else if (tmp.length !== 0) {
                    result.push(tmp.join(','));
                }
            }
        }
    } else {
        if (operator === ';') {
            result.push(encodeURIComponent(key));
        } else if (value === '' && (operator === '&' || operator === '?')) {
            result.push(encodeURIComponent(key) + '=');
        } else if (value === '') {
            result.push('');
        }
    }

    return result;
}

function isDefined(value) {
    return value !== undefined && value !== null;
}

function isKeyOperator(operator) {
    return operator === ';' || operator === '&' || operator === '?';
}

function encodeValue(operator, value, key) {

    value = (operator === '+' || operator === '#') ? encodeReserved(value) : encodeURIComponent(value);

    if (key) {
        return encodeURIComponent(key) + '=' + value;
    } else {
        return value;
    }
}

function encodeReserved(str) {
    return str.split(/(%[0-9A-Fa-f]{2})/g).map(function (part) {
        if (!/%[0-9A-Fa-f]/.test(part)) {
            part = encodeURI(part);
        }
        return part;
    }).join('');
}

/**
 * URL Template (RFC 6570) Transform.
 */

var template = function (options) {

    var variables = [], url = expand(options.url, options.params, variables);

    variables.forEach(function (key) {
        delete options.params[key];
    });

    return url;
};

/**
 * Service for URL templating.
 */

function Url(url, params) {

    var self = this || {}, options$$1 = url, transform;

    if (isString(url)) {
        options$$1 = {url: url, params: params};
    }

    options$$1 = merge({}, Url.options, self.$options, options$$1);

    Url.transforms.forEach(function (handler) {

        if (isString(handler)) {
            handler = Url.transform[handler];
        }

        if (isFunction(handler)) {
            transform = factory(handler, transform, self.$vm);
        }

    });

    return transform(options$$1);
}

/**
 * Url options.
 */

Url.options = {
    url: '',
    root: null,
    params: {}
};

/**
 * Url transforms.
 */

Url.transform = {template: template, query: query, root: root};
Url.transforms = ['template', 'query', 'root'];

/**
 * Encodes a Url parameter string.
 *
 * @param {Object} obj
 */

Url.params = function (obj) {

    var params = [], escape = encodeURIComponent;

    params.add = function (key, value) {

        if (isFunction(value)) {
            value = value();
        }

        if (value === null) {
            value = '';
        }

        this.push(escape(key) + '=' + escape(value));
    };

    serialize(params, obj);

    return params.join('&').replace(/%20/g, '+');
};

/**
 * Parse a URL and return its components.
 *
 * @param {String} url
 */

Url.parse = function (url) {

    var el = document.createElement('a');

    if (document.documentMode) {
        el.href = url;
        url = el.href;
    }

    el.href = url;

    return {
        href: el.href,
        protocol: el.protocol ? el.protocol.replace(/:$/, '') : '',
        port: el.port,
        host: el.host,
        hostname: el.hostname,
        pathname: el.pathname.charAt(0) === '/' ? el.pathname : '/' + el.pathname,
        search: el.search ? el.search.replace(/^\?/, '') : '',
        hash: el.hash ? el.hash.replace(/^#/, '') : ''
    };
};

function factory(handler, next, vm) {
    return function (options$$1) {
        return handler.call(vm, options$$1, next);
    };
}

function serialize(params, obj, scope) {

    var array = isArray(obj), plain = isPlainObject(obj), hash;

    each(obj, function (value, key) {

        hash = isObject(value) || isArray(value);

        if (scope) {
            key = scope + '[' + (plain || hash ? key : '') + ']';
        }

        if (!scope && array) {
            params.add(value.name, value.value);
        } else if (hash) {
            serialize(params, value, key);
        } else {
            params.add(key, value);
        }
    });
}

/**
 * XDomain client (Internet Explorer).
 */

var xdrClient = function (request) {
    return new PromiseObj(function (resolve) {

        var xdr = new XDomainRequest(), handler = function (ref) {
            var type = ref.type;


            var status = 0;

            if (type === 'load') {
                status = 200;
            } else if (type === 'error') {
                status = 500;
            }

            resolve(request.respondWith(xdr.responseText, {status: status}));
        };

        request.abort = function () { return xdr.abort(); };

        xdr.open(request.method, request.getUrl());

        if (request.timeout) {
            xdr.timeout = request.timeout;
        }

        xdr.onload = handler;
        xdr.onabort = handler;
        xdr.onerror = handler;
        xdr.ontimeout = handler;
        xdr.onprogress = function () {};
        xdr.send(request.getBody());
    });
};

/**
 * CORS Interceptor.
 */

var SUPPORTS_CORS = inBrowser && 'withCredentials' in new XMLHttpRequest();

var cors = function (request, next) {

    if (inBrowser) {

        var orgUrl = Url.parse(location.href);
        var reqUrl = Url.parse(request.getUrl());

        if (reqUrl.protocol !== orgUrl.protocol || reqUrl.host !== orgUrl.host) {

            request.crossOrigin = true;
            request.emulateHTTP = false;

            if (!SUPPORTS_CORS) {
                request.client = xdrClient;
            }
        }
    }

    next();
};

/**
 * Body Interceptor.
 */

var body = function (request, next) {

    if (isFormData(request.body)) {

        request.headers.delete('Content-Type');

    } else if (isObject(request.body) || isArray(request.body)) {

        if (request.emulateJSON) {
            request.body = Url.params(request.body);
            request.headers.set('Content-Type', 'application/x-www-form-urlencoded');
        } else {
            request.body = JSON.stringify(request.body);
        }
    }

    next(function (response) {

        Object.defineProperty(response, 'data', {

            get: function get() {
                return this.body;
            },

            set: function set(body) {
                this.body = body;
            }

        });

        return response.bodyText ? when(response.text(), function (text) {

            var type = response.headers.get('Content-Type') || '';

            if (type.indexOf('application/json') === 0 || isJson(text)) {

                try {
                    response.body = JSON.parse(text);
                } catch (e) {
                    response.body = null;
                }

            } else {
                response.body = text;
            }

            return response;

        }) : response;

    });
};

function isJson(str) {

    var start = str.match(/^\[|^\{(?!\{)/), end = {'[': /]$/, '{': /}$/};

    return start && end[start[0]].test(str);
}

/**
 * JSONP client (Browser).
 */

var jsonpClient = function (request) {
    return new PromiseObj(function (resolve) {

        var name = request.jsonp || 'callback', callback = request.jsonpCallback || '_jsonp' + Math.random().toString(36).substr(2), body = null, handler, script;

        handler = function (ref) {
            var type = ref.type;


            var status = 0;

            if (type === 'load' && body !== null) {
                status = 200;
            } else if (type === 'error') {
                status = 500;
            }

            if (status && window[callback]) {
                delete window[callback];
                document.body.removeChild(script);
            }

            resolve(request.respondWith(body, {status: status}));
        };

        window[callback] = function (result) {
            body = JSON.stringify(result);
        };

        request.abort = function () {
            handler({type: 'abort'});
        };

        request.params[name] = callback;

        if (request.timeout) {
            setTimeout(request.abort, request.timeout);
        }

        script = document.createElement('script');
        script.src = request.getUrl();
        script.type = 'text/javascript';
        script.async = true;
        script.onload = handler;
        script.onerror = handler;

        document.body.appendChild(script);
    });
};

/**
 * JSONP Interceptor.
 */

var jsonp = function (request, next) {

    if (request.method == 'JSONP') {
        request.client = jsonpClient;
    }

    next();
};

/**
 * Before Interceptor.
 */

var before = function (request, next) {

    if (isFunction(request.before)) {
        request.before.call(this, request);
    }

    next();
};

/**
 * HTTP method override Interceptor.
 */

var method = function (request, next) {

    if (request.emulateHTTP && /^(PUT|PATCH|DELETE)$/i.test(request.method)) {
        request.headers.set('X-HTTP-Method-Override', request.method);
        request.method = 'POST';
    }

    next();
};

/**
 * Header Interceptor.
 */

var header = function (request, next) {

    var headers = assign({}, Http.headers.common,
        !request.crossOrigin ? Http.headers.custom : {},
        Http.headers[toLower(request.method)]
    );

    each(headers, function (value, name) {
        if (!request.headers.has(name)) {
            request.headers.set(name, value);
        }
    });

    next();
};

/**
 * XMLHttp client (Browser).
 */

var xhrClient = function (request) {
    return new PromiseObj(function (resolve) {

        var xhr = new XMLHttpRequest(), handler = function (event) {

            var response = request.respondWith(
                'response' in xhr ? xhr.response : xhr.responseText, {
                    status: xhr.status === 1223 ? 204 : xhr.status, // IE9 status bug
                    statusText: xhr.status === 1223 ? 'No Content' : trim(xhr.statusText)
                }
            );

            each(trim(xhr.getAllResponseHeaders()).split('\n'), function (row) {
                response.headers.append(row.slice(0, row.indexOf(':')), row.slice(row.indexOf(':') + 1));
            });

            resolve(response);
        };

        request.abort = function () { return xhr.abort(); };

        if (request.progress) {
            if (request.method === 'GET') {
                xhr.addEventListener('progress', request.progress);
            } else if (/^(POST|PUT)$/i.test(request.method)) {
                xhr.upload.addEventListener('progress', request.progress);
            }
        }

        xhr.open(request.method, request.getUrl(), true);

        if (request.timeout) {
            xhr.timeout = request.timeout;
        }

        if (request.responseType && 'responseType' in xhr) {
            xhr.responseType = request.responseType;
        }

        if (request.withCredentials || request.credentials) {
            xhr.withCredentials = true;
        }

        if (!request.crossOrigin) {
            request.headers.set('X-Requested-With', 'XMLHttpRequest');
        }

        request.headers.forEach(function (value, name) {
            xhr.setRequestHeader(name, value);
        });

        xhr.onload = handler;
        xhr.onabort = handler;
        xhr.onerror = handler;
        xhr.ontimeout = handler;
        xhr.send(request.getBody());
    });
};

/**
 * Http client (Node).
 */

var nodeClient = function (request) {

    var client = __webpack_require__(133);

    return new PromiseObj(function (resolve) {

        var url = request.getUrl();
        var body = request.getBody();
        var method = request.method;
        var headers = {}, handler;

        request.headers.forEach(function (value, name) {
            headers[name] = value;
        });

        client(url, {body: body, method: method, headers: headers}).then(handler = function (resp) {

            var response = request.respondWith(resp.body, {
                    status: resp.statusCode,
                    statusText: trim(resp.statusMessage)
                }
            );

            each(resp.headers, function (value, name) {
                response.headers.set(name, value);
            });

            resolve(response);

        }, function (error$$1) { return handler(error$$1.response); });
    });
};

/**
 * Base client.
 */

var Client = function (context) {

    var reqHandlers = [sendRequest], resHandlers = [], handler;

    if (!isObject(context)) {
        context = null;
    }

    function Client(request) {
        return new PromiseObj(function (resolve) {

            function exec() {

                handler = reqHandlers.pop();

                if (isFunction(handler)) {
                    handler.call(context, request, next);
                } else {
                    warn(("Invalid interceptor of type " + (typeof handler) + ", must be a function"));
                    next();
                }
            }

            function next(response) {

                if (isFunction(response)) {

                    resHandlers.unshift(response);

                } else if (isObject(response)) {

                    resHandlers.forEach(function (handler) {
                        response = when(response, function (response) {
                            return handler.call(context, response) || response;
                        });
                    });

                    when(response, resolve);

                    return;
                }

                exec();
            }

            exec();

        }, context);
    }

    Client.use = function (handler) {
        reqHandlers.push(handler);
    };

    return Client;
};

function sendRequest(request, resolve) {

    var client = request.client || (inBrowser ? xhrClient : nodeClient);

    resolve(client(request));
}

/**
 * HTTP Headers.
 */

var Headers = function Headers(headers) {
    var this$1 = this;


    this.map = {};

    each(headers, function (value, name) { return this$1.append(name, value); });
};

Headers.prototype.has = function has (name) {
    return getName(this.map, name) !== null;
};

Headers.prototype.get = function get (name) {

    var list = this.map[getName(this.map, name)];

    return list ? list.join() : null;
};

Headers.prototype.getAll = function getAll (name) {
    return this.map[getName(this.map, name)] || [];
};

Headers.prototype.set = function set (name, value) {
    this.map[normalizeName(getName(this.map, name) || name)] = [trim(value)];
};

Headers.prototype.append = function append (name, value){

    var list = this.map[getName(this.map, name)];

    if (list) {
        list.push(trim(value));
    } else {
        this.set(name, value);
    }
};

Headers.prototype.delete = function delete$1 (name){
    delete this.map[getName(this.map, name)];
};

Headers.prototype.deleteAll = function deleteAll (){
    this.map = {};
};

Headers.prototype.forEach = function forEach (callback, thisArg) {
        var this$1 = this;

    each(this.map, function (list, name) {
        each(list, function (value) { return callback.call(thisArg, value, name, this$1); });
    });
};

function getName(map, name) {
    return Object.keys(map).reduce(function (prev, curr) {
        return toLower(name) === toLower(curr) ? curr : prev;
    }, null);
}

function normalizeName(name) {

    if (/[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(name)) {
        throw new TypeError('Invalid character in header field name');
    }

    return trim(name);
}

/**
 * HTTP Response.
 */

var Response = function Response(body, ref) {
    var url = ref.url;
    var headers = ref.headers;
    var status = ref.status;
    var statusText = ref.statusText;


    this.url = url;
    this.ok = status >= 200 && status < 300;
    this.status = status || 0;
    this.statusText = statusText || '';
    this.headers = new Headers(headers);
    this.body = body;

    if (isString(body)) {

        this.bodyText = body;

    } else if (isBlob(body)) {

        this.bodyBlob = body;

        if (isBlobText(body)) {
            this.bodyText = blobText(body);
        }
    }
};

Response.prototype.blob = function blob () {
    return when(this.bodyBlob);
};

Response.prototype.text = function text () {
    return when(this.bodyText);
};

Response.prototype.json = function json () {
    return when(this.text(), function (text) { return JSON.parse(text); });
};

function blobText(body) {
    return new PromiseObj(function (resolve) {

        var reader = new FileReader();

        reader.readAsText(body);
        reader.onload = function () {
            resolve(reader.result);
        };

    });
}

function isBlobText(body) {
    return body.type.indexOf('text') === 0 || body.type.indexOf('json') !== -1;
}

/**
 * HTTP Request.
 */

var Request = function Request(options$$1) {

    this.body = null;
    this.params = {};

    assign(this, options$$1, {
        method: toUpper(options$$1.method || 'GET')
    });

    if (!(this.headers instanceof Headers)) {
        this.headers = new Headers(this.headers);
    }
};

Request.prototype.getUrl = function getUrl (){
    return Url(this);
};

Request.prototype.getBody = function getBody (){
    return this.body;
};

Request.prototype.respondWith = function respondWith (body, options$$1) {
    return new Response(body, assign(options$$1 || {}, {url: this.getUrl()}));
};

/**
 * Service for sending network requests.
 */

var COMMON_HEADERS = {'Accept': 'application/json, text/plain, */*'};
var JSON_CONTENT_TYPE = {'Content-Type': 'application/json;charset=utf-8'};

function Http(options$$1) {

    var self = this || {}, client = Client(self.$vm);

    defaults(options$$1 || {}, self.$options, Http.options);

    Http.interceptors.forEach(function (handler) {

        if (isString(handler)) {
            handler = Http.interceptor[handler];
        }

        if (isFunction(handler)) {
            client.use(handler);
        }

    });

    return client(new Request(options$$1)).then(function (response) {

        return response.ok ? response : PromiseObj.reject(response);

    }, function (response) {

        if (response instanceof Error) {
            error(response);
        }

        return PromiseObj.reject(response);
    });
}

Http.options = {};

Http.headers = {
    put: JSON_CONTENT_TYPE,
    post: JSON_CONTENT_TYPE,
    patch: JSON_CONTENT_TYPE,
    delete: JSON_CONTENT_TYPE,
    common: COMMON_HEADERS,
    custom: {}
};

Http.interceptor = {before: before, method: method, body: body, jsonp: jsonp, header: header, cors: cors};
Http.interceptors = ['before', 'method', 'body', 'jsonp', 'header', 'cors'];

['get', 'delete', 'head', 'jsonp'].forEach(function (method$$1) {

    Http[method$$1] = function (url, options$$1) {
        return this(assign(options$$1 || {}, {url: url, method: method$$1}));
    };

});

['post', 'put', 'patch'].forEach(function (method$$1) {

    Http[method$$1] = function (url, body$$1, options$$1) {
        return this(assign(options$$1 || {}, {url: url, method: method$$1, body: body$$1}));
    };

});

/**
 * Service for interacting with RESTful services.
 */

function Resource(url, params, actions, options$$1) {

    var self = this || {}, resource = {};

    actions = assign({},
        Resource.actions,
        actions
    );

    each(actions, function (action, name) {

        action = merge({url: url, params: assign({}, params)}, options$$1, action);

        resource[name] = function () {
            return (self.$http || Http)(opts(action, arguments));
        };
    });

    return resource;
}

function opts(action, args) {

    var options$$1 = assign({}, action), params = {}, body;

    switch (args.length) {

        case 2:

            params = args[0];
            body = args[1];

            break;

        case 1:

            if (/^(POST|PUT|PATCH)$/i.test(options$$1.method)) {
                body = args[0];
            } else {
                params = args[0];
            }

            break;

        case 0:

            break;

        default:

            throw 'Expected up to 2 arguments [params, body], got ' + args.length + ' arguments';
    }

    options$$1.body = body;
    options$$1.params = assign({}, options$$1.params, params);

    return options$$1;
}

Resource.actions = {

    get: {method: 'GET'},
    save: {method: 'POST'},
    query: {method: 'GET'},
    update: {method: 'PUT'},
    remove: {method: 'DELETE'},
    delete: {method: 'DELETE'}

};

/**
 * Install plugin.
 */

function plugin(Vue) {

    if (plugin.installed) {
        return;
    }

    Util(Vue);

    Vue.url = Url;
    Vue.http = Http;
    Vue.resource = Resource;
    Vue.Promise = PromiseObj;

    Object.defineProperties(Vue.prototype, {

        $url: {
            get: function get() {
                return options(Vue.url, this, this.$options.url);
            }
        },

        $http: {
            get: function get() {
                return options(Vue.http, this, this.$options.http);
            }
        },

        $resource: {
            get: function get() {
                return Vue.resource.bind(this);
            }
        },

        $promise: {
            get: function get() {
                var this$1 = this;

                return function (executor) { return new Vue.Promise(executor, this$1); };
            }
        }

    });
}

if (typeof window !== 'undefined' && window.Vue) {
    window.Vue.use(plugin);
}

/* harmony default export */ __webpack_exports__["a"] = (plugin);



/***/ }),
/* 19 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
  * vue-router v2.5.2
  * (c) 2017 Evan You
  * @license MIT
  */
/*  */

function assert (condition, message) {
  if (!condition) {
    throw new Error(("[vue-router] " + message))
  }
}

function warn (condition, message) {
  if (false) {
    typeof console !== 'undefined' && console.warn(("[vue-router] " + message));
  }
}

var View = {
  name: 'router-view',
  functional: true,
  props: {
    name: {
      type: String,
      default: 'default'
    }
  },
  render: function render (_, ref) {
    var props = ref.props;
    var children = ref.children;
    var parent = ref.parent;
    var data = ref.data;

    data.routerView = true;

    // directly use parent context's createElement() function
    // so that components rendered by router-view can resolve named slots
    var h = parent.$createElement;
    var name = props.name;
    var route = parent.$route;
    var cache = parent._routerViewCache || (parent._routerViewCache = {});

    // determine current view depth, also check to see if the tree
    // has been toggled inactive but kept-alive.
    var depth = 0;
    var inactive = false;
    while (parent) {
      if (parent.$vnode && parent.$vnode.data.routerView) {
        depth++;
      }
      if (parent._inactive) {
        inactive = true;
      }
      parent = parent.$parent;
    }
    data.routerViewDepth = depth;

    // render previous view if the tree is inactive and kept-alive
    if (inactive) {
      return h(cache[name], data, children)
    }

    var matched = route.matched[depth];
    // render empty node if no matched route
    if (!matched) {
      cache[name] = null;
      return h()
    }

    var component = cache[name] = matched.components[name];

    // attach instance registration hook
    // this will be called in the instance's injected lifecycle hooks
    data.registerRouteInstance = function (vm, val) {
      // val could be undefined for unregistration
      if (matched.instances[name] !== vm) {
        matched.instances[name] = val;
      }
    }

    // also regiseter instance in prepatch hook
    // in case the same component instance is reused across different routes
    ;(data.hook || (data.hook = {})).prepatch = function (_, vnode) {
      matched.instances[name] = vnode.componentInstance;
    };

    // resolve props
    data.props = resolveProps(route, matched.props && matched.props[name]);

    return h(component, data, children)
  }
};

function resolveProps (route, config) {
  switch (typeof config) {
    case 'undefined':
      return
    case 'object':
      return config
    case 'function':
      return config(route)
    case 'boolean':
      return config ? route.params : undefined
    default:
      if (false) {
        warn(
          false,
          "props in \"" + (route.path) + "\" is a " + (typeof config) + ", " +
          "expecting an object, function or boolean."
        );
      }
  }
}

/*  */

var encodeReserveRE = /[!'()*]/g;
var encodeReserveReplacer = function (c) { return '%' + c.charCodeAt(0).toString(16); };
var commaRE = /%2C/g;

// fixed encodeURIComponent which is more conformant to RFC3986:
// - escapes [!'()*]
// - preserve commas
var encode = function (str) { return encodeURIComponent(str)
  .replace(encodeReserveRE, encodeReserveReplacer)
  .replace(commaRE, ','); };

var decode = decodeURIComponent;

function resolveQuery (
  query,
  extraQuery,
  _parseQuery
) {
  if ( extraQuery === void 0 ) extraQuery = {};

  var parse = _parseQuery || parseQuery;
  var parsedQuery;
  try {
    parsedQuery = parse(query || '');
  } catch (e) {
    "production" !== 'production' && warn(false, e.message);
    parsedQuery = {};
  }
  for (var key in extraQuery) {
    var val = extraQuery[key];
    parsedQuery[key] = Array.isArray(val) ? val.slice() : val;
  }
  return parsedQuery
}

function parseQuery (query) {
  var res = {};

  query = query.trim().replace(/^(\?|#|&)/, '');

  if (!query) {
    return res
  }

  query.split('&').forEach(function (param) {
    var parts = param.replace(/\+/g, ' ').split('=');
    var key = decode(parts.shift());
    var val = parts.length > 0
      ? decode(parts.join('='))
      : null;

    if (res[key] === undefined) {
      res[key] = val;
    } else if (Array.isArray(res[key])) {
      res[key].push(val);
    } else {
      res[key] = [res[key], val];
    }
  });

  return res
}

function stringifyQuery (obj) {
  var res = obj ? Object.keys(obj).map(function (key) {
    var val = obj[key];

    if (val === undefined) {
      return ''
    }

    if (val === null) {
      return encode(key)
    }

    if (Array.isArray(val)) {
      var result = [];
      val.slice().forEach(function (val2) {
        if (val2 === undefined) {
          return
        }
        if (val2 === null) {
          result.push(encode(key));
        } else {
          result.push(encode(key) + '=' + encode(val2));
        }
      });
      return result.join('&')
    }

    return encode(key) + '=' + encode(val)
  }).filter(function (x) { return x.length > 0; }).join('&') : null;
  return res ? ("?" + res) : ''
}

/*  */


var trailingSlashRE = /\/?$/;

function createRoute (
  record,
  location,
  redirectedFrom,
  router
) {
  var stringifyQuery$$1 = router && router.options.stringifyQuery;
  var route = {
    name: location.name || (record && record.name),
    meta: (record && record.meta) || {},
    path: location.path || '/',
    hash: location.hash || '',
    query: location.query || {},
    params: location.params || {},
    fullPath: getFullPath(location, stringifyQuery$$1),
    matched: record ? formatMatch(record) : []
  };
  if (redirectedFrom) {
    route.redirectedFrom = getFullPath(redirectedFrom, stringifyQuery$$1);
  }
  return Object.freeze(route)
}

// the starting route that represents the initial state
var START = createRoute(null, {
  path: '/'
});

function formatMatch (record) {
  var res = [];
  while (record) {
    res.unshift(record);
    record = record.parent;
  }
  return res
}

function getFullPath (
  ref,
  _stringifyQuery
) {
  var path = ref.path;
  var query = ref.query; if ( query === void 0 ) query = {};
  var hash = ref.hash; if ( hash === void 0 ) hash = '';

  var stringify = _stringifyQuery || stringifyQuery;
  return (path || '/') + stringify(query) + hash
}

function isSameRoute (a, b) {
  if (b === START) {
    return a === b
  } else if (!b) {
    return false
  } else if (a.path && b.path) {
    return (
      a.path.replace(trailingSlashRE, '') === b.path.replace(trailingSlashRE, '') &&
      a.hash === b.hash &&
      isObjectEqual(a.query, b.query)
    )
  } else if (a.name && b.name) {
    return (
      a.name === b.name &&
      a.hash === b.hash &&
      isObjectEqual(a.query, b.query) &&
      isObjectEqual(a.params, b.params)
    )
  } else {
    return false
  }
}

function isObjectEqual (a, b) {
  if ( a === void 0 ) a = {};
  if ( b === void 0 ) b = {};

  var aKeys = Object.keys(a);
  var bKeys = Object.keys(b);
  if (aKeys.length !== bKeys.length) {
    return false
  }
  return aKeys.every(function (key) { return String(a[key]) === String(b[key]); })
}

function isIncludedRoute (current, target) {
  return (
    current.path.replace(trailingSlashRE, '/').indexOf(
      target.path.replace(trailingSlashRE, '/')
    ) === 0 &&
    (!target.hash || current.hash === target.hash) &&
    queryIncludes(current.query, target.query)
  )
}

function queryIncludes (current, target) {
  for (var key in target) {
    if (!(key in current)) {
      return false
    }
  }
  return true
}

/*  */

// work around weird flow bug
var toTypes = [String, Object];
var eventTypes = [String, Array];

var Link = {
  name: 'router-link',
  props: {
    to: {
      type: toTypes,
      required: true
    },
    tag: {
      type: String,
      default: 'a'
    },
    exact: Boolean,
    append: Boolean,
    replace: Boolean,
    activeClass: String,
    exactActiveClass: String,
    event: {
      type: eventTypes,
      default: 'click'
    }
  },
  render: function render (h) {
    var this$1 = this;

    var router = this.$router;
    var current = this.$route;
    var ref = router.resolve(this.to, current, this.append);
    var location = ref.location;
    var route = ref.route;
    var href = ref.href;

    var classes = {};
    var globalActiveClass = router.options.linkActiveClass;
    var globalExactActiveClass = router.options.linkExactActiveClass;
    // Support global empty active class
    var activeClassFallback = globalActiveClass == null
            ? 'router-link-active'
            : globalActiveClass;
    var exactActiveClassFallback = globalExactActiveClass == null
            ? 'router-link-exact-active'
            : globalExactActiveClass;
    var activeClass = this.activeClass == null
            ? activeClassFallback
            : this.activeClass;
    var exactActiveClass = this.exactActiveClass == null
            ? exactActiveClassFallback
            : this.exactActiveClass;
    var compareTarget = location.path
      ? createRoute(null, location, null, router)
      : route;

    classes[exactActiveClass] = isSameRoute(current, compareTarget);
    classes[activeClass] = this.exact
      ? classes[exactActiveClass]
      : isIncludedRoute(current, compareTarget);

    var handler = function (e) {
      if (guardEvent(e)) {
        if (this$1.replace) {
          router.replace(location);
        } else {
          router.push(location);
        }
      }
    };

    var on = { click: guardEvent };
    if (Array.isArray(this.event)) {
      this.event.forEach(function (e) { on[e] = handler; });
    } else {
      on[this.event] = handler;
    }

    var data = {
      class: classes
    };

    if (this.tag === 'a') {
      data.on = on;
      data.attrs = { href: href };
    } else {
      // find the first <a> child and apply listener and href
      var a = findAnchor(this.$slots.default);
      if (a) {
        // in case the <a> is a static node
        a.isStatic = false;
        var extend = _Vue.util.extend;
        var aData = a.data = extend({}, a.data);
        aData.on = on;
        var aAttrs = a.data.attrs = extend({}, a.data.attrs);
        aAttrs.href = href;
      } else {
        // doesn't have <a> child, apply listener to self
        data.on = on;
      }
    }

    return h(this.tag, data, this.$slots.default)
  }
};

function guardEvent (e) {
  // don't redirect with control keys
  if (e.metaKey || e.ctrlKey || e.shiftKey) { return }
  // don't redirect when preventDefault called
  if (e.defaultPrevented) { return }
  // don't redirect on right click
  if (e.button !== undefined && e.button !== 0) { return }
  // don't redirect if `target="_blank"`
  if (e.currentTarget && e.currentTarget.getAttribute) {
    var target = e.currentTarget.getAttribute('target');
    if (/\b_blank\b/i.test(target)) { return }
  }
  // this may be a Weex event which doesn't have this method
  if (e.preventDefault) {
    e.preventDefault();
  }
  return true
}

function findAnchor (children) {
  if (children) {
    var child;
    for (var i = 0; i < children.length; i++) {
      child = children[i];
      if (child.tag === 'a') {
        return child
      }
      if (child.children && (child = findAnchor(child.children))) {
        return child
      }
    }
  }
}

var _Vue;

function install (Vue) {
  if (install.installed) { return }
  install.installed = true;

  _Vue = Vue;

  Object.defineProperty(Vue.prototype, '$router', {
    get: function get () { return this.$root._router }
  });

  Object.defineProperty(Vue.prototype, '$route', {
    get: function get () { return this.$root._route }
  });

  var isDef = function (v) { return v !== undefined; };

  var registerInstance = function (vm, callVal) {
    var i = vm.$options._parentVnode;
    if (isDef(i) && isDef(i = i.data) && isDef(i = i.registerRouteInstance)) {
      i(vm, callVal);
    }
  };

  Vue.mixin({
    beforeCreate: function beforeCreate () {
      if (isDef(this.$options.router)) {
        this._router = this.$options.router;
        this._router.init(this);
        Vue.util.defineReactive(this, '_route', this._router.history.current);
      }
      registerInstance(this, this);
    },
    destroyed: function destroyed () {
      registerInstance(this);
    }
  });

  Vue.component('router-view', View);
  Vue.component('router-link', Link);

  var strats = Vue.config.optionMergeStrategies;
  // use the same hook merging strategy for route hooks
  strats.beforeRouteEnter = strats.beforeRouteLeave = strats.created;
}

/*  */

var inBrowser = typeof window !== 'undefined';

/*  */

function resolvePath (
  relative,
  base,
  append
) {
  var firstChar = relative.charAt(0);
  if (firstChar === '/') {
    return relative
  }

  if (firstChar === '?' || firstChar === '#') {
    return base + relative
  }

  var stack = base.split('/');

  // remove trailing segment if:
  // - not appending
  // - appending to trailing slash (last segment is empty)
  if (!append || !stack[stack.length - 1]) {
    stack.pop();
  }

  // resolve relative path
  var segments = relative.replace(/^\//, '').split('/');
  for (var i = 0; i < segments.length; i++) {
    var segment = segments[i];
    if (segment === '..') {
      stack.pop();
    } else if (segment !== '.') {
      stack.push(segment);
    }
  }

  // ensure leading slash
  if (stack[0] !== '') {
    stack.unshift('');
  }

  return stack.join('/')
}

function parsePath (path) {
  var hash = '';
  var query = '';

  var hashIndex = path.indexOf('#');
  if (hashIndex >= 0) {
    hash = path.slice(hashIndex);
    path = path.slice(0, hashIndex);
  }

  var queryIndex = path.indexOf('?');
  if (queryIndex >= 0) {
    query = path.slice(queryIndex + 1);
    path = path.slice(0, queryIndex);
  }

  return {
    path: path,
    query: query,
    hash: hash
  }
}

function cleanPath (path) {
  return path.replace(/\/\//g, '/')
}

var index$1 = Array.isArray || function (arr) {
  return Object.prototype.toString.call(arr) == '[object Array]';
};

var isarray = index$1;

/**
 * Expose `pathToRegexp`.
 */
var index = pathToRegexp;
var parse_1 = parse;
var compile_1 = compile;
var tokensToFunction_1 = tokensToFunction;
var tokensToRegExp_1 = tokensToRegExp;

/**
 * The main path matching regexp utility.
 *
 * @type {RegExp}
 */
var PATH_REGEXP = new RegExp([
  // Match escaped characters that would otherwise appear in future matches.
  // This allows the user to escape special characters that won't transform.
  '(\\\\.)',
  // Match Express-style parameters and un-named parameters with a prefix
  // and optional suffixes. Matches appear as:
  //
  // "/:test(\\d+)?" => ["/", "test", "\d+", undefined, "?", undefined]
  // "/route(\\d+)"  => [undefined, undefined, undefined, "\d+", undefined, undefined]
  // "/*"            => ["/", undefined, undefined, undefined, undefined, "*"]
  '([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))'
].join('|'), 'g');

/**
 * Parse a string for the raw tokens.
 *
 * @param  {string}  str
 * @param  {Object=} options
 * @return {!Array}
 */
function parse (str, options) {
  var tokens = [];
  var key = 0;
  var index = 0;
  var path = '';
  var defaultDelimiter = options && options.delimiter || '/';
  var res;

  while ((res = PATH_REGEXP.exec(str)) != null) {
    var m = res[0];
    var escaped = res[1];
    var offset = res.index;
    path += str.slice(index, offset);
    index = offset + m.length;

    // Ignore already escaped sequences.
    if (escaped) {
      path += escaped[1];
      continue
    }

    var next = str[index];
    var prefix = res[2];
    var name = res[3];
    var capture = res[4];
    var group = res[5];
    var modifier = res[6];
    var asterisk = res[7];

    // Push the current path onto the tokens.
    if (path) {
      tokens.push(path);
      path = '';
    }

    var partial = prefix != null && next != null && next !== prefix;
    var repeat = modifier === '+' || modifier === '*';
    var optional = modifier === '?' || modifier === '*';
    var delimiter = res[2] || defaultDelimiter;
    var pattern = capture || group;

    tokens.push({
      name: name || key++,
      prefix: prefix || '',
      delimiter: delimiter,
      optional: optional,
      repeat: repeat,
      partial: partial,
      asterisk: !!asterisk,
      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')
    });
  }

  // Match any characters still remaining.
  if (index < str.length) {
    path += str.substr(index);
  }

  // If the path exists, push it onto the end.
  if (path) {
    tokens.push(path);
  }

  return tokens
}

/**
 * Compile a string to a template function for the path.
 *
 * @param  {string}             str
 * @param  {Object=}            options
 * @return {!function(Object=, Object=)}
 */
function compile (str, options) {
  return tokensToFunction(parse(str, options))
}

/**
 * Prettier encoding of URI path segments.
 *
 * @param  {string}
 * @return {string}
 */
function encodeURIComponentPretty (str) {
  return encodeURI(str).replace(/[\/?#]/g, function (c) {
    return '%' + c.charCodeAt(0).toString(16).toUpperCase()
  })
}

/**
 * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.
 *
 * @param  {string}
 * @return {string}
 */
function encodeAsterisk (str) {
  return encodeURI(str).replace(/[?#]/g, function (c) {
    return '%' + c.charCodeAt(0).toString(16).toUpperCase()
  })
}

/**
 * Expose a method for transforming tokens into the path function.
 */
function tokensToFunction (tokens) {
  // Compile all the tokens into regexps.
  var matches = new Array(tokens.length);

  // Compile all the patterns before compilation.
  for (var i = 0; i < tokens.length; i++) {
    if (typeof tokens[i] === 'object') {
      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$');
    }
  }

  return function (obj, opts) {
    var path = '';
    var data = obj || {};
    var options = opts || {};
    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent;

    for (var i = 0; i < tokens.length; i++) {
      var token = tokens[i];

      if (typeof token === 'string') {
        path += token;

        continue
      }

      var value = data[token.name];
      var segment;

      if (value == null) {
        if (token.optional) {
          // Prepend partial segment prefixes.
          if (token.partial) {
            path += token.prefix;
          }

          continue
        } else {
          throw new TypeError('Expected "' + token.name + '" to be defined')
        }
      }

      if (isarray(value)) {
        if (!token.repeat) {
          throw new TypeError('Expected "' + token.name + '" to not repeat, but received `' + JSON.stringify(value) + '`')
        }

        if (value.length === 0) {
          if (token.optional) {
            continue
          } else {
            throw new TypeError('Expected "' + token.name + '" to not be empty')
          }
        }

        for (var j = 0; j < value.length; j++) {
          segment = encode(value[j]);

          if (!matches[i].test(segment)) {
            throw new TypeError('Expected all "' + token.name + '" to match "' + token.pattern + '", but received `' + JSON.stringify(segment) + '`')
          }

          path += (j === 0 ? token.prefix : token.delimiter) + segment;
        }

        continue
      }

      segment = token.asterisk ? encodeAsterisk(value) : encode(value);

      if (!matches[i].test(segment)) {
        throw new TypeError('Expected "' + token.name + '" to match "' + token.pattern + '", but received "' + segment + '"')
      }

      path += token.prefix + segment;
    }

    return path
  }
}

/**
 * Escape a regular expression string.
 *
 * @param  {string} str
 * @return {string}
 */
function escapeString (str) {
  return str.replace(/([.+*?=^!:${}()[\]|\/\\])/g, '\\$1')
}

/**
 * Escape the capturing group by escaping special characters and meaning.
 *
 * @param  {string} group
 * @return {string}
 */
function escapeGroup (group) {
  return group.replace(/([=!:$\/()])/g, '\\$1')
}

/**
 * Attach the keys as a property of the regexp.
 *
 * @param  {!RegExp} re
 * @param  {Array}   keys
 * @return {!RegExp}
 */
function attachKeys (re, keys) {
  re.keys = keys;
  return re
}

/**
 * Get the flags for a regexp from the options.
 *
 * @param  {Object} options
 * @return {string}
 */
function flags (options) {
  return options.sensitive ? '' : 'i'
}

/**
 * Pull out keys from a regexp.
 *
 * @param  {!RegExp} path
 * @param  {!Array}  keys
 * @return {!RegExp}
 */
function regexpToRegexp (path, keys) {
  // Use a negative lookahead to match only capturing groups.
  var groups = path.source.match(/\((?!\?)/g);

  if (groups) {
    for (var i = 0; i < groups.length; i++) {
      keys.push({
        name: i,
        prefix: null,
        delimiter: null,
        optional: false,
        repeat: false,
        partial: false,
        asterisk: false,
        pattern: null
      });
    }
  }

  return attachKeys(path, keys)
}

/**
 * Transform an array into a regexp.
 *
 * @param  {!Array}  path
 * @param  {Array}   keys
 * @param  {!Object} options
 * @return {!RegExp}
 */
function arrayToRegexp (path, keys, options) {
  var parts = [];

  for (var i = 0; i < path.length; i++) {
    parts.push(pathToRegexp(path[i], keys, options).source);
  }

  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));

  return attachKeys(regexp, keys)
}

/**
 * Create a path regexp from string input.
 *
 * @param  {string}  path
 * @param  {!Array}  keys
 * @param  {!Object} options
 * @return {!RegExp}
 */
function stringToRegexp (path, keys, options) {
  return tokensToRegExp(parse(path, options), keys, options)
}

/**
 * Expose a function for taking tokens and returning a RegExp.
 *
 * @param  {!Array}          tokens
 * @param  {(Array|Object)=} keys
 * @param  {Object=}         options
 * @return {!RegExp}
 */
function tokensToRegExp (tokens, keys, options) {
  if (!isarray(keys)) {
    options = /** @type {!Object} */ (keys || options);
    keys = [];
  }

  options = options || {};

  var strict = options.strict;
  var end = options.end !== false;
  var route = '';

  // Iterate over the tokens and create our regexp string.
  for (var i = 0; i < tokens.length; i++) {
    var token = tokens[i];

    if (typeof token === 'string') {
      route += escapeString(token);
    } else {
      var prefix = escapeString(token.prefix);
      var capture = '(?:' + token.pattern + ')';

      keys.push(token);

      if (token.repeat) {
        capture += '(?:' + prefix + capture + ')*';
      }

      if (token.optional) {
        if (!token.partial) {
          capture = '(?:' + prefix + '(' + capture + '))?';
        } else {
          capture = prefix + '(' + capture + ')?';
        }
      } else {
        capture = prefix + '(' + capture + ')';
      }

      route += capture;
    }
  }

  var delimiter = escapeString(options.delimiter || '/');
  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter;

  // In non-strict mode we allow a slash at the end of match. If the path to
  // match already ends with a slash, we remove it for consistency. The slash
  // is valid at the end of a path match, not in the middle. This is important
  // in non-ending mode, where "/test/" shouldn't match "/test//route".
  if (!strict) {
    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?';
  }

  if (end) {
    route += '$';
  } else {
    // In non-ending mode, we need the capturing groups to match as much as
    // possible by using a positive lookahead to the end or next path segment.
    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)';
  }

  return attachKeys(new RegExp('^' + route, flags(options)), keys)
}

/**
 * Normalize the given path string, returning a regular expression.
 *
 * An empty array can be passed in for the keys, which will hold the
 * placeholder key descriptions. For example, using `/user/:id`, `keys` will
 * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.
 *
 * @param  {(string|RegExp|Array)} path
 * @param  {(Array|Object)=}       keys
 * @param  {Object=}               options
 * @return {!RegExp}
 */
function pathToRegexp (path, keys, options) {
  if (!isarray(keys)) {
    options = /** @type {!Object} */ (keys || options);
    keys = [];
  }

  options = options || {};

  if (path instanceof RegExp) {
    return regexpToRegexp(path, /** @type {!Array} */ (keys))
  }

  if (isarray(path)) {
    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)
  }

  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)
}

index.parse = parse_1;
index.compile = compile_1;
index.tokensToFunction = tokensToFunction_1;
index.tokensToRegExp = tokensToRegExp_1;

/*  */

var regexpCompileCache = Object.create(null);

function fillParams (
  path,
  params,
  routeMsg
) {
  try {
    var filler =
      regexpCompileCache[path] ||
      (regexpCompileCache[path] = index.compile(path));
    return filler(params || {}, { pretty: true })
  } catch (e) {
    if (false) {
      warn(false, ("missing param for " + routeMsg + ": " + (e.message)));
    }
    return ''
  }
}

/*  */

function createRouteMap (
  routes,
  oldPathList,
  oldPathMap,
  oldNameMap
) {
  // the path list is used to control path matching priority
  var pathList = oldPathList || [];
  var pathMap = oldPathMap || Object.create(null);
  var nameMap = oldNameMap || Object.create(null);

  routes.forEach(function (route) {
    addRouteRecord(pathList, pathMap, nameMap, route);
  });

  // ensure wildcard routes are always at the end
  for (var i = 0, l = pathList.length; i < l; i++) {
    if (pathList[i] === '*') {
      pathList.push(pathList.splice(i, 1)[0]);
      l--;
      i--;
    }
  }

  return {
    pathList: pathList,
    pathMap: pathMap,
    nameMap: nameMap
  }
}

function addRouteRecord (
  pathList,
  pathMap,
  nameMap,
  route,
  parent,
  matchAs
) {
  var path = route.path;
  var name = route.name;
  if (false) {
    assert(path != null, "\"path\" is required in a route configuration.");
    assert(
      typeof route.component !== 'string',
      "route config \"component\" for path: " + (String(path || name)) + " cannot be a " +
      "string id. Use an actual component instead."
    );
  }

  var normalizedPath = normalizePath(path, parent);
  var record = {
    path: normalizedPath,
    regex: compileRouteRegex(normalizedPath),
    components: route.components || { default: route.component },
    instances: {},
    name: name,
    parent: parent,
    matchAs: matchAs,
    redirect: route.redirect,
    beforeEnter: route.beforeEnter,
    meta: route.meta || {},
    props: route.props == null
      ? {}
      : route.components
        ? route.props
        : { default: route.props }
  };

  if (route.children) {
    // Warn if route is named and has a default child route.
    // If users navigate to this route by name, the default child will
    // not be rendered (GH Issue #629)
    if (false) {
      if (route.name && route.children.some(function (child) { return /^\/?$/.test(child.path); })) {
        warn(
          false,
          "Named Route '" + (route.name) + "' has a default child route. " +
          "When navigating to this named route (:to=\"{name: '" + (route.name) + "'\"), " +
          "the default child route will not be rendered. Remove the name from " +
          "this route and use the name of the default child route for named " +
          "links instead."
        );
      }
    }
    route.children.forEach(function (child) {
      var childMatchAs = matchAs
        ? cleanPath((matchAs + "/" + (child.path)))
        : undefined;
      addRouteRecord(pathList, pathMap, nameMap, child, record, childMatchAs);
    });
  }

  if (route.alias !== undefined) {
    if (Array.isArray(route.alias)) {
      route.alias.forEach(function (alias) {
        var aliasRoute = {
          path: alias,
          children: route.children
        };
        addRouteRecord(pathList, pathMap, nameMap, aliasRoute, parent, record.path);
      });
    } else {
      var aliasRoute = {
        path: route.alias,
        children: route.children
      };
      addRouteRecord(pathList, pathMap, nameMap, aliasRoute, parent, record.path);
    }
  }

  if (!pathMap[record.path]) {
    pathList.push(record.path);
    pathMap[record.path] = record;
  }

  if (name) {
    if (!nameMap[name]) {
      nameMap[name] = record;
    } else if (false) {
      warn(
        false,
        "Duplicate named routes definition: " +
        "{ name: \"" + name + "\", path: \"" + (record.path) + "\" }"
      );
    }
  }
}

function compileRouteRegex (path) {
  var regex = index(path);
  if (false) {
    var keys = {};
    regex.keys.forEach(function (key) {
      warn(!keys[key.name], ("Duplicate param keys in route with path: \"" + path + "\""));
      keys[key.name] = true;
    });
  }
  return regex
}

function normalizePath (path, parent) {
  path = path.replace(/\/$/, '');
  if (path[0] === '/') { return path }
  if (parent == null) { return path }
  return cleanPath(((parent.path) + "/" + path))
}

/*  */


function normalizeLocation (
  raw,
  current,
  append,
  router
) {
  var next = typeof raw === 'string' ? { path: raw } : raw;
  // named target
  if (next.name || next._normalized) {
    return next
  }

  // relative params
  if (!next.path && next.params && current) {
    next = assign({}, next);
    next._normalized = true;
    var params = assign(assign({}, current.params), next.params);
    if (current.name) {
      next.name = current.name;
      next.params = params;
    } else if (current.matched) {
      var rawPath = current.matched[current.matched.length - 1].path;
      next.path = fillParams(rawPath, params, ("path " + (current.path)));
    } else if (false) {
      warn(false, "relative params navigation requires a current route.");
    }
    return next
  }

  var parsedPath = parsePath(next.path || '');
  var basePath = (current && current.path) || '/';
  var path = parsedPath.path
    ? resolvePath(parsedPath.path, basePath, append || next.append)
    : basePath;

  var query = resolveQuery(
    parsedPath.query,
    next.query,
    router && router.options.parseQuery
  );

  var hash = next.hash || parsedPath.hash;
  if (hash && hash.charAt(0) !== '#') {
    hash = "#" + hash;
  }

  return {
    _normalized: true,
    path: path,
    query: query,
    hash: hash
  }
}

function assign (a, b) {
  for (var key in b) {
    a[key] = b[key];
  }
  return a
}

/*  */


function createMatcher (
  routes,
  router
) {
  var ref = createRouteMap(routes);
  var pathList = ref.pathList;
  var pathMap = ref.pathMap;
  var nameMap = ref.nameMap;

  function addRoutes (routes) {
    createRouteMap(routes, pathList, pathMap, nameMap);
  }

  function match (
    raw,
    currentRoute,
    redirectedFrom
  ) {
    var location = normalizeLocation(raw, currentRoute, false, router);
    var name = location.name;

    if (name) {
      var record = nameMap[name];
      if (false) {
        warn(record, ("Route with name '" + name + "' does not exist"));
      }
      var paramNames = record.regex.keys
        .filter(function (key) { return !key.optional; })
        .map(function (key) { return key.name; });

      if (typeof location.params !== 'object') {
        location.params = {};
      }

      if (currentRoute && typeof currentRoute.params === 'object') {
        for (var key in currentRoute.params) {
          if (!(key in location.params) && paramNames.indexOf(key) > -1) {
            location.params[key] = currentRoute.params[key];
          }
        }
      }

      if (record) {
        location.path = fillParams(record.path, location.params, ("named route \"" + name + "\""));
        return _createRoute(record, location, redirectedFrom)
      }
    } else if (location.path) {
      location.params = {};
      for (var i = 0; i < pathList.length; i++) {
        var path = pathList[i];
        var record$1 = pathMap[path];
        if (matchRoute(record$1.regex, location.path, location.params)) {
          return _createRoute(record$1, location, redirectedFrom)
        }
      }
    }
    // no match
    return _createRoute(null, location)
  }

  function redirect (
    record,
    location
  ) {
    var originalRedirect = record.redirect;
    var redirect = typeof originalRedirect === 'function'
        ? originalRedirect(createRoute(record, location, null, router))
        : originalRedirect;

    if (typeof redirect === 'string') {
      redirect = { path: redirect };
    }

    if (!redirect || typeof redirect !== 'object') {
      if (false) {
        warn(
          false, ("invalid redirect option: " + (JSON.stringify(redirect)))
        );
      }
      return _createRoute(null, location)
    }

    var re = redirect;
    var name = re.name;
    var path = re.path;
    var query = location.query;
    var hash = location.hash;
    var params = location.params;
    query = re.hasOwnProperty('query') ? re.query : query;
    hash = re.hasOwnProperty('hash') ? re.hash : hash;
    params = re.hasOwnProperty('params') ? re.params : params;

    if (name) {
      // resolved named direct
      var targetRecord = nameMap[name];
      if (false) {
        assert(targetRecord, ("redirect failed: named route \"" + name + "\" not found."));
      }
      return match({
        _normalized: true,
        name: name,
        query: query,
        hash: hash,
        params: params
      }, undefined, location)
    } else if (path) {
      // 1. resolve relative redirect
      var rawPath = resolveRecordPath(path, record);
      // 2. resolve params
      var resolvedPath = fillParams(rawPath, params, ("redirect route with path \"" + rawPath + "\""));
      // 3. rematch with existing query and hash
      return match({
        _normalized: true,
        path: resolvedPath,
        query: query,
        hash: hash
      }, undefined, location)
    } else {
      if (false) {
        warn(false, ("invalid redirect option: " + (JSON.stringify(redirect))));
      }
      return _createRoute(null, location)
    }
  }

  function alias (
    record,
    location,
    matchAs
  ) {
    var aliasedPath = fillParams(matchAs, location.params, ("aliased route with path \"" + matchAs + "\""));
    var aliasedMatch = match({
      _normalized: true,
      path: aliasedPath
    });
    if (aliasedMatch) {
      var matched = aliasedMatch.matched;
      var aliasedRecord = matched[matched.length - 1];
      location.params = aliasedMatch.params;
      return _createRoute(aliasedRecord, location)
    }
    return _createRoute(null, location)
  }

  function _createRoute (
    record,
    location,
    redirectedFrom
  ) {
    if (record && record.redirect) {
      return redirect(record, redirectedFrom || location)
    }
    if (record && record.matchAs) {
      return alias(record, location, record.matchAs)
    }
    return createRoute(record, location, redirectedFrom, router)
  }

  return {
    match: match,
    addRoutes: addRoutes
  }
}

function matchRoute (
  regex,
  path,
  params
) {
  var m = path.match(regex);

  if (!m) {
    return false
  } else if (!params) {
    return true
  }

  for (var i = 1, len = m.length; i < len; ++i) {
    var key = regex.keys[i - 1];
    var val = typeof m[i] === 'string' ? decodeURIComponent(m[i]) : m[i];
    if (key) {
      params[key.name] = val;
    }
  }

  return true
}

function resolveRecordPath (path, record) {
  return resolvePath(path, record.parent ? record.parent.path : '/', true)
}

/*  */


var positionStore = Object.create(null);

function setupScroll () {
  window.addEventListener('popstate', function (e) {
    saveScrollPosition();
    if (e.state && e.state.key) {
      setStateKey(e.state.key);
    }
  });
}

function handleScroll (
  router,
  to,
  from,
  isPop
) {
  if (!router.app) {
    return
  }

  var behavior = router.options.scrollBehavior;
  if (!behavior) {
    return
  }

  if (false) {
    assert(typeof behavior === 'function', "scrollBehavior must be a function");
  }

  // wait until re-render finishes before scrolling
  router.app.$nextTick(function () {
    var position = getScrollPosition();
    var shouldScroll = behavior(to, from, isPop ? position : null);
    if (!shouldScroll) {
      return
    }
    var isObject = typeof shouldScroll === 'object';
    if (isObject && typeof shouldScroll.selector === 'string') {
      var el = document.querySelector(shouldScroll.selector);
      if (el) {
        position = getElementPosition(el);
      } else if (isValidPosition(shouldScroll)) {
        position = normalizePosition(shouldScroll);
      }
    } else if (isObject && isValidPosition(shouldScroll)) {
      position = normalizePosition(shouldScroll);
    }

    if (position) {
      window.scrollTo(position.x, position.y);
    }
  });
}

function saveScrollPosition () {
  var key = getStateKey();
  if (key) {
    positionStore[key] = {
      x: window.pageXOffset,
      y: window.pageYOffset
    };
  }
}

function getScrollPosition () {
  var key = getStateKey();
  if (key) {
    return positionStore[key]
  }
}

function getElementPosition (el) {
  var docEl = document.documentElement;
  var docRect = docEl.getBoundingClientRect();
  var elRect = el.getBoundingClientRect();
  return {
    x: elRect.left - docRect.left,
    y: elRect.top - docRect.top
  }
}

function isValidPosition (obj) {
  return isNumber(obj.x) || isNumber(obj.y)
}

function normalizePosition (obj) {
  return {
    x: isNumber(obj.x) ? obj.x : window.pageXOffset,
    y: isNumber(obj.y) ? obj.y : window.pageYOffset
  }
}

function isNumber (v) {
  return typeof v === 'number'
}

/*  */

var supportsPushState = inBrowser && (function () {
  var ua = window.navigator.userAgent;

  if (
    (ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) &&
    ua.indexOf('Mobile Safari') !== -1 &&
    ua.indexOf('Chrome') === -1 &&
    ua.indexOf('Windows Phone') === -1
  ) {
    return false
  }

  return window.history && 'pushState' in window.history
})();

// use User Timing api (if present) for more accurate key precision
var Time = inBrowser && window.performance && window.performance.now
  ? window.performance
  : Date;

var _key = genKey();

function genKey () {
  return Time.now().toFixed(3)
}

function getStateKey () {
  return _key
}

function setStateKey (key) {
  _key = key;
}

function pushState (url, replace) {
  saveScrollPosition();
  // try...catch the pushState call to get around Safari
  // DOM Exception 18 where it limits to 100 pushState calls
  var history = window.history;
  try {
    if (replace) {
      history.replaceState({ key: _key }, '', url);
    } else {
      _key = genKey();
      history.pushState({ key: _key }, '', url);
    }
  } catch (e) {
    window.location[replace ? 'replace' : 'assign'](url);
  }
}

function replaceState (url) {
  pushState(url, true);
}

/*  */

function runQueue (queue, fn, cb) {
  var step = function (index) {
    if (index >= queue.length) {
      cb();
    } else {
      if (queue[index]) {
        fn(queue[index], function () {
          step(index + 1);
        });
      } else {
        step(index + 1);
      }
    }
  };
  step(0);
}

/*  */

var History = function History (router, base) {
  this.router = router;
  this.base = normalizeBase(base);
  // start with a route object that stands for "nowhere"
  this.current = START;
  this.pending = null;
  this.ready = false;
  this.readyCbs = [];
  this.readyErrorCbs = [];
  this.errorCbs = [];
};

History.prototype.listen = function listen (cb) {
  this.cb = cb;
};

History.prototype.onReady = function onReady (cb, errorCb) {
  if (this.ready) {
    cb();
  } else {
    this.readyCbs.push(cb);
    if (errorCb) {
      this.readyErrorCbs.push(errorCb);
    }
  }
};

History.prototype.onError = function onError (errorCb) {
  this.errorCbs.push(errorCb);
};

History.prototype.transitionTo = function transitionTo (location, onComplete, onAbort) {
    var this$1 = this;

  var route = this.router.match(location, this.current);
  this.confirmTransition(route, function () {
    this$1.updateRoute(route);
    onComplete && onComplete(route);
    this$1.ensureURL();

    // fire ready cbs once
    if (!this$1.ready) {
      this$1.ready = true;
      this$1.readyCbs.forEach(function (cb) { cb(route); });
    }
  }, function (err) {
    if (onAbort) {
      onAbort(err);
    }
    if (err && !this$1.ready) {
      this$1.ready = true;
      this$1.readyErrorCbs.forEach(function (cb) { cb(err); });
    }
  });
};

History.prototype.confirmTransition = function confirmTransition (route, onComplete, onAbort) {
    var this$1 = this;

  var current = this.current;
  var abort = function (err) {
    if (isError(err)) {
      if (this$1.errorCbs.length) {
        this$1.errorCbs.forEach(function (cb) { cb(err); });
      } else {
        warn(false, 'uncaught error during route navigation:');
        console.error(err);
      }
    }
    onAbort && onAbort(err);
  };
  if (
    isSameRoute(route, current) &&
    // in the case the route map has been dynamically appended to
    route.matched.length === current.matched.length
  ) {
    this.ensureURL();
    return abort()
  }

  var ref = resolveQueue(this.current.matched, route.matched);
    var updated = ref.updated;
    var deactivated = ref.deactivated;
    var activated = ref.activated;

  var queue = [].concat(
    // in-component leave guards
    extractLeaveGuards(deactivated),
    // global before hooks
    this.router.beforeHooks,
    // in-component update hooks
    extractUpdateHooks(updated),
    // in-config enter guards
    activated.map(function (m) { return m.beforeEnter; }),
    // async components
    resolveAsyncComponents(activated)
  );

  this.pending = route;
  var iterator = function (hook, next) {
    if (this$1.pending !== route) {
      return abort()
    }
    try {
      hook(route, current, function (to) {
        if (to === false || isError(to)) {
          // next(false) -> abort navigation, ensure current URL
          this$1.ensureURL(true);
          abort(to);
        } else if (
          typeof to === 'string' ||
          (typeof to === 'object' && (
            typeof to.path === 'string' ||
            typeof to.name === 'string'
          ))
        ) {
          // next('/') or next({ path: '/' }) -> redirect
          abort();
          if (typeof to === 'object' && to.replace) {
            this$1.replace(to);
          } else {
            this$1.push(to);
          }
        } else {
          // confirm transition and pass on the value
          next(to);
        }
      });
    } catch (e) {
      abort(e);
    }
  };

  runQueue(queue, iterator, function () {
    var postEnterCbs = [];
    var isValid = function () { return this$1.current === route; };
    // wait until async components are resolved before
    // extracting in-component enter guards
    var enterGuards = extractEnterGuards(activated, postEnterCbs, isValid);
    var queue = enterGuards.concat(this$1.router.resolveHooks);
    runQueue(queue, iterator, function () {
      if (this$1.pending !== route) {
        return abort()
      }
      this$1.pending = null;
      onComplete(route);
      if (this$1.router.app) {
        this$1.router.app.$nextTick(function () {
          postEnterCbs.forEach(function (cb) { cb(); });
        });
      }
    });
  });
};

History.prototype.updateRoute = function updateRoute (route) {
  var prev = this.current;
  this.current = route;
  this.cb && this.cb(route);
  this.router.afterHooks.forEach(function (hook) {
    hook && hook(route, prev);
  });
};

function normalizeBase (base) {
  if (!base) {
    if (inBrowser) {
      // respect <base> tag
      var baseEl = document.querySelector('base');
      base = (baseEl && baseEl.getAttribute('href')) || '/';
    } else {
      base = '/';
    }
  }
  // make sure there's the starting slash
  if (base.charAt(0) !== '/') {
    base = '/' + base;
  }
  // remove trailing slash
  return base.replace(/\/$/, '')
}

function resolveQueue (
  current,
  next
) {
  var i;
  var max = Math.max(current.length, next.length);
  for (i = 0; i < max; i++) {
    if (current[i] !== next[i]) {
      break
    }
  }
  return {
    updated: next.slice(0, i),
    activated: next.slice(i),
    deactivated: current.slice(i)
  }
}

function extractGuards (
  records,
  name,
  bind,
  reverse
) {
  var guards = flatMapComponents(records, function (def, instance, match, key) {
    var guard = extractGuard(def, name);
    if (guard) {
      return Array.isArray(guard)
        ? guard.map(function (guard) { return bind(guard, instance, match, key); })
        : bind(guard, instance, match, key)
    }
  });
  return flatten(reverse ? guards.reverse() : guards)
}

function extractGuard (
  def,
  key
) {
  if (typeof def !== 'function') {
    // extend now so that global mixins are applied.
    def = _Vue.extend(def);
  }
  return def.options[key]
}

function extractLeaveGuards (deactivated) {
  return extractGuards(deactivated, 'beforeRouteLeave', bindGuard, true)
}

function extractUpdateHooks (updated) {
  return extractGuards(updated, 'beforeRouteUpdate', bindGuard)
}

function bindGuard (guard, instance) {
  if (instance) {
    return function boundRouteGuard () {
      return guard.apply(instance, arguments)
    }
  }
}

function extractEnterGuards (
  activated,
  cbs,
  isValid
) {
  return extractGuards(activated, 'beforeRouteEnter', function (guard, _, match, key) {
    return bindEnterGuard(guard, match, key, cbs, isValid)
  })
}

function bindEnterGuard (
  guard,
  match,
  key,
  cbs,
  isValid
) {
  return function routeEnterGuard (to, from, next) {
    return guard(to, from, function (cb) {
      next(cb);
      if (typeof cb === 'function') {
        cbs.push(function () {
          // #750
          // if a router-view is wrapped with an out-in transition,
          // the instance may not have been registered at this time.
          // we will need to poll for registration until current route
          // is no longer valid.
          poll(cb, match.instances, key, isValid);
        });
      }
    })
  }
}

function poll (
  cb, // somehow flow cannot infer this is a function
  instances,
  key,
  isValid
) {
  if (instances[key]) {
    cb(instances[key]);
  } else if (isValid()) {
    setTimeout(function () {
      poll(cb, instances, key, isValid);
    }, 16);
  }
}

function resolveAsyncComponents (matched) {
  return function (to, from, next) {
    var hasAsync = false;
    var pending = 0;
    var error = null;

    flatMapComponents(matched, function (def, _, match, key) {
      // if it's a function and doesn't have cid attached,
      // assume it's an async component resolve function.
      // we are not using Vue's default async resolving mechanism because
      // we want to halt the navigation until the incoming component has been
      // resolved.
      if (typeof def === 'function' && def.cid === undefined) {
        hasAsync = true;
        pending++;

        var resolve = once(function (resolvedDef) {
          // save resolved on async factory in case it's used elsewhere
          def.resolved = typeof resolvedDef === 'function'
            ? resolvedDef
            : _Vue.extend(resolvedDef);
          match.components[key] = resolvedDef;
          pending--;
          if (pending <= 0) {
            next();
          }
        });

        var reject = once(function (reason) {
          var msg = "Failed to resolve async component " + key + ": " + reason;
          "production" !== 'production' && warn(false, msg);
          if (!error) {
            error = isError(reason)
              ? reason
              : new Error(msg);
            next(error);
          }
        });

        var res;
        try {
          res = def(resolve, reject);
        } catch (e) {
          reject(e);
        }
        if (res) {
          if (typeof res.then === 'function') {
            res.then(resolve, reject);
          } else {
            // new syntax in Vue 2.3
            var comp = res.component;
            if (comp && typeof comp.then === 'function') {
              comp.then(resolve, reject);
            }
          }
        }
      }
    });

    if (!hasAsync) { next(); }
  }
}

function flatMapComponents (
  matched,
  fn
) {
  return flatten(matched.map(function (m) {
    return Object.keys(m.components).map(function (key) { return fn(
      m.components[key],
      m.instances[key],
      m, key
    ); })
  }))
}

function flatten (arr) {
  return Array.prototype.concat.apply([], arr)
}

// in Webpack 2, require.ensure now also returns a Promise
// so the resolve/reject functions may get called an extra time
// if the user uses an arrow function shorthand that happens to
// return that Promise.
function once (fn) {
  var called = false;
  return function () {
    if (called) { return }
    called = true;
    return fn.apply(this, arguments)
  }
}

function isError (err) {
  return Object.prototype.toString.call(err).indexOf('Error') > -1
}

/*  */


var HTML5History = (function (History$$1) {
  function HTML5History (router, base) {
    var this$1 = this;

    History$$1.call(this, router, base);

    var expectScroll = router.options.scrollBehavior;

    if (expectScroll) {
      setupScroll();
    }

    window.addEventListener('popstate', function (e) {
      this$1.transitionTo(getLocation(this$1.base), function (route) {
        if (expectScroll) {
          handleScroll(router, route, this$1.current, true);
        }
      });
    });
  }

  if ( History$$1 ) HTML5History.__proto__ = History$$1;
  HTML5History.prototype = Object.create( History$$1 && History$$1.prototype );
  HTML5History.prototype.constructor = HTML5History;

  HTML5History.prototype.go = function go (n) {
    window.history.go(n);
  };

  HTML5History.prototype.push = function push (location, onComplete, onAbort) {
    var this$1 = this;

    var ref = this;
    var fromRoute = ref.current;
    this.transitionTo(location, function (route) {
      pushState(cleanPath(this$1.base + route.fullPath));
      handleScroll(this$1.router, route, fromRoute, false);
      onComplete && onComplete(route);
    }, onAbort);
  };

  HTML5History.prototype.replace = function replace (location, onComplete, onAbort) {
    var this$1 = this;

    var ref = this;
    var fromRoute = ref.current;
    this.transitionTo(location, function (route) {
      replaceState(cleanPath(this$1.base + route.fullPath));
      handleScroll(this$1.router, route, fromRoute, false);
      onComplete && onComplete(route);
    }, onAbort);
  };

  HTML5History.prototype.ensureURL = function ensureURL (push) {
    if (getLocation(this.base) !== this.current.fullPath) {
      var current = cleanPath(this.base + this.current.fullPath);
      push ? pushState(current) : replaceState(current);
    }
  };

  HTML5History.prototype.getCurrentLocation = function getCurrentLocation () {
    return getLocation(this.base)
  };

  return HTML5History;
}(History));

function getLocation (base) {
  var path = window.location.pathname;
  if (base && path.indexOf(base) === 0) {
    path = path.slice(base.length);
  }
  return (path || '/') + window.location.search + window.location.hash
}

/*  */


var HashHistory = (function (History$$1) {
  function HashHistory (router, base, fallback) {
    History$$1.call(this, router, base);
    // check history fallback deeplinking
    if (fallback && checkFallback(this.base)) {
      return
    }
    ensureSlash();
  }

  if ( History$$1 ) HashHistory.__proto__ = History$$1;
  HashHistory.prototype = Object.create( History$$1 && History$$1.prototype );
  HashHistory.prototype.constructor = HashHistory;

  // this is delayed until the app mounts
  // to avoid the hashchange listener being fired too early
  HashHistory.prototype.setupListeners = function setupListeners () {
    var this$1 = this;

    window.addEventListener('hashchange', function () {
      if (!ensureSlash()) {
        return
      }
      this$1.transitionTo(getHash(), function (route) {
        replaceHash(route.fullPath);
      });
    });
  };

  HashHistory.prototype.push = function push (location, onComplete, onAbort) {
    this.transitionTo(location, function (route) {
      pushHash(route.fullPath);
      onComplete && onComplete(route);
    }, onAbort);
  };

  HashHistory.prototype.replace = function replace (location, onComplete, onAbort) {
    this.transitionTo(location, function (route) {
      replaceHash(route.fullPath);
      onComplete && onComplete(route);
    }, onAbort);
  };

  HashHistory.prototype.go = function go (n) {
    window.history.go(n);
  };

  HashHistory.prototype.ensureURL = function ensureURL (push) {
    var current = this.current.fullPath;
    if (getHash() !== current) {
      push ? pushHash(current) : replaceHash(current);
    }
  };

  HashHistory.prototype.getCurrentLocation = function getCurrentLocation () {
    return getHash()
  };

  return HashHistory;
}(History));

function checkFallback (base) {
  var location = getLocation(base);
  if (!/^\/#/.test(location)) {
    window.location.replace(
      cleanPath(base + '/#' + location)
    );
    return true
  }
}

function ensureSlash () {
  var path = getHash();
  if (path.charAt(0) === '/') {
    return true
  }
  replaceHash('/' + path);
  return false
}

function getHash () {
  // We can't use window.location.hash here because it's not
  // consistent across browsers - Firefox will pre-decode it!
  var href = window.location.href;
  var index = href.indexOf('#');
  return index === -1 ? '' : href.slice(index + 1)
}

function pushHash (path) {
  window.location.hash = path;
}

function replaceHash (path) {
  var i = window.location.href.indexOf('#');
  window.location.replace(
    window.location.href.slice(0, i >= 0 ? i : 0) + '#' + path
  );
}

/*  */


var AbstractHistory = (function (History$$1) {
  function AbstractHistory (router, base) {
    History$$1.call(this, router, base);
    this.stack = [];
    this.index = -1;
  }

  if ( History$$1 ) AbstractHistory.__proto__ = History$$1;
  AbstractHistory.prototype = Object.create( History$$1 && History$$1.prototype );
  AbstractHistory.prototype.constructor = AbstractHistory;

  AbstractHistory.prototype.push = function push (location, onComplete, onAbort) {
    var this$1 = this;

    this.transitionTo(location, function (route) {
      this$1.stack = this$1.stack.slice(0, this$1.index + 1).concat(route);
      this$1.index++;
      onComplete && onComplete(route);
    }, onAbort);
  };

  AbstractHistory.prototype.replace = function replace (location, onComplete, onAbort) {
    var this$1 = this;

    this.transitionTo(location, function (route) {
      this$1.stack = this$1.stack.slice(0, this$1.index).concat(route);
      onComplete && onComplete(route);
    }, onAbort);
  };

  AbstractHistory.prototype.go = function go (n) {
    var this$1 = this;

    var targetIndex = this.index + n;
    if (targetIndex < 0 || targetIndex >= this.stack.length) {
      return
    }
    var route = this.stack[targetIndex];
    this.confirmTransition(route, function () {
      this$1.index = targetIndex;
      this$1.updateRoute(route);
    });
  };

  AbstractHistory.prototype.getCurrentLocation = function getCurrentLocation () {
    var current = this.stack[this.stack.length - 1];
    return current ? current.fullPath : '/'
  };

  AbstractHistory.prototype.ensureURL = function ensureURL () {
    // noop
  };

  return AbstractHistory;
}(History));

/*  */

var VueRouter = function VueRouter (options) {
  if ( options === void 0 ) options = {};

  this.app = null;
  this.apps = [];
  this.options = options;
  this.beforeHooks = [];
  this.resolveHooks = [];
  this.afterHooks = [];
  this.matcher = createMatcher(options.routes || [], this);

  var mode = options.mode || 'hash';
  this.fallback = mode === 'history' && !supportsPushState;
  if (this.fallback) {
    mode = 'hash';
  }
  if (!inBrowser) {
    mode = 'abstract';
  }
  this.mode = mode;

  switch (mode) {
    case 'history':
      this.history = new HTML5History(this, options.base);
      break
    case 'hash':
      this.history = new HashHistory(this, options.base, this.fallback);
      break
    case 'abstract':
      this.history = new AbstractHistory(this, options.base);
      break
    default:
      if (false) {
        assert(false, ("invalid mode: " + mode));
      }
  }
};

var prototypeAccessors = { currentRoute: {} };

VueRouter.prototype.match = function match (
  raw,
  current,
  redirectedFrom
) {
  return this.matcher.match(raw, current, redirectedFrom)
};

prototypeAccessors.currentRoute.get = function () {
  return this.history && this.history.current
};

VueRouter.prototype.init = function init (app /* Vue component instance */) {
    var this$1 = this;

  "production" !== 'production' && assert(
    install.installed,
    "not installed. Make sure to call `Vue.use(VueRouter)` " +
    "before creating root instance."
  );

  this.apps.push(app);

  // main app already initialized.
  if (this.app) {
    return
  }

  this.app = app;

  var history = this.history;

  if (history instanceof HTML5History) {
    history.transitionTo(history.getCurrentLocation());
  } else if (history instanceof HashHistory) {
    var setupHashListener = function () {
      history.setupListeners();
    };
    history.transitionTo(
      history.getCurrentLocation(),
      setupHashListener,
      setupHashListener
    );
  }

  history.listen(function (route) {
    this$1.apps.forEach(function (app) {
      app._route = route;
    });
  });
};

VueRouter.prototype.beforeEach = function beforeEach (fn) {
  return registerHook(this.beforeHooks, fn)
};

VueRouter.prototype.beforeResolve = function beforeResolve (fn) {
  return registerHook(this.resolveHooks, fn)
};

VueRouter.prototype.afterEach = function afterEach (fn) {
  return registerHook(this.afterHooks, fn)
};

VueRouter.prototype.onReady = function onReady (cb, errorCb) {
  this.history.onReady(cb, errorCb);
};

VueRouter.prototype.onError = function onError (errorCb) {
  this.history.onError(errorCb);
};

VueRouter.prototype.push = function push (location, onComplete, onAbort) {
  this.history.push(location, onComplete, onAbort);
};

VueRouter.prototype.replace = function replace (location, onComplete, onAbort) {
  this.history.replace(location, onComplete, onAbort);
};

VueRouter.prototype.go = function go (n) {
  this.history.go(n);
};

VueRouter.prototype.back = function back () {
  this.go(-1);
};

VueRouter.prototype.forward = function forward () {
  this.go(1);
};

VueRouter.prototype.getMatchedComponents = function getMatchedComponents (to) {
  var route = to
    ? this.resolve(to).route
    : this.currentRoute;
  if (!route) {
    return []
  }
  return [].concat.apply([], route.matched.map(function (m) {
    return Object.keys(m.components).map(function (key) {
      return m.components[key]
    })
  }))
};

VueRouter.prototype.resolve = function resolve (
  to,
  current,
  append
) {
  var location = normalizeLocation(
    to,
    current || this.history.current,
    append,
    this
  );
  var route = this.match(location, current);
  var fullPath = route.redirectedFrom || route.fullPath;
  var base = this.history.base;
  var href = createHref(base, fullPath, this.mode);
  return {
    location: location,
    route: route,
    href: href,
    // for backwards compat
    normalizedTo: location,
    resolved: route
  }
};

VueRouter.prototype.addRoutes = function addRoutes (routes) {
  this.matcher.addRoutes(routes);
  if (this.history.current !== START) {
    this.history.transitionTo(this.history.getCurrentLocation());
  }
};

Object.defineProperties( VueRouter.prototype, prototypeAccessors );

function registerHook (list, fn) {
  list.push(fn);
  return function () {
    var i = list.indexOf(fn);
    if (i > -1) { list.splice(i, 1); }
  }
}

function createHref (base, fullPath, mode) {
  var path = mode === 'hash' ? '#' + fullPath : fullPath;
  return base ? cleanPath(base + '/' + path) : path
}

VueRouter.install = install;
VueRouter.version = '2.5.2';

if (inBrowser && window.Vue) {
  window.Vue.use(VueRouter);
}

/* harmony default export */ __webpack_exports__["a"] = (VueRouter);


/***/ }),
/* 20 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Headers_vue__ = __webpack_require__(69);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Headers_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__Headers_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__SideLeft_vue__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__SideLeft_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__SideLeft_vue__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//





/* harmony default export */ __webpack_exports__["default"] = ({
  name: 'app',
  data() {
    return {
      msg: 'Welcome to My Vue.js App'
    };
  },
  methods: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_vuex__["b" /* mapActions */])(["increment"]),
  components: {
    Headers: __WEBPACK_IMPORTED_MODULE_1__Headers_vue___default.a,
    SideLeft: __WEBPACK_IMPORTED_MODULE_2__SideLeft_vue___default.a
  },
  computed: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_vuex__["c" /* mapGetters */])(['count', 'inputvalue'])
});

/***/ }),
/* 21 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Js_vueGetData_js__ = __webpack_require__(0);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//


/* harmony default export */ __webpack_exports__["default"] = ({
			name: 'Header',
			data() {
						return {
									msg: 'header',
									username: ""
						};
			},
			created() {
						this.username = __WEBPACK_IMPORTED_MODULE_0__Js_vueGetData_js__["a" /* default */].username();
						//     vueGetData.getData("loginuser",{"username":this.username},function(jsondata){
						//      if(jsondata.body.error_code === 22009){
						//     		vueGetData.creatTips("没有权限 请连续管理员");
						//     		return false;
						// // document.getElementsByClassName("dialog")[0].style.display = "block";
						//     	}	
						//     }.bind(this),function(){

						//     }.bind(this));
			}
});

/***/ }),
/* 22 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__ = __webpack_require__(0);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//




/* harmony default export */ __webpack_exports__["default"] = ({
	name: 'SideLeft',
	data() {
		return {
			treeSearch: '',
			topname: '产品线列表',
			isShowTree: true,
			product_id: -1
		};
	},
	methods: {
		getProductId: function (event) {
			let ele = event.currentTarget;
			let id = ele.getAttribute("data-productid");
			let lis = document.getElementById("treelist").getElementsByTagName("li");
			for (var i = 0; i < lis.length; i++) {
				lis[i].setAttribute("class", "");
			}
			if (id == -1) {
				let flag = this.isShowTree;
				this.isShowTree = !flag;
				this.product_id = -1;
			} else {
				this.product_id = id;
				ele.setAttribute("class", "cur");
			}

			this.$store.dispatch('pushProductId', { "id": this.product_id });
			let href = location.href;
			if (href.indexOf("alarm") > -1) {
				this.alarmquerydata["start"] = 0;
				this.alarmquerydata["product_line"] = this.product_id;
				this.$store.dispatch('getAlarmtableList', this.alarmquerydata);
			} else if (href.indexOf("runlog") > -1) {
				this.runlogquerydata["start"] = 0;
				this.runlogquerydata["product_line"] = this.product_id;
				this.$store.dispatch('getRunlogtableList', this.runlogquerydata);
			} else {
				this.managequerydata["start"] = 0;
				this.managequerydata["product_line"] = this.product_id;
				this.$store.dispatch('getManagetableList', this.managequerydata);
			}
		},
		getH: function () {
			document.getElementById("sideLeft").style.height = __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].getContHeight(68) + "px";
		}
	},
	computed: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_vuex__["c" /* mapGetters */])({
		productId: "productId",
		lineslist: "lineslist",
		managequerydata: "managequerydata",
		alarmquerydata: "alarmquerydata",
		runlogquerydata: "runlogquerydata"
	}),
	mounted() {
		// this.getH();
	},
	created() {
		this.$store.dispatch('getLines', { "type": 4, "username": __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].username });
	}
});

/***/ }),
/* 23 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__(2);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//


/* harmony default export */ __webpack_exports__["default"] = ({
	name: "TurnPage",
	data() {
		return {
			current: 1,
			showItem: 15,
			// allpage:13,
			pages: []
		};
	},
	props: ["allpage", "tableTotal", "type"],
	created: function () {
		// this.getpages();
	},
	mounted: function () {
		this.getpages();
	},
	computed: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_vuex__["c" /* mapGetters */])({
		productId: "productId",
		managequerydata: "managequerydata",
		alarmquerydata: "alarmquerydata",
		runlogquerydata: "runlogquerydata"
	}),
	watch: {
		tableTotal: function () {
			this.getpages();
		},
		productId: function () {
			this.current = 1; //切换产品线 翻页跳到第一页
		}
	},
	methods: {
		getpages: function () {
			var pag = [];
			if (this.current < this.showItem) {
				//如果当前的激活的项 小于要显示的条数
				//总页数和要显示的条数那个大就显示多少条
				var i = Math.min(this.showItem, this.allpage);
				while (i) {
					pag.unshift(i--);
				}
			} else {
				//当前页数大于显示页数了
				var middle = this.current - Math.floor(this.showItem / 2),
				    //从哪里开始
				i = this.showItem;
				if (middle > this.allpage - this.showItem) {
					middle = this.allpage - this.showItem + 1;
				}
				while (i--) {
					pag.push(middle++);
				}
			}
			this.pages = pag;
			return pag;
		},
		goto: function (index) {
			if (index == this.current) return;
			this.current = index;
			this.getpages();

			let types = this.type;
			let start = (index - 1) * 20;
			if (types == 0 || types == 1 || types == 2) {
				this.managequerydata["start"] = start;
				this.$store.dispatch('getManagequerydata', this.managequerydata);
				this.$store.dispatch('getManagetableList', this.managequerydata);
			} else if (types == "alarmtable") {
				this.alarmquerydata["start"] = start;
				this.$store.dispatch('getAlarmquerydata', this.alarmquerydata);
				this.$store.dispatch('getAlarmtableList', this.alarmquerydata);
			} else if (types == "runlogtable") {
				let json = {};
				for (let key in this.runlogquerydata) {
					if (key == "start") {
						json["start"] = start;
					} else {
						json[key] = this.runlogquerydata[key];
					}
				}
				json["start"] = start;
				this.$store.dispatch('getRunlogquerydata', json);
				this.$store.dispatch('getRunlogtableList', this.runlogquerydata);

				// let data = {"origin":this.runlogquerydata,"start":start}
				// this.$store.dispatch('getRunlogquerydata',data);
				// this.$store.dispatch('getRunlogtableList',this.runlogquerydata)
			}
		}

	}
});

/***/ }),
/* 24 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__ = __webpack_require__(0);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//




/* harmony default export */ __webpack_exports__["default"] = ({
	name: "Dialogdataport",
	data() {
		return {
			dataportformData: {
				dialogTitle: '新建数据接口监控',
				itemName: '',
				portTypeSelected: 0,
				levelRadio: "0",
				inputServerUrl: '',
				referer: "",
				timeOut: 20000,
				formatSelect: 0,
				post: "",
				userAgent: "",
				eleshow: "",
				ruleselects: [{ ruletype: "0", rulecont: "" }],
				ruledetail: "",
				isNeedAccount: 0,
				userSelected: "",
				callbackApi: "",
				callbackApiTimeout: 60,
				foreverFrequence: 1,
				isForever: 1,
				permissionSelected: 0,
				alarmSelected: 0,
				mailCount: 1,
				messageCount: 3,
				isAndPost: "0",
				andPostCon: "",
				startTime: "00:00",
				endTime: "23:59",
				//规则
				criterion: {},
				isShowSavebtn: true, //当查看时不需要保存按钮  true为要展示保存按钮
				rulePostJson: { "reg": [], "count": [], "notnull": [], "key_exist": [], "equal": [] }
			},
			portTypes: ["json"],
			formats: ["Json", "urlEncode"],
			ruletypes: ["reg-正则", "count-数量", "notnull-非空", "key_exist-键值存在判断", "equal-全等"],
			type: ["数据接口"],
			childForHttpTable: [],
			childHttptabledata: {},
			productline: "",
			copyDataportformData: {}

		};
	},
	props: ["editinitformdata"],
	computed: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_vuex__["c" /* mapGetters */])({
		productId: "productId",
		permissionList: "certificatemanagelist",
		permissioclassid: "permissioclassid",
		alarmList: "alertmanagelist",
		alertclassid: "alertclassid",
		userAccounts: "robotacountlist",
		robotacountid: "robotacountid",
		dialogfetchdata: "managequerydata"
	}),
	watch: {
		permissioclassid: function () {
			let id = this.permissioclassid;
			for (let i = 0; i < this.permissionList.length; i++) {
				let json = this.permissionList[i];
				if (id == json.class_id) {
					this.dataportformData.permissionSelected = i;
					return false;
				}
			}
		},
		alertclassid: function () {
			let id = this.alertclassid;
			for (let i = 0; i < this.alarmList.length; i++) {
				let json = this.alarmList[i];
				if (id == json.class_id) {
					this.dataportformData.alarmSelected = i;
					return false;
				}
			}
		},
		robotacountid: function () {
			this.dataportformData.userSelected = this.robotacountid;
		},
		editinitformdata: function () {
			console.log("editinitformdata");
			let json = this.editinitformdata;
			this.dataportformData.isShowSavebtn = json["edit"];
			this.dataportformData.itemName = json["item_name"];
			this.dataportformData.typeSelected = json["type"];
			this.dataportformData.levelRadio = json["level"];
			this.dataportformData.inputServerUrl = json["url"];
			this.dataportformData.productline = json["product_line"];
			this.dataportformData.callbackApi = json["callback_url"];
			this.dataportformData.mailCount = json["mail_count"];
			this.dataportformData.messageCount = json["message_count"];
			this.dataportformData.timeOut = json["time_out"];
			this.dataportformData.referer = json["referer"];
			this.dataportformData.userAgent = json["user_agent"];
			this.dataportformData.startTime = json["start_time"];
			this.dataportformData.endTime = json["end_time"];

			// this.dataportformData.permissionSelected = json["cer_mem"];
			// this.dataportformData.alarmSelected = json["alert_mem"];
			let cermemId = json["cer_mem"];
			for (let i = 0; i < this.permissionList.length; i++) {
				let json = this.permissionList[i];
				if (cermemId == json.class_id) {
					this.dataportformData.permissionSelected = i;
				}
			}
			let alertmemId = json["alert_mem"];
			for (let i = 0; i < this.alarmList.length; i++) {
				let json = this.alarmList[i];
				if (alertmemId == json.class_id) {
					this.dataportformData.alarmSelected = i;
				}
			}

			if (json["frequence"]) {
				this.dataportformData.foreverFrequence = json["frequence"];
				this.dataportformData.isForever = 1;
			} else {
				this.dataportformData.isForever = 0;
			}
			if (json["post_content"]) {
				this.dataportformData.isAndPost = "1";
				let str = json["post_content"];
				str.replace('\"', '"');
				console.log(str);

				str = str.substring(1, str.length - 1); //去掉前后的花括号

				let arr = str.split(':');
				if (arr[0].indexOf("urlEncode") > -1) {
					this.dataportformData.formatSelect = 1;

					let newstr = '"urlEncode":';
					let newarr = str.split(newstr);
					if (newarr.length > 1) {
						let content = newarr[1];
						content = content.substring(1, content.length - 1); //去掉前后的双引号
						this.dataportformData.andPostCon = content;
					} else {
						this.dataportformData.andPostCon = "";
					}
				}
				if (arr[0].indexOf("Json") > -1) {
					this.dataportformData.formatSelect = 0;

					let newstr = '"Json":';
					let newarr = str.split(newstr);
					if (newarr.length > 1) {
						let content = newarr[1];
						content = content.substring(1, content.length - 1); //去掉前后的双引号
						this.dataportformData.andPostCon = content;
					} else {
						this.dataportformData.andPostCon = "";
					}
				}
			} else {
				this.dataportformData.isAndPost = "0";
				this.dataportformData.andPostCon = "";
			}

			if (json["monitor_args"]) {
				if (json["monitor_args"] == 0) {
					this.dataportformData.isAddPlat = false;
				} else {
					this.dataportformData.isAddPlat = true;
				}
			} else {
				this.dataportformData.isAddPlat = false;
			}

			if (json["monitoruser"]) {
				if (json["monitoruser"]) {
					this.dataportformData.isNeedAccount = 1;
					this.dataportformData.userSelected = json["monitoruser"];
				} else {
					this.dataportformData.isNeedAccount = 0;
				}
			} else {
				this.dataportformData.isNeedAccount = "0";
			}

			if (json["criterion"]) {
				this.dataportformData.ruleselects.splice(0, this.dataportformData.ruleselects.length);
				let str = json["criterion"];
				str.replace('\"', '"');
				// let strtoJson = JSON.parse(str);
				let strtoJson = eval("(" + str + ")"); //当json里嵌套数组就抱歉 问题有待解决
				let val = "";
				let total = 0;
				let arr = [];

				for (var k in strtoJson) {
					if (strtoJson[k] && typeof strtoJson[k] == "object") {
						total += strtoJson[k].length;
						let arr = strtoJson[k];
						if (k == "reg") {
							for (let i = 0; i < arr.length; i++) {
								let newrulesdata = { ruletype: "0", "rulecont": arr[i].rule };
								this.dataportformData.ruleselects.push(newrulesdata);
							}
						} else if (k == "count") {
							for (let i = 0; i < arr.length; i++) {
								let newrulesdata = { ruletype: "1", "rulecont": arr[i].rule };
								this.dataportformData.ruleselects.push(newrulesdata);
							}
						} else if (k == "notnull") {
							for (let i = 0; i < arr.length; i++) {
								let newrulesdata = { ruletype: "2", "rulecont": arr[i].rule };
								this.dataportformData.ruleselects.push(newrulesdata);
							}
						} else if (k == "key_exist") {
							for (let i = 0; i < arr.length; i++) {
								let newrulesdata = { ruletype: "3", "rulecont": arr[i].rule };
								this.dataportformData.ruleselects.push(newrulesdata);
							}
						} else if (k == "equal") {
							for (let i = 0; i < arr.length; i++) {
								let newrulesdata = { ruletype: "4", "rulecont": arr[i].rule };
								this.dataportformData.ruleselects.push(newrulesdata);
							}
						}
					}
				}
				if (total == 0) {
					this.dataportformData.ruleselects.push({ ruletype: "0", rulecont: "" });
				}
			} else {}
		}
	},

	methods: {
		addTestManageRules: function () {
			this.dataportformData.ruleselects.push({ ruletype: "0", rulecont: "" });
		},
		deleteTestManageRules: function (index) {
			this.dataportformData.ruleselects.splice(index, 1);
		},
		testManageRules: function (index) {
			this.dataportformData.inputServerUrl = __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].trim(this.dataportformData.inputServerUrl);
			this.dataportformData.referer = __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].trim(this.dataportformData.referer);
			this.dataportformData.userAgent = __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].trim(this.dataportformData.userAgent);
			let data = {
				"oper": 6,
				"type": 1,
				"url": this.dataportformData.inputServerUrl,
				"referer": this.dataportformData.referer,
				"user_agent": this.dataportformData.userAgent,
				"time_out": this.dataportformData.timeOut
			};
			this.dataportformData.ruleselects[index].rulecont = __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].trim(this.dataportformData.ruleselects[index].rulecont);
			let rulecont = this.dataportformData.ruleselects[index].rulecont;
			let rule = this.dataportformData.ruleselects[index].ruletype;
			let json = {};

			if (rule == 0) {
				json = { "reg": [{ "rule": rulecont }] };
			} else if (rule == 1) {
				json = { "count": [{ "rule": rulecont }] };
			} else if (rule == 2) {
				json = { "notnull": [{ "rule": rulecont }] };
			} else if (rule == 3) {
				json = { "key_exist": [{ "rule": rulecont }] };
			} else if (rule == 4) {
				json = { "equal": [{ "rule": rulecont }] };
			}

			data["criterion"] = json;

			if (this.dataportformData.isAndPost == 1) {
				let str = "";
				if (!this.dataportformData.andPostCon || this.dataportformData.andPostCon == "undefined" || this.dataportformData.andPostCon == "") {
					str = "";
				} else {
					let content = this.dataportformData.andPostCon;
					str = content;
				}
				data["request_type"] = this.dataportformData.formatSelect;
				if (this.dataportformData.formatSelect == 0) {
					data["post_content"] = { "Json": str };
				} else if (this.dataportformData.formatSelect == 1) {
					data["post_content"] = { "urlEncode": str };
				}
			}

			if (this.dataportformData.isNeedAccount) {
				for (let key in this.userAccounts) {
					let json = this.userAccounts[key];
					if (this.dataportformData.userSelected == json.acount_name) {
						data["monitoruser"] = json.tel_no;
					}
				}
			}
			__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].postData("itemmodify", data, function (jsondata) {
				console.log(jsondata.body.error_code);
				if (jsondata.body.error_code === 22000) {
					let data = jsondata.body.data;
					if (data.check_status == 0) {
						__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("匹配成功");
					} else if (data.check_status == 1) {
						__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("规则错误或匹配失败，原因为：" + data.msg);
					}
				} else if (jsondata.body.error_code === 22001) {
					__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("系统错误");
				}
			}, function (err) {
				console.log(err);
			});
		},
		testRules: function () {
			this.dataportformData.inputServerUrl = __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].trim(this.dataportformData.inputServerUrl);
			this.dataportformData.referer = __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].trim(this.dataportformData.referer);
			this.dataportformData.userAgent = __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].trim(this.dataportformData.userAgent);

			let data = {
				"url": this.dataportformData.inputServerUrl,
				"referer": this.dataportformData.referer,
				"user_agent": this.dataportformData.userAgent,
				"time_out": this.dataportformData.timeOut
			};

			if (this.dataportformData.isAndPost == 1) {
				let str = "";
				this.dataportformData.andPostCon = __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].trim(this.dataportformData.andPostCon);
				if (!this.dataportformData.andPostCon || this.dataportformData.andPostCon == "undefined" || this.dataportformData.andPostCon == "") {
					str = "";
				} else {
					let content = this.dataportformData.andPostCon;
					str = content;
				}
				data["request_type"] = this.dataportformData.formatSelect;
				if (this.dataportformData.formatSelect == 0) {
					data["post_content"] = { "Json": str };
				} else if (this.dataportformData.formatSelect == 1) {
					data["post_content"] = { "urlEncode": str };
				}
			}

			if (this.dataportformData.isNeedAccount) {
				for (let key in this.userAccounts) {
					let json = this.userAccounts[key];
					if (this.dataportformData.userSelected == json.acount_name) {
						data["monitoruser"] = json.tel_no;
					}
				}
			}
			let _self = this;
			__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].postData("obtaindata", data, function (jsondata) {
				console.log(jsondata.body);
				_self.dataportformData.eleshow = JSON.stringify(jsondata.body);
			}, function (err) {
				console.log(err);
			});
		},
		hideDialog: function () {
			//重置初始化数据
			for (let key in this.copyDataportformData) {
				if (key == "ruleselects") {
					this.dataportformData[key] = [{ ruletype: "0", rulecont: "" }];
				} else {
					this.dataportformData[key] = this.copyDataportformData[key];
				}
			}
			document.getElementsByClassName("dialog")[0].style.display = "none";
		},
		addHttp: function () {
			this.dataportformData.itemName = __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].trim(this.dataportformData.itemName);
			this.dataportformData.inputServerUrl = __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].trim(this.dataportformData.inputServerUrl);
			this.dataportformData.referer = __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].trim(this.dataportformData.referer);
			this.dataportformData.userAgent = __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].trim(this.dataportformData.userAgent);
			this.dataportformData.callbackApi = __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].trim(this.dataportformData.callbackApi);
			this.dataportformData.startTime = __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].trim(this.dataportformData.startTime);
			this.dataportformData.endTime = __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].trim(this.dataportformData.endTime);

			if (!this.dataportformData.itemName) {
				__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("请填写项目名称");
				return false;
			}
			if (!this.dataportformData.inputServerUrl) {
				__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("请填写服务url");
				return false;
			}
			if (this.permissionList.length < 1) {
				__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("请先添加监控权限组");
				return false;
			}
			if (this.alarmList.length < 1) {
				__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("请先添加邮件报警组");
				return false;
			}

			let data = {};
			if (this.editinitformdata["oper"] == 5) {
				data["oper"] = 5;
				data["taskid"] = this.editinitformdata["taskid"];
			} else {
				data["oper"] = 1;
				data["taskid"] = "";
			}
			data["username"] = __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].username();
			data["product_line"] = this.productId;
			data["item_name"] = this.dataportformData.itemName;
			data["type"] = 1;
			data["level"] = this.dataportformData.levelRadio;
			data["url"] = this.dataportformData.inputServerUrl;
			data["referer"] = this.dataportformData.referer;
			data["user_agent"] = this.dataportformData.userAgent;
			data["time_out"] = this.dataportformData.timeOut;
			data["callback_url"] = this.dataportformData.callbackApi;
			data["mail_count"] = this.dataportformData.mailCount;
			data["message_count"] = this.dataportformData.messageCount;

			let permissionSelectedIndex = this.dataportformData.permissionSelected;
			data["cer_mem"] = this.permissionList[permissionSelectedIndex].class_id;
			let alarmSelectedIndex = this.dataportformData.alarmSelected;
			data["alert_mem"] = this.alarmList[alarmSelectedIndex].class_id;

			if (this.dataportformData.isNeedAccount) {
				for (let key in this.userAccounts) {
					let json = this.userAccounts[key];
					if (this.dataportformData.userSelected == json.acount_name) {
						data["monitoruser"] = json.tel_no;
					}
				}
			}

			if (this.dataportformData.isAndPost == 1) {
				let str = "";
				this.dataportformData.andPostCon = __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].trim(this.dataportformData.andPostCon);
				if (!this.dataportformData.andPostCon || this.dataportformData.andPostCon == "undefined" || this.dataportformData.andPostCon == "") {
					str = "";
				} else {
					let content = this.dataportformData.andPostCon;
					str = content;
				}

				if (str && !__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].isJSON(str)) {
					__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("post规则:请填写正确的json格式数据");
					return false;
				}

				data["request_type"] = this.dataportformData.formatSelect;
				if (this.dataportformData.formatSelect == 0) {
					data["post_content"] = { "Json": str };
				} else if (this.dataportformData.formatSelect == 1) {
					data["post_content"] = { "urlEncode": str };
				}
			}

			if (this.dataportformData.isForever == 1) {
				if (this.dataportformData.foreverFrequence >= 0) {
					data["eff_status"] = this.dataportformData.isForever;
					data["frequence"] = this.dataportformData.foreverFrequence;
				} else {
					__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("请输入监控频率");
				}
			}

			let json = { "reg": [], "count": [], "notnull": [], "key_exist": [], "equal": [] };
			let arr = this.dataportformData.ruleselects;
			for (let i = 0; i < arr.length; i++) {
				let rule = arr[i].ruletype;
				arr[i].rulecont = __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].trim(arr[i].rulecont);
				let newjson = { "rule": arr[i].rulecont };
				if (rule == 0) {
					json["reg"].push(newjson);
				} else if (rule == 1) {
					json["count"].push(newjson);
				} else if (rule == 2) {
					json["notnull"].push(newjson);
				} else if (rule == 3) {
					json["key_exist"].push(newjson);
				} else if (rule == 4) {
					json["equal"].push(newjson);
				}
			}

			var reg = /^([0-1]\d|2[0-3]):[0-5]\d$/;
			if (reg.test(this.dataportformData.startTime)) {
				data["start_time"] = this.dataportformData.startTime;
			} else {
				__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("您的有效监控开始时间输入错误，请重新输入");
				return false;
			}

			if (reg.test(this.dataportformData.endTime)) {
				data["end_time"] = this.dataportformData.endTime;
			} else {
				__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("您的有效监控结束时间输入错误，请重新输入");
				return false;
			}

			data["criterion"] = json;
			console.log(json);
			let _self = this;
			__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].postData("itemmodify", data, function (jsondata) {
				let error_code = jsondata.body.error_code;
				if (error_code === 22000) {
					_self.$store.dispatch('getManagetableList', _self.dialogfetchdata);
					_self.hideDialog();
				} else if (error_code === 22001) {
					__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("系统错误请联系管理员查看问题");
					_self.hideDialog();
				} else if (error_code === 22005) {
					console.log(error_code);
					__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips(jsondata.body.error_msg);
				} else if (error_code === 22008) {
					__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("操作非法");
					_self.hideDialog();
				} else if (error_code === 22009) {
					__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("没有权限，请联系管理员开通");
					_self.hideDialog();
				} else if (error_code === 22452) {
					__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("用户未登录");
					_self.hideDialog();
				}
			}, function (err) {
				console.log(err);
			});
		}
	},
	created: function () {
		//保存初始化数据
		for (let key in this.dataportformData) {
			this.copyDataportformData[key] = this.dataportformData[key];
		}
	}

});

/***/ }),
/* 25 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__ = __webpack_require__(0);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//




/* harmony default export */ __webpack_exports__["default"] = ({
	name: "DialogAddEles",
	data() {
		return {
			elesformData: {
				itemName: '',
				typeSelected: 2,
				levelRadio: "0",
				inputServerUrl: '',
				isAddPlat: false,
				isAndPost: "0",
				andPostCon: "",
				isNeedAccount: "0",
				userSelected: "",
				callbackApi: "",
				isForever: 1,
				foreverFrequence: 1,
				permissionSelected: 0,
				alarmSelected: 0,
				mailCount: 1,
				messageCount: 3,
				timeOut: 5000,
				startTime: "00:00",
				endTime: "23:59",
				//规则
				criterion: "",
				dialogTitle: '新建页面元素监控',
				referer: "",
				userAgent: "",
				verify: "",
				isShowSavebtn: true //当查看时不需要保存按钮  true为要展示保存按钮
			},
			longSelect: ["http可用性", "数据接口", "页面元素"],
			type: ["页面元素"],
			// childForHttpTable:[],
			childHttptabledata: {},
			productline: "",
			copyElesformData: {}

		};
	},
	props: ["httptableLists", "editinitelesformData"],
	computed: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_vuex__["c" /* mapGetters */])({
		productId: "productId",
		permissionList: "certificatemanagelist",
		permissioclassid: "permissioclassid",
		alarmList: "alertmanagelist",
		alertclassid: "alertclassid",
		userAccounts: "robotacountlist",
		robotacountid: "robotacountid",
		dialogfetchdata: "managequerydata"
	}),
	watch: {
		// permissioclassid: function() {
		// 	this.elesformData.permissionSelected = this.permissioclassid;
		// },
		// alertclassid: function() {
		// 	this.elesformData.alarmSelected = this.alertclassid;
		// },
		permissioclassid: function () {
			let id = this.permissioclassid;
			for (let i = 0; i < this.permissionList.length; i++) {
				let json = this.permissionList[i];
				if (id == json.class_id) {
					this.elesformData.permissionSelected = i;
					return false;
				}
			}
		},
		alertclassid: function () {
			let id = this.alertclassid;
			for (let i = 0; i < this.alarmList.length; i++) {
				let json = this.alarmList[i];
				if (id == json.class_id) {
					this.elesformData.alarmSelected = i;
					return false;
				}
			}
		},
		robotacountid: function () {
			this.elesformData.userSelected = this.robotacountid;
		},

		httptableLists: function () {
			console.log("表格更新");
		},
		httptabledata: function () {
			console.log(this.dialogfetchdata);
		},
		editinitelesformData: function () {
			let json = this.editinitelesformData;
			this.elesformData.isShowSavebtn = json["edit"];
			this.elesformData.itemName = json["item_name"];
			this.elesformData.typeSelected = json["type"];
			this.elesformData.levelRadio = json["level"];
			this.elesformData.inputServerUrl = json["url"];
			this.elesformData.productline = json["product_line"];
			this.elesformData.callbackApi = json["callback_url"];
			this.elesformData.mailCount = json["mail_count"];
			this.elesformData.messageCount = json["message_count"];
			this.elesformData.timeOut = json["time_out"];
			this.elesformData.criterion = json["criterion"];
			this.elesformData.referer = json["referer"];
			this.elesformData.userAgent = json["user_agent"];
			this.elesformData.startTime = json["start_time"];
			this.elesformData.endTime = json["end_time"];

			let cermemId = json["cer_mem"];
			for (let i = 0; i < this.permissionList.length; i++) {
				let json = this.permissionList[i];
				if (cermemId == json.class_id) {
					this.elesformData.permissionSelected = i;
				}
			}
			let alertmemId = json["alert_mem"];
			for (let i = 0; i < this.alarmList.length; i++) {
				let json = this.alarmList[i];
				if (alertmemId == json.class_id) {
					this.elesformData.alarmSelected = i;
				}
			}

			if (json["frequence"]) {
				this.elesformData.foreverFrequence = json["frequence"];
				this.elesformData.isForever = 1;
			} else {
				this.elesformData.isForever = 0;
			}

			if (json["monitor_args"]) {
				if (json["monitor_args"] == 0) {
					this.elesformData.isAddPlat = false;
				} else {
					this.elesformData.isAddPlat = true;
				}
			} else {
				this.elesformData.isAddPlat = false;
			}

			if (json["monitoruser"]) {
				this.elesformData.isNeedAccount = 1;
				this.elesformData.userSelected = json["monitoruser"];
			} else {
				this.elesformData.isNeedAccount = 0;
			}
		}
	},
	methods: {
		testRules: function () {
			this.elesformData.inputServerUrl = __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].trim(this.elesformData.inputServerUrl);
			this.elesformData.referer = __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].trim(this.elesformData.referer);
			this.elesformData.userAgent = __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].trim(this.elesformData.userAgent);
			this.elesformData.criterion = __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].trim(this.elesformData.criterion);

			let data = {
				"oper": 6,
				"type": 2,
				"url": this.elesformData.inputServerUrl,
				"monitoruser": "",
				"referer": this.elesformData.referer,
				"user_agent": this.elesformData.userAgent,
				// "criterion":this.elesformData.verify,
				"criterion": this.elesformData.criterion,
				"post_content": '',
				"time_out": this.elesformData.timeOut
			};
			if (this.elesformData.isNeedAccount) {
				for (let key in this.userAccounts) {
					let json = this.userAccounts[key];
					if (this.elesformData.userSelected == json.acount_name) {
						data["monitoruser"] = json.tel_no;
					}
				}
			} else {
				data["monitoruser"] = "";
			}

			console.log(data);
			__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].postData("itemmodify", data, function (jsondata) {
				console.log(jsondata.body.error_code);
				if (jsondata.body.error_code === 22000) {
					let data = jsondata.body.data;

					if (data.check_status == 0) {
						__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("匹配成功");
					} else if (data.check_status == 1) {
						__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("规则错误或匹配失败，原因为：" + data.msg);
					}
				} else if (jsondata.body.error_code === 22001) {
					__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("系统错误");
				}
			}, function (err) {
				console.log(err);
			});
		},
		hideDialog: function () {
			//重置初始化数据
			for (let key in this.copyElesformData) {
				this.elesformData[key] = this.copyElesformData[key];
			}
			document.getElementsByClassName("dialog")[0].style.display = "none";
		},
		addHttp: function () {
			this.elesformData.itemName = __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].trim(this.elesformData.itemName);
			this.elesformData.inputServerUrl = __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].trim(this.elesformData.inputServerUrl);
			this.elesformData.referer = __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].trim(this.elesformData.referer);
			this.elesformData.userAgent = __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].trim(this.elesformData.userAgent);
			this.elesformData.callbackApi = __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].trim(this.elesformData.callbackApi);
			this.elesformData.criterion = __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].trim(this.elesformData.criterion);
			this.elesformData.startTime = __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].trim(this.elesformData.startTime);
			this.elesformData.endTime = __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].trim(this.elesformData.endTime);

			if (!this.elesformData.itemName) {
				__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("请填写项目名称");
				return false;
			}
			if (!this.elesformData.inputServerUrl) {
				__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("请填写服务url");
				return false;
			}
			if (this.permissionList.length < 1) {
				__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("请先添加监控权限组");
				return false;
			}
			if (this.alarmList.length < 1) {
				__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("请先添加邮件报警组");
				return false;
			}

			let data = {};
			if (this.editinitelesformData["oper"] == 5) {
				data["oper"] = 5;
				data["taskid"] = this.editinitelesformData["taskid"];
			} else {
				data["oper"] = 1;
				data["taskid"] = "";
			}

			data["username"] = __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].username();
			data["product_line"] = this.productId;
			data["item_name"] = this.elesformData.itemName;
			data["type"] = 2;
			data["level"] = this.elesformData.levelRadio;
			data["url"] = this.elesformData.inputServerUrl;
			data["callback_url"] = this.elesformData.callbackApi;
			data["mail_count"] = this.elesformData.mailCount;
			data["message_count"] = this.elesformData.messageCount;
			data["time_out"] = this.elesformData.timeOut;
			data["criterion"] = this.elesformData.criterion;
			data["referer"] = this.elesformData.referer;
			data["user_agent"] = this.elesformData.userAgent;

			if (!this.elesformData.isAddPlat) {
				data["monitor_args"] = 0;
			} else {
				data["monitor_args"] = 1;
			}

			if (this.elesformData.isNeedAccount) {
				for (let key in this.userAccounts) {
					let json = this.userAccounts[key];
					if (this.elesformData.userSelected == json.acount_name) {
						data["monitoruser"] = json.tel_no;
					}
				}
			} else {
				data["monitoruser"] = "";
			}
			// for(let key in this.permissionList){
			// 	let json = this.permissionList[key];
			// 	if(this.elesformData.permissionSelected == json.class_name){
			// 		data["cer_mem"] = json.class_id;
			// 	}
			// }
			// for(let key in this.alarmList){
			// 	let json = this.alarmList[key];
			// 	if(this.elesformData.alarmSelected == json.class_name){
			// 		data["alert_mem"] = json.class_id;
			// 	}
			// }

			let permissionSelectedIndex = this.elesformData.permissionSelected;
			data["cer_mem"] = this.permissionList[permissionSelectedIndex].class_id;
			let alarmSelectedIndex = this.elesformData.alarmSelected;
			data["alert_mem"] = this.alarmList[alarmSelectedIndex].class_id;

			if (this.elesformData.isForever == 1) {
				if (this.elesformData.foreverFrequence >= 0) {
					data["eff_status"] = this.elesformData.isForever;
					data["frequence"] = this.elesformData.foreverFrequence;
				} else {
					__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("请输入监控频率");
				}
			}

			var reg = /^([0-1]\d|2[0-3]):[0-5]\d$/;
			if (reg.test(this.elesformData.startTime)) {
				data["start_time"] = this.elesformData.startTime;
			} else {
				__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("您的有效监控开始时间输入错误，请重新输入");
				return false;
			}

			if (reg.test(this.elesformData.endTime)) {
				data["end_time"] = this.elesformData.endTime;
			} else {
				__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("您的有效监控结束时间输入错误，请重新输入");
				return false;
			}

			let _self = this;
			__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].postData("itemmodify", data, function (jsondata) {
				let error_code = jsondata.body.error_code;
				console.log(error_code);
				if (error_code === 22000) {
					_self.$store.dispatch('getManagetableList', _self.dialogfetchdata);
					_self.hideDialog();
				} else if (error_code == 22001) {
					__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("系统错误请联系管理员查看问题");
					_self.hideDialog();
				} else if (error_code == 22005) {
					__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips(jsondata.body.error_msg);
				} else if (error_code == 22008) {
					__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("操作非法");
					_self.hideDialog();
				} else if (error_code == 22009) {
					__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("没有权限，请联系管理员开通");
					_self.hideDialog();
				} else if (error_code == 22452) {
					__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("用户未登录");
					_self.hideDialog();
				}
			}, function (err) {
				console.log(err);
			});
		}
	},
	created: function () {
		//保存初始化数据
		for (let key in this.elesformData) {
			this.copyElesformData[key] = this.elesformData[key];
		}
	},
	mounted: function () {
		//通信组件变量
		// this.childForHttpTable = this.httptableLists;
		// this.childHttptabledata = this.httptabledata;
	}

});

/***/ }),
/* 26 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__ = __webpack_require__(0);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//




/* harmony default export */ __webpack_exports__["default"] = ({
	name: "Dialog",
	data() {
		return {
			formData: {
				itemName: '',
				typeSelected: 0,
				levelRadio: "0",
				inputServerUrl: '',
				isAddPlat: false,
				isAndPost: "0",
				andPostCon: "",
				isNeedAccount: "0",
				userSelected: "",
				callbackApi: "",
				isForever: 1,
				foreverFrequence: 1,
				permissionSelected: 0,
				alarmSelected: 0,
				mailCount: 1,
				messageCount: 3,
				timeOut: 2000,
				eleshow: "",
				startTime: "00:00",
				endTime: "23:59",
				//规则
				criterion: ["200"],
				dialogTitle: '新建http可用性监控',
				referer: "",
				userAgent: "",
				formatSelect: 0,
				isShowSavebtn: true //当查看时不需要保存按钮  true为要展示保存按钮
			},
			longSelect: ["http可用性", "数据接口", "页面元素"],
			formats: ["Json", "urlEncode"],
			type: ["http可用性"],
			childForHttpTable: [],
			childHttptabledata: {},
			productline: "",
			copyformData: {}

		};
	},
	props: ["editinitformdata"],
	computed: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_vuex__["c" /* mapGetters */])({
		productId: "productId",
		permissionList: "certificatemanagelist",
		permissioclassid: "permissioclassid",
		alarmList: "alertmanagelist",
		alertclassid: "alertclassid",
		userAccounts: "robotacountlist",
		robotacountid: "robotacountid",
		dialogfetchdata: "managequerydata"
	}),
	watch: {
		problemgradeSelected: function () {
			if (typeof this.problemgradeSelected == "undefined") {
				this.problemgradeSelected = 0;
			}
		},
		permissioclassid: function () {
			let id = this.permissioclassid;
			for (let i = 0; i < this.permissionList.length; i++) {
				let json = this.permissionList[i];
				if (id == json.class_id) {
					this.formData.permissionSelected = i;
					return false;
				}
			}
		},
		alertclassid: function () {
			// this.formData.alarmSelected = this.alertclassid;
			let id = this.alertclassid;
			for (let i = 0; i < this.alarmList.length; i++) {
				let json = this.alarmList[i];
				if (id == json.class_id) {
					this.formData.alarmSelected = i;
					return false;
				}
			}
		},
		robotacountid: function () {
			this.formData.userSelected = this.robotacountid;
		},
		editinitformdata: function () {
			let json = this.editinitformdata;
			this.formData.isShowSavebtn = json["edit"];
			this.formData.itemName = json["item_name"];
			this.formData.typeSelected = json["type"];
			this.formData.levelRadio = json["level"];
			this.formData.inputServerUrl = json["url"];
			this.formData.productline = json["product_line"];
			this.formData.callbackApi = json["callback_url"];
			this.formData.mailCount = json["mail_count"];
			this.formData.messageCount = json["message_count"];
			this.formData.timeOut = json["time_out"];
			this.formData.referer = json["referer"];
			this.formData.userAgent = json["user_agent"];
			this.formData.startTime = json["start_time"];
			this.formData.endTime = json["end_time"];

			let cermemId = json["cer_mem"];
			for (let i = 0; i < this.permissionList.length; i++) {
				let json = this.permissionList[i];
				if (cermemId == json.class_id) {
					this.formData.permissionSelected = i;
				}
			}
			let alertmemId = json["alert_mem"];
			for (let i = 0; i < this.alarmList.length; i++) {
				let json = this.alarmList[i];
				if (alertmemId == json.class_id) {
					this.formData.alarmSelected = i;
				}
			}

			if (json["frequence"]) {
				this.formData.foreverFrequence = json["frequence"];
				this.formData.isForever = 1;
			} else {
				this.formData.isForever = 0;
			}

			let criterionstr = json["criterion"];
			criterionstr.replace('\"', '"');
			let strtoJson = JSON.parse(criterionstr);
			if (strtoJson["http_code"]) {
				this.formData.criterion = strtoJson["http_code"].split(",");
			}

			if (json["monitor_args"]) {
				if (json[key] == 0) {
					this.formData.isAddPlat = false;
				} else {
					this.formData.isAddPlat = true;
				}
			} else {
				this.formData.isAddPlat = false;
			}
			if (json["monitoruser"]) {
				this.formData.isNeedAccount = 1;
				this.formData.userSelected = json["monitoruser"];
			} else {
				this.formData.isNeedAccount = 0;
			}

			if (json["post_content"]) {
				this.formData.isAndPost = "1";
				let str = json["post_content"];
				str.replace('\"', '"');

				str = str.substring(1, str.length - 1); //去掉前后的花括号

				let arr = str.split(':');
				if (arr[0].indexOf("urlEncode") > -1) {
					this.formData.formatSelect = 1;

					let newstr = '"urlEncode":';
					let newarr = str.split(newstr);
					if (newarr.length > 1) {
						let content = newarr[1];
						content = content.substring(1, content.length - 1); //去掉前后的双引号
						this.formData.andPostCon = content;
					} else {
						this.formData.andPostCon = "";
					}
				}
				if (arr[0].indexOf("Json") > -1) {
					this.formData.formatSelect = 0;

					let newstr = '"Json":';
					let newarr = str.split(newstr);
					if (newarr.length > 1) {
						let content = newarr[1];
						content = content.substring(1, content.length - 1); //去掉前后的双引号
						this.formData.andPostCon = content;
					} else {
						this.formData.andPostCon = "";
					}
				}
			} else {
				this.formData.isAndPost = "0";
				this.formData.andPostCon = "";
			}
		}
	},
	methods: {
		testgetPageData: function () {
			this.formData.inputServerUrl = __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].trim(this.formData.inputServerUrl);
			this.formData.referer = __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].trim(this.formData.referer);
			this.formData.userAgent = __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].trim(this.formData.userAgent);
			let data = {
				"url": this.formData.inputServerUrl,
				"referer": this.formData.referer,
				"user_agent": this.formData.userAgent,
				"time_out": this.formData.timeOut
			};

			if (this.formData.isAndPost == 1) {
				let str = "";
				this.formData.andPostCon = __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].trim(this.formData.andPostCon);
				if (!this.formData.andPostCon || this.formData.andPostCon == "undefined" || this.formData.andPostCon == "") {
					str = "";
				} else {
					let content = this.formData.andPostCon;
					str = content;
				}
				data["request_type"] = this.formData.formatSelect;
				if (this.formData.formatSelect == 0) {
					data["post_content"] = { "Json": str };
				} else if (this.formData.formatSelect == 1) {
					data["post_content"] = { "urlEncode": str };
				}
			}

			if (this.formData.isNeedAccount) {
				for (let key in this.userAccounts) {
					let json = this.userAccounts[key];
					if (this.formData.userSelected == json.acount_name) {
						data["monitoruser"] = json.tel_no;
					}
				}
			}
			let _self = this;
			__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].postData("obtaindata", data, function (jsondata) {
				console.log(jsondata.body);
				_self.formData.eleshow = JSON.stringify(jsondata.body);
			}, function (err) {
				console.log(err);
			});
		},
		testRules: function () {
			this.formData.inputServerUrl = __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].trim(this.formData.inputServerUrl);
			this.formData.referer = __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].trim(this.formData.referer);
			this.formData.userAgent = __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].trim(this.formData.userAgent);
			let data = {
				"oper": 6,
				"type": 0,
				"url": this.formData.inputServerUrl,
				"monitoruser": "",
				"referer": this.formData.referer,
				"user_agent": this.formData.userAgent,
				// "criterion":{"http_code":this.formData.criterion},
				"post_content": '',
				"time_out": this.formData.timeOut
			};
			if (!this.formData.isAddPlat) {
				data["monitor_args"] = 0;
			} else {
				data["monitor_args"] = 1;
			}
			let str = "";
			for (let i in this.formData.criterion) {
				str += this.formData.criterion[i] + ",";
			}
			data["criterion"] = { "http_code": str.substring(0, str.length - 1) };
			console.log(data["criterion"]);

			if (this.formData.isNeedAccount) {
				for (let key in this.userAccounts) {
					let json = this.userAccounts[key];
					if (this.formData.userSelected == json.acount_name) {
						data["monitoruser"] = json.tel_no;
					}
				}
			} else {
				data["monitoruser"] = "";
			}

			if (this.formData.isAndPost == 1) {
				let str = "";
				this.formData.andPostCon = __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].trim(this.formData.andPostCon);
				if (!this.formData.andPostCon || this.formData.andPostCon == "undefined" || this.formData.andPostCon == "") {
					str = "";
				} else {
					let content = this.formData.andPostCon;
					str = content;
				}
				data["request_type"] = this.formData.formatSelect;
				if (this.formData.formatSelect == 0) {
					data["post_content"] = { "Json": str };
				} else if (this.formData.formatSelect == 1) {
					data["post_content"] = { "urlEncode": str };
				}
			}

			console.log(data);
			__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].postData("itemmodify", data, function (jsondata) {
				console.log(jsondata.body.error_code);
				if (jsondata.body.error_code === 22000) {
					let data = jsondata.body.data;
					if (data.check_status == 0) {
						__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("匹配成功");
					} else if (data.check_status == 1) {
						__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("规则错误或匹配失败，原因为：" + data.msg);
					}
				} else if (jsondata.body.error_code === 22001) {
					__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("系统错误");
				} else {
					__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("错误原因：" + jsondata.body.error_msg);
				}
			}, function (err) {
				console.log(err);
			});
		},
		hideDialog: function () {
			//重置初始化数据
			for (let key in this.copyformData) {
				this.formData[key] = this.copyformData[key];
			}
			document.getElementsByClassName("dialog")[0].style.display = "none";
		},
		addHttp: function () {
			this.formData.itemName = __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].trim(this.formData.itemName);
			this.formData.inputServerUrl = __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].trim(this.formData.inputServerUrl);
			this.formData.referer = __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].trim(this.formData.referer);
			this.formData.userAgent = __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].trim(this.formData.userAgent);
			this.formData.callbackApi = __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].trim(this.formData.callbackApi);
			this.formData.startTime = __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].trim(this.formData.startTime);
			this.formData.endTime = __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].trim(this.formData.endTime);

			if (!this.formData.itemName) {
				__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("请填写项目名称");
				return false;
			}
			if (!this.formData.inputServerUrl) {
				__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("请填写服务url");
				return false;
			}
			if (this.formData.criterion.length < 1) {
				__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("请选择监控预期设置的返回码");
				return false;
			}
			if (this.permissionList.length < 1) {
				__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("请先添加监控权限组");
				return false;
			}
			if (this.alarmList.length < 1) {
				__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("请先添加邮件报警组");
				return false;
			}

			let data = {};
			if (this.editinitformdata["oper"] == 5) {
				data["oper"] = 5;
				data["taskid"] = this.editinitformdata["taskid"];
			} else {
				data["oper"] = 1;
				data["taskid"] = "";
			}
			data["username"] = __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].username();
			data["product_line"] = this.productId;

			data["item_name"] = this.formData.itemName;
			data["type"] = 0;
			data["level"] = this.formData.levelRadio;
			data["url"] = this.formData.inputServerUrl;
			data["callback_url"] = this.formData.callbackApi;
			data["mail_count"] = this.formData.mailCount;
			data["message_count"] = this.formData.messageCount;
			data["time_out"] = this.formData.timeOut;
			data["referer"] = this.formData.referer;
			data["user_agent"] = this.formData.userAgent;

			let str = "";
			for (let i in this.formData.criterion) {
				str += this.formData.criterion[i] + ",";
			}
			data["criterion"] = { "http_code": str.substring(0, str.length - 1) };
			console.log(data["criterion"]);

			let permissionSelectedIndex = this.formData.permissionSelected;
			data["cer_mem"] = this.permissionList[permissionSelectedIndex].class_id;
			let alarmSelectedIndex = this.formData.alarmSelected;
			data["alert_mem"] = this.alarmList[alarmSelectedIndex].class_id;

			if (typeof data["cer_mem"] === "undefined") {
				__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("权限分组不能为空");
				return false;
			}

			if (typeof data["alert_mem"] === "undefined") {
				__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("监控报警分组不能为空");
				return false;
			}
			if (!this.formData.isAddPlat) {
				data["monitor_args"] = 0;
			} else {
				data["monitor_args"] = 1;
			}
			if (this.formData.isNeedAccount) {
				for (let key in this.userAccounts) {
					let json = this.userAccounts[key];
					if (this.formData.userSelected == json.acount_name) {
						data["monitoruser"] = json.tel_no;
					}
				}
			}

			if (this.formData.isAndPost == 1) {
				let str = "";
				this.formData.andPostCon = __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].trim(this.formData.andPostCon);
				if (!this.formData.andPostCon || this.formData.andPostCon == "undefined" || this.formData.andPostCon == "") {
					str = "";
				} else {
					let content = this.formData.andPostCon;
					str = content;
				}
				if (str && !__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].isJSON(str)) {
					__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("post规则:请填写正确的json格式数据");
					return false;
				}
				data["request_type"] = this.formData.formatSelect;
				if (this.formData.formatSelect == 0) {
					data["post_content"] = { "Json": str };
				} else if (this.formData.formatSelect == 1) {
					data["post_content"] = { "urlEncode": str };
				}
			}
			if (this.formData.isForever == 1) {
				if (this.formData.foreverFrequence >= 0) {
					data["eff_status"] = this.formData.isForever;
					data["frequence"] = this.formData.foreverFrequence;
				} else {
					__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("请输入监控频率");
				}
			}

			var reg = /^([0-1]\d|2[0-3]):[0-5]\d$/;
			if (reg.test(this.formData.startTime)) {
				data["start_time"] = this.formData.startTime;
			} else {
				__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("您的有效监控开始时间输入错误，请重新输入");
				return false;
			}

			if (reg.test(this.formData.endTime)) {
				data["end_time"] = this.formData.endTime;
			} else {
				__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("您的有效监控结束时间输入错误，请重新输入");
				return false;
			}

			let _self = this;
			__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].postData("itemmodify", data, function (jsondata) {
				let error_code = jsondata.body.error_code;
				if (error_code === 22000) {
					_self.$store.dispatch('getManagetableList', _self.dialogfetchdata);
					_self.hideDialog();
				} else if (error_code === 22001) {
					__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("系统错误请联系管理员查看问题");
					_self.hideDialog();
				} else if (error_code === 22005) {
					__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips(jsondata.body.error_msg);
				} else if (error_code === 22008) {
					__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("操作非法");
					_self.hideDialog();
				} else if (error_code === 22009) {
					__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("没有权限，请联系管理员开通");
					_self.hideDialog();
				} else if (error_code === 22452) {
					__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("用户未登录");
					_self.hideDialog();
				}
			}, function (err) {
				console.log(err);
			});
		}
	},
	created: function () {
		//保存初始化数据
		for (let key in this.formData) {
			this.copyformData[key] = this.formData[key];
		}
	},
	mounted: function () {
		//通信组件变量
		this.childHttptabledata = this.httptabledata;
	}

});

/***/ }),
/* 27 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__ = __webpack_require__(0);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//




/* harmony default export */ __webpack_exports__["default"] = ({
	name: "Dialogalertgroup",
	data() {
		return {
			dialogTitle: '编辑报警组',
			className: '',
			classId: '',
			usersselects: []
		};
	},
	computed: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_vuex__["c" /* mapGetters */])({
		AlertMemberlist: "alertmemberlist"
	}),
	// 获取不到数据，不知道什么原因
	// props:["editinitformdata"],
	watch: {
		AlertMemberlist: function () {
			this.className = this.AlertMemberlist.class_name;
			this.classId = this.AlertMemberlist.class_id;
			if (this.AlertMemberlist.data) {
				this.usersselects = [];
				for (var i = 0; i < this.AlertMemberlist.data.length; i++) {
					let data = { username: this.AlertMemberlist.data[i].username };
					this.usersselects.push(data);
				}
			}
		}
	},
	methods: {
		hideDialog: function () {
			//重置初始化数据
			this.className = '';
			this.classId = '';
			this.usersselects = [];
			document.getElementsByClassName("dialog")[0].style.display = "none";
		},

		rename: function () {
			let data = {};
			data = { "username": __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].username, "type": 3, "class_id": this.classId };
			if (this.className === '') {
				__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("请填写报警组名");
			} else {
				data["class_name"] = __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].trim(this.className);

				__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].getData("alertmanage", data, function (jsondata) {
					console.log(jsondata);
					if (jsondata.body.error_code === 22000) {
						__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("修改报警组名成功");
						this.$store.dispatch('getAlertemanagelist', { "username": __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].username, "type": 4 });
					} else {
						__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("修改报警组名失败");
						console.log(jsondata.body.error_code);
					}
				}.bind(this), function () {}.bind(this));
			}
		},
		deleteUser: function (index) {
			let data = {};
			data = { "username": __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].username, "type": 2, "class_id": this.classId };
			console.log(this.AlertMemberlist);
			data["member_name"] = __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].trim(this.AlertMemberlist.data[index].username);

			__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].getData("alertmember", data, function (jsondata) {
				console.log(jsondata);
				if (jsondata.body.error_code === 22000) {
					__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("删除成功");
					console.log(this.usersselects);
					this.usersselects.splice(index, 1);
					for (var i = this.usersselects.length - 1; i >= 0; i--) {
						if (this.usersselects[i].username === data["member_name"]) {
							this.usersselects.splice(i, 1);
						}
					}
				} else {
					__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("删除失败");
					console.log(jsondata.body.error_code);
				}
			}.bind(this), function () {}.bind(this));
		}

	}
});

/***/ }),
/* 28 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__ = __webpack_require__(0);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//




/* harmony default export */ __webpack_exports__["default"] = ({
	name: "Dialogalertgroup",
	data() {
		return {
			dialogTitle: '编辑权限组',
			className: '',
			classId: '',
			usersselects: []
		};
	},
	computed: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_vuex__["c" /* mapGetters */])({
		Certificatememberlist: "certificatememberlist"
	}),
	// 获取不到数据，不知道什么原因
	// props:["editinitformdata"],
	watch: {
		Certificatememberlist: function () {
			this.className = this.Certificatememberlist.class_name;
			this.classId = this.Certificatememberlist.class_id;
			if (this.Certificatememberlist.data) {
				this.usersselects = [];
				for (var i = 0; i < this.Certificatememberlist.data.length; i++) {
					let data = { username: this.Certificatememberlist.data[i].username };
					this.usersselects.push(data);
					console.log(data);
				}
			}
		}
	},
	methods: {
		hideDialog: function () {
			//重置初始化数据
			this.className = '';
			this.classId = '';
			this.usersselects = [];
			document.getElementsByClassName("dialog")[0].style.display = "none";
		},

		rename: function () {
			let data = {};
			data = { "username": __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].username, "type": 3, "class_id": this.classId };
			if (this.className === '') {
				__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("请填写权限组名");
			} else {
				data["class_name"] = __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].trim(this.className);

				__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].getData("certificatemanage", data, function (jsondata) {
					console.log(jsondata);
					if (jsondata.body.error_code === 22000) {
						__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("修改成功");
						this.$store.dispatch('getCertificatemanagelist', { "username": __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].username, "type": 4 });
					} else {
						__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("无操作权限 修改失败");
						console.log(jsondata.body.error_code);
					}
				}.bind(this), function () {}.bind(this));
			}
		},
		deleteUser: function (index) {
			let data = {};
			data = { "username": __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].username, "type": 2, "class_id": this.classId };
			console.log(this.Certificatememberlist);
			data["member_name"] = __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].trim(this.Certificatememberlist.data[index].username);

			__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].getData("certificatemember", data, function (jsondata) {
				console.log(jsondata);
				if (jsondata.body.error_code === 22000) {
					__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("删除成功");
					this.usersselects.splice(index, 1);
					for (var i = this.usersselects.length - 1; i >= 0; i--) {
						if (this.usersselects[i].username === data["member_name"]) {
							this.usersselects.splice(i, 1);
						}
					}
				} else {
					__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("删除失败");
					console.log(jsondata.body.error_code);
				}
			}.bind(this), function () {}.bind(this));
		}

	}
});

/***/ }),
/* 29 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Js_plugins_kalendae_js_kalendae_standalone_js__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Js_plugins_kalendae_js_kalendae_standalone_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__Js_plugins_kalendae_js_kalendae_standalone_js__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Js_vueGetData_js__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__tables_AlarmTable_vue__ = __webpack_require__(85);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__tables_AlarmTable_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__tables_AlarmTable_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__TurnPage_vue__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__TurnPage_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4__TurnPage_vue__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//







/* harmony default export */ __webpack_exports__["default"] = ({
	name: 'Alarm',
	data() {
		return {
			alarmFormInitdata: {
				alarmTypesSelect: "-1",
				alarmLevelSelect: "-1",
				alarmName: "",
				alarmId: "",
				processStatusSelect: "-1"
			},
			alarmTimes: "",
			alarmTypes: ["请选择监控类别", "http可用性", "数据接口", "页面元素"],
			alarmLeves: ["全部", "0级", "1级", "2级"],
			processStatus: ["全部", "未处理", "处理中", "已处理"],
			alarmTable: [],
			querydatas: {},
			alarmtable: "alarmtable",
			pages: {
				pageTotal: "100",
				start: 0,
				limit: 20
			}
		};
	},
	computed: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_vuex__["c" /* mapGetters */])({
		productId: "productId",
		allpage: "alarAllpage",
		tableTotal: "alarTableTotal"
	}),
	components: {
		AlarmTable: __WEBPACK_IMPORTED_MODULE_3__tables_AlarmTable_vue___default.a,
		TurnPage: __WEBPACK_IMPORTED_MODULE_4__TurnPage_vue___default.a
	},
	methods: {
		getTime: function (event) {
			this.alarmTimes = event.currentTarget.value;
		},
		/*
  getTableList: function(n){
  	n ? n : -1;
  	let datas = {
  		"username":vueGetData.username()
  	};
  	if(n!=-1){
  		datas["item_type"]=n;
  		this.$store.dispatch('getAlarmquerydata',datas)
  		this.$store.dispatch('getAlarmtableList',datas)
  	}
  },
  */
		getquerydatas: function () {
			this.alarmFormInitdata.alarmName = __WEBPACK_IMPORTED_MODULE_2__Js_vueGetData_js__["a" /* default */].trim(this.alarmFormInitdata.alarmName);
			this.alarmFormInitdata.alarmId = __WEBPACK_IMPORTED_MODULE_2__Js_vueGetData_js__["a" /* default */].trim(this.alarmFormInitdata.alarmId);
			let data = {};
			data["username"] = __WEBPACK_IMPORTED_MODULE_2__Js_vueGetData_js__["a" /* default */].username("perdonalid");
			data["start"] = this.pages.start;
			data["limit"] = __WEBPACK_IMPORTED_MODULE_2__Js_vueGetData_js__["a" /* default */].getDataLimit();

			let timejson = __WEBPACK_IMPORTED_MODULE_2__Js_vueGetData_js__["a" /* default */].getTimestamp(this.alarmTimes);
			data["start_time"] = timejson.start;
			data["end_time"] = timejson.end;

			if (this.alarmFormInitdata.alarmId) {
				data["alert_id"] = this.alarmFormInitdata.alarmId;
			}
			if (this.alarmFormInitdata.alarmName) {
				data["item_name"] = this.alarmFormInitdata.alarmName;
			}
			if (this.alarmFormInitdata.alarmLevelSelect > -1) {
				data["item_level"] = this.alarmFormInitdata.alarmLevelSelect;
			}
			if (this.alarmFormInitdata.alarmTypesSelect > -1) {
				data["item_type"] = this.alarmFormInitdata.alarmTypesSelect;
			}
			if (this.alarmFormInitdata.processStatusSelect > -1) {
				data["process_status"] = this.alarmFormInitdata.processStatusSelect;
			}
			console.log(data);
			this.querydatas = data;
			this.$store.dispatch('getAlarmquerydata', data);
		},
		queryList: function () {
			this.getquerydatas();
			this.$store.dispatch('getAlarmtableList', this.querydatas);
		}
	},
	created() {
		console.log(this.$route.params.alertid);
		if (!this.alarmTimes) {
			let timejson = __WEBPACK_IMPORTED_MODULE_2__Js_vueGetData_js__["a" /* default */].getTimestamp();
			this.alarmTimes = timejson.orther.s + " - " + timejson.orther.e;
		}
		if (this.$route.params.alertid && this.$route.params.alertid != "undefined") {
			this.alarmFormInitdata.alarmId = this.$route.params.alertid;
		}
		this.queryList();
	},
	mounted() {
		let k5 = new __WEBPACK_IMPORTED_MODULE_1__Js_plugins_kalendae_js_kalendae_standalone_js___default.a.Input('alarm-time', {
			months: 2,
			mode: 'range',
			format: "YYYY-MM-DD",
			direction: "today-past"
		});
	}
});

/***/ }),
/* 30 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Js_vueGetData_js__ = __webpack_require__(0);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ __webpack_exports__["default"] = ({
	name: 'album',
	data() {
		return {
			reasonSelected: 0,
			reasons: ["服务不稳定", "监控不稳定", "新上线变更(非问题)", "线上问题", "线上潜在风险", "数据正常波动", "测试联调类"],
			secondReasonSelected: 0,
			secondReasons: [],
			secondReason1: ["机房服务不稳定", "产品线自身服务不稳定"],
			secondReason2: ["Case不稳定", "产品线执行环节、框架不稳定", "Monitor平台不稳定"],
			secondReason3: [],
			secondReason4: ["代码问题", "运维问题", "外部服务问题"],
			secondReason5: [],
			secondReason6: ["节假日影响", "突发事件", "客户操作", "作弊攻击"],
			secondReason7: [],
			problemgradeSelected: 0,
			problemgrades: ["严重", "中等", "较小"],
			alertDeatail: [],
			feedbackdetail: "",
			lossdescribe: "",
			isshowSave: true

		};
	},
	created() {
		this.fetchData();
	},
	watch: {
		'$route': 'fetchData',
		reasonSelected: function () {
			if (typeof this.reasonSelected == "undefined" || !this.reasonSelected) {
				this.reasonSelected = 0;
			}
		},
		problemgradeSelected: function () {
			if (typeof this.problemgradeSelected == "undefined" || !this.reasonSelected) {
				this.problemgradeSelected = 0;
			}
		}
	},
	mounted: function () {},
	methods: {
		fetchData() {
			//获取路由id
			let alertid = this.$route.params.alertid;
			let username = __WEBPACK_IMPORTED_MODULE_0__Js_vueGetData_js__["a" /* default */].username();
			let data = { "username": username, "alert_id": alertid };
			console.log(this.$route.params);

			__WEBPACK_IMPORTED_MODULE_0__Js_vueGetData_js__["a" /* default */].getData("alertrecord", data, function (jsondata) {
				if (jsondata.body.error_code === 22000) {

					let json = jsondata.body.data;
					console.log(json);
					// this.reasonSelected = json[0].alert_reason;
					this.problemgradeSelected = json[0].severity_level;
					this.feedbackdetail = json[0].feedback_detail;
					this.lossdescribe = json[0].loss_describe;
					this.alertDeatail = json;
					let str = json[0].alert_reason;
					if (str) {
						if (str.indexOf("/") > -1) {
							let arr = str.split("/");
							let newarr = [];
							for (let i = 0; i < this.reasons.length; i++) {
								if (this.reasons[i] == arr[0]) {
									this.reasonSelected = i;
									if (i == 0) {
										newarr = this.secondReason1;
										console.log(this.secondReason1);
									} else if (i == 1) {
										newarr = this.secondReason2;
										console.log(this.secondReason2);
									} else if (i == 3) {
										newarr = this.secondReason4;
										console.log(this.secondReason4);
									} else if (i == 5) {
										newarr = this.secondReason6;
										console.log(this.secondReason6);
									}
									if (newarr.length > 0) {
										console.log(arr[1]);
										for (let j = 0; j < newarr.length; j++) {
											console.log(newarr[j]);
											console.log(arr[1]);
											if (newarr[j] == arr[1]) {
												this.secondReasonSelected = j;
											}
										}
									} else {
										this.secondReasonSelected = 0;
									}
								}
							}
						} else {
							for (let i = 0; i < this.reasons.length; i++) {
								if (str == this.reasons[i]) {
									this.reasonSelected = i;
								}
							}
						}
					}
					console.log(this.reasonSelected);
				}
			}.bind(this), function (err) {
				console.log(err);
			}.bind(this));
		},
		resetSecondSelected: function () {
			this.secondReasonSelected = 0;
		},
		save() {
			let alertid = this.$route.params.alertid;
			let username = __WEBPACK_IMPORTED_MODULE_0__Js_vueGetData_js__["a" /* default */].username();
			let data = { "username": username, "alert_id": alertid };
			data["severity_level"] = this.problemgradeSelected;
			data["feedback_detail"] = this.feedbackdetail;
			data["loss_describe"] = this.lossdescribe;

			let str = "";
			let index = this.reasonSelected;
			let num = this.secondReasonSelected;
			str = this.reasons[index];
			if (index == 0 && this.secondReason1.length > 0) {
				str = str + "/" + this.secondReason1[num];
			} else if (index == 1 && this.secondReason2.length > 0) {
				str = str + "/" + this.secondReason2[num];
			} else if (index == 3 && this.secondReason4.length > 0) {
				str = str + "/" + this.secondReason4[num];
			} else if (index == 5 && this.secondReason6.length > 0) {
				str = str + "/" + this.secondReason6[num];
			}
			data["alert_reason"] = str;
			console.log(data["alert_reason"]);
			if (this.alertDeatail[0].process_status == 0 || this.alertDeatail[0].process_status == 1) {
				//处理中和未处理--->完成
				let json = { "username": username, "alert_id": alertid, "update": 2 };
				__WEBPACK_IMPORTED_MODULE_0__Js_vueGetData_js__["a" /* default */].getData("alertrecord", json, function (jsondata) {
					if (jsondata.body.error_code === 22000) {
						console.log("告知后台已经更新状态为2");
					}
				}.bind(this), function (err) {
					console.log(err);
				}.bind(this));
			} else if (this.alertDeatail[0].process_status == 2) {
				//
				console.log("查看");
			}

			data["feedbacktime"] = new Date().getTime() / 1000;
			console.log(data);
			__WEBPACK_IMPORTED_MODULE_0__Js_vueGetData_js__["a" /* default */].postData("alertrecorddetail", data, function (jsondata) {
				if (jsondata.body.error_code === 22000) {
					// this.$router.go("-1");
					location.href = "http://" + location.host + "/#/alarm";
				}
			}.bind(this), function (err) {
				console.log(err);
			}.bind(this));
		}
	}
});

/***/ }),
/* 31 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__ = __webpack_require__(0);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//




/* harmony default export */ __webpack_exports__["default"] = ({
	name: 'album',
	data() {
		return {
			reasonSelected: 0,
			reasons: ["服务不稳定", "监控不稳定", "新上线变更(非问题)", "线上问题", "线上潜在风险", "数据正常波动", "测试联调类"],
			secondReasonSelected: 0,
			secondReasons: [],
			secondReason1: ["机房服务不稳定", "产品线自身服务不稳定"],
			secondReason2: ["Case不稳定", "产品线执行环节/框架不稳定", "Monitor平台不稳定"],
			secondReason3: [],
			secondReason4: ["代码问题", "运维问题", "外部服务问题"],
			secondReason5: [],
			secondReason6: ["节假日影响", "突发事件", "客户操作", "作弊攻击"],
			secondReason7: [],
			problemgradeSelected: 0,
			problemgrades: ["严重", "中等", "较小"],
			feedbackdetail: "",
			lossdescribe: ""
		};
	},
	computed: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_vuex__["c" /* mapGetters */])({
		alarmIds: "alarmidbatch"
	}),

	methods: {
		resetSecondSelected: function () {
			this.secondReasonSelected = 0;
		},
		save() {
			let alertid = this.alarmIds;
			console.log(this.alarmIds);
			let username = __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].username();
			let data = { "username": username, "alert_id": alertid };
			data["severity_level"] = this.problemgradeSelected;
			data["feedback_detail"] = this.feedbackdetail;
			data["loss_describe"] = this.lossdescribe;
			data["feedbacktime"] = new Date().getTime() / 1000;

			let str = "";
			let index = this.reasonSelected;
			let num = this.secondReasonSelected;
			str = this.reasons[index];
			if (index == 0 && this.secondReason1.length > 0) {
				str = str + "/" + this.secondReason1[num];
			} else if (index == 1 && this.secondReason2.length > 0) {
				str = str + "/" + this.secondReason2[num];
			} else if (index == 3 && this.secondReason4.length > 0) {
				str = str + "/" + this.secondReason4[num];
			} else if (index == 5 && this.secondReason6.length > 0) {
				str = str + "/" + this.secondReason6[num];
			}
			data["alert_reason"] = str;

			let json = { "username": username, "alert_id": alertid, "update": 2 };
			__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].getData("alertrecord", json, function (jsondata) {
				if (jsondata.body.error_code === 22000) {
					console.log("告知后台已经更新状态为2");
				}
			}.bind(this), function (err) {
				console.log(err);
			}.bind(this));
			console.log(data);
			__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].postData("alertrecorddetail", data, function (jsondata) {
				if (jsondata.body.error_code === 22000) {
					location.href = "http://" + location.host + "/#/alarm";
				}
			}.bind(this), function (err) {
				console.log(err);
			}.bind(this));
		}
	}
});

/***/ }),
/* 32 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
//
//
//
//
//
//
//

/* harmony default export */ __webpack_exports__["default"] = ({
	name: 'gedan'

});

/***/ }),
/* 33 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Js_vueGetData_js__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__tables_MonitorTableHttp_vue__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__tables_MonitorTableHttp_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__tables_MonitorTableHttp_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__tables_ManageTableJsconf_vue__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__tables_ManageTableJsconf_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__tables_ManageTableJsconf_vue__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//


// import Dialogs from '../Dialogs.vue'



/* harmony default export */ __webpack_exports__["default"] = ({
	name: 'ManageTop',
	data() {
		return {
			topname: '监控项管理',
			monitorType: ["http可用性", "数据接口", "页面元素"],
			monitorTypeSelectedID: 0,
			dynamics: "MonitorTableHttp", //动态组件
			pageTotal: "100",
			statusList: ["全部", "未启用", "已启用"],
			levelList: ["全部", "0", "1", "2"],
			tableHttp: {},
			tableDataPort: {},
			tablePageElement: {},
			settingList: ["全部", "线上环境", "线下环境"]
		};
	},
	methods: {
		resetArr: function (arr, resetName) {
			for (var i = 0; i < arr.length; i++) {
				arr[i] = resetName;
			}
			return arr;
		},
		searchDetail: function (n) {
			n ? n : 0;
			let data = { "username": __WEBPACK_IMPORTED_MODULE_0__Js_vueGetData_js__["a" /* default */].username(), "product_line": "", "type": n, "limit": __WEBPACK_IMPORTED_MODULE_0__Js_vueGetData_js__["a" /* default */].getDataLimit() };
			console.log(data);
			if (n == 0) {
				this.dynamics = "MonitorTableHttp";
				data = { "username": "liuyemin", "type": 0, "level": 0, "item_name": "监控项test", "id": 2, "status": 1, "start": 0, "limit": 10 };
				__WEBPACK_IMPORTED_MODULE_0__Js_vueGetData_js__["a" /* default */].getData("itemshow", data, function (jsondata) {
					if (jsondata.body.error_code === 22000) {
						this.tableHttp = jsondata.body.data;
					}
				}.bind(this), function () {}.bind(this));
			} else if (n == 1) {
				this.dynamics = "ManageTableJsconf";
			}
		}
	},
	mounted() {
		console.log(__WEBPACK_IMPORTED_MODULE_0__Js_vueGetData_js__["a" /* default */].getContHeight(68));
	},
	components: {
		// Dialogs,
		MonitorTableHttp: __WEBPACK_IMPORTED_MODULE_1__tables_MonitorTableHttp_vue___default.a,
		ManageTableJsconf: __WEBPACK_IMPORTED_MODULE_2__tables_ManageTableJsconf_vue___default.a
	}
});

/***/ }),
/* 34 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__tables_MonitorTableHttp_vue__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__tables_MonitorTableHttp_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__tables_MonitorTableHttp_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__tables_ManageTableJsconf_vue__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__tables_ManageTableJsconf_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__tables_ManageTableJsconf_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__tables_ManageTableEles_vue__ = __webpack_require__(88);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__tables_ManageTableEles_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4__tables_ManageTableEles_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__TurnPage_vue__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__TurnPage_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5__TurnPage_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__SideLeft_vue__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__SideLeft_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6__SideLeft_vue__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//









/* harmony default export */ __webpack_exports__["default"] = ({
	name: 'ManageTop',
	data() {
		return {
			formInitData: {
				monitorTypeSelectedID: 0,
				monitorType: ["http可用性", "数据接口", "页面元素"],
				statusList: ["全部", "未启用", "已启用"],
				levelList: ["全部", "0", "1", "2"],
				settingList: ["全部", "线上环境", "线下环境"],
				itemname: "",
				itemid: "",
				statusSelect: "全部",
				levelSelect: "全部",
				settingSelect: 0

			},
			dynamics: "MonitorTableHttp", //动态组件
			tableDataPort: {},
			tablePageElement: {},
			datas: {},
			pages: {
				pageTotal: 116,
				start: 0
			}
		};
	},
	methods: {
		getdatas: function () {
			this.datas = {};
			this.datas = { "username": __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].username() };
			this.datas["type"] = this.formInitData.monitorTypeSelectedID;
			this.formInitData.itemname = __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].trim(this.formInitData.itemname);
			this.formInitData.itemid = __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].trim(this.formInitData.itemid);
			if (this.formInitData.itemname) {
				this.datas["item_name"] = this.formInitData.itemname;
			}
			if (this.productId && this.productId != -1) {
				this.datas["product_line"] = this.productId;
			}
			if (this.formInitData.itemid > 0) {
				this.datas["taskid"] = this.formInitData.itemid;
			}
			if (this.formInitData.levelSelect != "全部") {
				this.datas["level"] = this.formInitData.levelSelect;
			}
			if (this.formInitData.statusSelect == "未启用") {
				this.datas["status"] = 1;
			} else if (this.formInitData.statusSelect == "已启用") {
				this.datas["status"] = 2;
			}
			this.datas["start"] = this.pages.start;
			this.datas["limit"] = __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].getDataLimit();

			this.$store.dispatch('getManagequerydata', this.datas);
			this.$store.dispatch('getManagetableList', this.datas);
		},
		getTableList: function (n) {
			n ? n : 0;
			this.getdatas();
			if (n == 0) {
				this.dynamics = "MonitorTableHttp";
			} else if (n == 1) {
				this.dynamics = "ManageTableJsconf";
			} else if (n == 2) {
				this.dynamics = "ManageTableEles";
			}
		},
		turnPages: function () {
			let pag = [];
			if (this.current < this.showItem) {
				//如果当前的激活的项 小于要显示的条数
				//总页数和要显示的条数那个大就显示多少条
				var i = Math.min(this.showItem, this.allpage);
				while (i) {
					pag.unshift(i--);
				}
			} else {
				//当前页数大于显示页数了
				var middle = this.current - Math.floor(this.showItem / 2),
				    //从哪里开始
				i = this.showItem;
				if (middle > this.allpage - this.showItem) {
					middle = this.allpage - this.showItem + 1;
				}
				while (i--) {
					pag.push(middle++);
				}
			}
			return pag;
		},
		goto: function (index) {
			if (index == this.current) return;
			this.current = index;
			//这里可以发送ajax请求
		}
	},
	created() {
		console.log(this.$route.params.itemname);
		if (this.$route.params.itemname && this.$route.params.itemname != "undefined") {
			let routeparams = this.$route.params.itemname;
			let arr = routeparams.split("&");
			for (let i = 0; i < arr.length; i++) {
				let arr2 = arr[i].split("=");
				if (arr2[0] == "itemname") {
					this.formInitData.itemname = arr2[1];
				}
				if (arr2[0] == "type") {
					let type = arr2[1];
					this.formInitData.monitorTypeSelectedID = arr2[1];
					if (type == 0) {
						this.dynamics = "MonitorTableHttp";
					} else if (type == 1) {
						this.dynamics = "ManageTableJsconf";
					} else if (type == 2) {
						this.dynamics = "ManageTableEles";
					}
				}
			}
		}
		this.getdatas();
	},
	computed: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_vuex__["c" /* mapGetters */])({
		productId: "productId",
		allpage: "allpage",
		tableTotal: "tableTotal"
	}),
	mounted: function () {
		// this.getdatas();
	},
	components: {
		MonitorTableHttp: __WEBPACK_IMPORTED_MODULE_2__tables_MonitorTableHttp_vue___default.a,
		ManageTableJsconf: __WEBPACK_IMPORTED_MODULE_3__tables_ManageTableJsconf_vue___default.a,
		ManageTableEles: __WEBPACK_IMPORTED_MODULE_4__tables_ManageTableEles_vue___default.a,
		SideLeft: __WEBPACK_IMPORTED_MODULE_6__SideLeft_vue___default.a,
		TurnPage: __WEBPACK_IMPORTED_MODULE_5__TurnPage_vue___default.a
	}
});

/***/ }),
/* 35 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__tables_NoPermission_vue__ = __webpack_require__(89);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__tables_NoPermission_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__tables_NoPermission_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__pages_UserInfo_vue__ = __webpack_require__(84);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__pages_UserInfo_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__pages_UserInfo_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__tables_ManageAlertGroup_vue__ = __webpack_require__(86);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__tables_ManageAlertGroup_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4__tables_ManageAlertGroup_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__tables_ManageCertiGroup_vue__ = __webpack_require__(87);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__tables_ManageCertiGroup_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5__tables_ManageCertiGroup_vue__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//








/* harmony default export */ __webpack_exports__["default"] = ({
	name: 'ManageUserTop',
	data() {
		return {
			dynamics: "" };
	},
	computed: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_vuex__["c" /* mapGetters */])({
		userList: "userinfolist"
	}),
	methods: {
		getTableList: function (n) {
			n ? n : 0;
			let datas = {
				"username": __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].username(),
				"type": 4
			};
			if (n == 0) {
				this.dynamics = "";
			} else if (n == 1) {
				this.$store.dispatch('getUserinfolist', datas);
				this.dynamics = "UserInfo";
			} else if (n == 2) {
				this.$store.dispatch('getAlertemanagelist', datas);
				__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].getData("alertmanage", datas, function (jsondata) {
					if (jsondata.body.error_code === 22001) {
						this.dynamics = "NoPermission";
						return false;
					} else {
						this.dynamics = "ManageAlertGroup";
					}
				}.bind(this), function () {}.bind(this));
			} else if (n == 3) {
				this.$store.dispatch('getCertificatemanagelist', datas);
				__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].getData("certificatemanage", datas, function (jsondata) {
					if (jsondata.body.error_code === 22001) {
						this.dynamics = "NoPermission";
						return false;
					} else {
						this.dynamics = "ManageCertiGroup";
					}
				}.bind(this), function () {}.bind(this));
			}
		}

	},
	components: {
		NoPermission: __WEBPACK_IMPORTED_MODULE_2__tables_NoPermission_vue___default.a,
		ManageAlertGroup: __WEBPACK_IMPORTED_MODULE_4__tables_ManageAlertGroup_vue___default.a,
		ManageCertiGroup: __WEBPACK_IMPORTED_MODULE_5__tables_ManageCertiGroup_vue___default.a,
		UserInfo: __WEBPACK_IMPORTED_MODULE_3__pages_UserInfo_vue___default.a
	}

});

/***/ }),
/* 36 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__ = __webpack_require__(0);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//




/* harmony default export */ __webpack_exports__["default"] = ({
	name: 'userinfo',
	data() {
		return {
			addData: {
				name: ''
			},
			modifyData: {
				id: '',
				name: ''
			},
			deleteData: {
				id: ''
			}
		};
	},
	computed: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_vuex__["c" /* mapGetters */])({
		linesList: "lineslist"
	}),
	methods: {
		addProductline: function () {
			let data = {};
			data = { "username": __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].username };
			data["type"] = 1;
			console.log(this.addData.name);
			if (this.addData.name === '') {
				__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("请填写产品线名称");
			} else {
				data["product_name"] = __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].trim(this.addData.name);
				__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].getData("productline", data, function (jsondata) {
					console.log(jsondata);
					if (jsondata.body.error_code === 22000) {
						__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("添加产品线成功");
						this.$store.dispatch('getLines', { "username": __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].username, "type": 4 });
					} else {
						__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("无操作权限，添加失败");
						console.log(jsondata.body.error_code);
					}
					this.addData.name = "";
				}.bind(this), function () {}.bind(this));
			}
		},
		modifyProductline: function () {
			let data = {};
			data = { "username": __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].username };
			data["type"] = 3;
			console.log(this.modifyData.id);
			if (this.modifyData.id === '') {
				__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("请填写产品线ID");
			} else {
				data["product_id"] = __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].trim(this.modifyData.id);
				if (this.modifyData.name === '') {
					__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("请填写产品线名称");
				} else {
					data["product_name"] = __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].trim(this.modifyData.name);
					__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].getData("productline", data, function (jsondata) {
						console.log(jsondata);
						if (jsondata.body.error_code === 22000) {
							__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("修改产品线名称成功");
							this.$store.dispatch('getLines', { "username": __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].username, "type": 4 });
						} else {
							__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("无操作权限，修改失败");
							console.log(jsondata.body.error_code);
						}
						this.modifyData.id = "";
						this.modifyData.name = "";
					}.bind(this), function () {}.bind(this));
				}
			}
		},
		deleteProductline: function (id, event) {
			let _self = this;
			let data = {};
			data = { "username": __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].username, "type": 2, "product_id": id };
			console.log(data);

			let str = '<div class="popCreat" id="deleteLogBox">' + '<h3>确定要删除吗？</h3>' + '<div class="btns"><span class="surebtn" id="surebtn">确定</span><span class="cancelbtn" id="cancelbtn">取消</span></div></div>';
			__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatPop(str);

			let surebtn = document.getElementById("surebtn");
			let cancelbtn = document.getElementById("cancelbtn");

			surebtn.onclick = function () {
				__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].closePop();
				__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].getData("productline", data, function (jsondata) {
					console.log(jsondata);
					if (jsondata.body.error_code === 22000) {
						__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("删除产品线成功");
						_self.$store.dispatch('getLines', { "username": __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].username, "type": 4 });
					} else {
						__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("无操作权限，删除失败");
						console.log(jsondata.body.error_code);
					}
				}.bind(this), function () {}.bind(this));
			};
			cancelbtn.onclick = function () {
				__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].closePop();
			};
		}
	},
	created() {
		this.$store.dispatch('getLines', { "username": __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].username, "type": 4 });
	}
});

/***/ }),
/* 37 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Js_plugins_kalendae_js_kalendae_standalone_js__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Js_plugins_kalendae_js_kalendae_standalone_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__Js_plugins_kalendae_js_kalendae_standalone_js__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Js_vueGetData_js__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__tables_RunlogTable_vue__ = __webpack_require__(90);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__tables_RunlogTable_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__tables_RunlogTable_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__TurnPage_vue__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__TurnPage_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4__TurnPage_vue__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//







/* harmony default export */ __webpack_exports__["default"] = ({
	name: 'RunLog',
	data() {
		return {
			runlogFormInitdata: {
				manageeName: "",
				// manageTypesSelect: "http可用性",
				// manageStatusSelect: "全部状态"
				manageTypesSelect: -1,
				manageStatusSelect: -1
			},
			alarmTimes: "",
			runlogManageTypes: ["请选择监控类别", "http可用性", "数据接口", "页面元素"],
			runlogMmanageStatus: ["全部状态", "pass", "fali", "timeout"],
			runlogTable: [],
			querydatas: {},
			runlogtableType: "runlogtable",
			pages: {
				pageTotal: "100",
				start: 0,
				limit: 20
			}
		};
	},
	computed: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_vuex__["c" /* mapGetters */])({
		productId: "productId",
		allpage: "runlogAllpage",
		tableTotal: "runlogTableTotal"
	}),
	components: {
		RunlogTable: __WEBPACK_IMPORTED_MODULE_3__tables_RunlogTable_vue___default.a,
		TurnPage: __WEBPACK_IMPORTED_MODULE_4__TurnPage_vue___default.a
	},
	methods: {
		getTime: function (event) {
			this.alarmTimes = event.currentTarget.value;
		},
		getTableList: function () {
			let data = {};
			data["username"] = __WEBPACK_IMPORTED_MODULE_2__Js_vueGetData_js__["a" /* default */].username();
			data["start"] = this.pages.start;
			data["limit"] = __WEBPACK_IMPORTED_MODULE_2__Js_vueGetData_js__["a" /* default */].getDataLimit();

			console.log(this.alarmTimes);
			let timejson = __WEBPACK_IMPORTED_MODULE_2__Js_vueGetData_js__["a" /* default */].getTimestamp(this.alarmTimes);
			data["start_time"] = timejson.start;
			data["end_time"] = timejson.end;

			if (this.runlogFormInitdata.manageStatusSelect > -1) {
				data["run_status"] = this.runlogFormInitdata.manageStatusSelect;
			}

			if (this.runlogFormInitdata.manageTypesSelect > -1) {
				data["item_type"] = this.runlogFormInitdata.manageTypesSelect;
			}

			this.runlogFormInitdata.manageeName = __WEBPACK_IMPORTED_MODULE_2__Js_vueGetData_js__["a" /* default */].trim(this.runlogFormInitdata.manageeName);
			if (this.runlogFormInitdata.manageeName) {
				data["item_name"] = this.runlogFormInitdata.manageeName;
			}
			this.querydatas = data;
			this.$store.dispatch('getRunlogquerydata', data);
		},
		queryLogList: function () {
			this.getTableList();
			this.$store.dispatch('getRunlogtableList', this.querydatas);
		}
	},
	created() {
		if (!this.alarmTimes) {
			let timejson = __WEBPACK_IMPORTED_MODULE_2__Js_vueGetData_js__["a" /* default */].getTimestamp();
			this.alarmTimes = timejson.orther.s + " - " + timejson.orther.e;
		}
		this.queryLogList();
	},
	mounted() {
		let k4 = new __WEBPACK_IMPORTED_MODULE_1__Js_plugins_kalendae_js_kalendae_standalone_js___default.a.Input('runlogitem-time', {
			months: 2,
			mode: 'range',
			format: "YYYY-MM-DD",
			direction: "today-past"
		});
	}
});

/***/ }),
/* 38 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__ = __webpack_require__(0);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//




/* harmony default export */ __webpack_exports__["default"] = ({
	name: 'userinfo',
	data() {
		return {
			addData: {
				membername: '',
				telephone: '',
				email: ''
			},
			modifyData: {
				membername: '',
				telephone: '',
				email: ''
			},
			searchData: {
				membername: ''
			},
			deleteData: {
				membername: ''
			}
		};
	},
	computed: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_vuex__["c" /* mapGetters */])({
		userList: "userinfolist"
	}),
	methods: {
		addUser: function () {
			let data = {};
			data = { "username": __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].username };
			data["type"] = 1;
			console.log(this.addData.membername);
			if (this.addData.membername === '') {
				__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("请填写用户名");
			} else {
				data["member_name"] = __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].trim(this.addData.membername);
				if (this.addData.telephone === '') {
					__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("请填写用户电话");
				} else {
					data["tel_no"] = __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].trim(this.addData.telephone);
					if (this.addData.email === '') {
						__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("请填写用户邮箱");
					} else {
						data["email"] = __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].trim(this.addData.email);
						__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].getData("userinfo", data, function (jsondata) {
							console.log(jsondata);
							if (jsondata.body.error_code === 22000) {
								__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("添加用户成功");
								this.$store.dispatch('getUserinfolist', { "username": __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].username, "type": 4 });
							} else {
								__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("无操作权限，添加失败");
								console.log(jsondata.body.error_code);
							}
							this.addData.membername = "";
							this.addData.email = "";
							this.addData.telephone = "";
						}.bind(this), function () {}.bind(this));
					}
				}
			}
		},
		modifyUser: function () {
			let data = {};
			data = { "username": __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].username };
			data["type"] = 3;
			console.log(this.modifyData.membername);
			if (this.modifyData.membername === '') {
				__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("请填写用户名");
			} else {
				data["member_name"] = __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].trim(this.modifyData.membername);
				if (this.modifyData.email === '' && this.modifyData.telephone === '') {
					__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("请填写要修改的项");
				} else {
					if (this.modifyData.telephone != '') {
						data["tel_no"] = __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].trim(this.modifyData.telephone);
					}
					if (this.modifyData.email != '') {
						data["email"] = __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].trim(this.modifyData.email);
					}
					__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].getData("userinfo", data, function (jsondata) {
						console.log(jsondata);
						if (jsondata.body.error_code === 22000) {
							__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("修改用户信息成功");
							this.$store.dispatch('getUserinfolist', { "username": __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].username, "type": 4 });
						} else {
							__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("无操作权限，修改失败");
							console.log(jsondata.body.error_code);
						}
						this.modifyData.membername = "";
						this.modifyData.email = "";
						this.modifyData.telephone = "";
					}.bind(this), function () {}.bind(this));
				}
			}
		},
		searchUser: function () {
			let data = {};
			data = { "username": __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].username };
			data["type"] = 4;
			console.log(this.searchData.membername);
			if (this.searchData.membername === '') {
				__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("请填写用户名");
			} else {
				data["member_name"] = __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].trim(this.searchData.membername);
			}

			__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].getData("userinfo", data, function (jsondata) {
				console.log(jsondata);
				if (jsondata.body.error_code === 22000) {
					this.$store.dispatch('getUserinfolist', data);
					this.searchData.membername = "";
				} else {
					console.log(jsondata.body.error_code);
				}
			}.bind(this), function () {}.bind(this));
		},
		deleteUser: function (membername, event) {
			let _self = this;
			let data = {};
			data = { "username": __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].username, "type": 2, "member_name": membername };
			console.log(data);

			let str = '<div class="popCreat" id="deleteLogBox">' + '<h3>确定要删除吗？</h3>' + '<div class="btns"><span class="surebtn" id="surebtn">确定</span><span class="cancelbtn" id="cancelbtn">取消</span></div></div>';
			__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatPop(str);

			let surebtn = document.getElementById("surebtn");
			let cancelbtn = document.getElementById("cancelbtn");

			surebtn.onclick = function () {
				__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].closePop();
				__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].getData("userinfo", data, function (jsondata) {
					console.log(jsondata);
					if (jsondata.body.error_code === 22000) {
						__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("删除用户信息成功");
						_self.$store.dispatch('getUserinfolist', { "username": __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].username, "type": 4 });
					} else {
						__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("无操作权限，删除失败");
						console.log(jsondata.body.error_code);
					}
				}.bind(this), function () {}.bind(this));
			};
			cancelbtn.onclick = function () {
				__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].closePop();
			};
		}
	}
});

/***/ }),
/* 39 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__ = __webpack_require__(0);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//




/* harmony default export */ __webpack_exports__["default"] = ({
	name: 'Alarmtable',
	data() {
		return {
			isCheckAll: false
		};
	},
	// props:["alarmquerydatas"],
	computed: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_vuex__["c" /* mapGetters */])({
		childAlarmTable: "alarmlist",
		alarmquerydata: "alarmquerydata"
	}),
	watch: {
		childAlarmTable: function () {
			var all = document.getElementsByName("check-all");
			all[0].checked = false;
			this.isCheckAll = false;

			var ones = document.getElementsByName("check-one");
			var len = ones.length;
			if (len > 0) {
				for (var i = 0; i < len; i++) {
					if (ones[i].checked) {
						ones[i].checked = false;
					}
				}
			}
		}
	},
	mounted: function () {
		// this.getTableList()
	},
	methods: {
		swapCheck: function () {
			if (!this.isCheckAll) {
				this.isCheckAll = true;
				var names = document.getElementsByName("check-one");
				var len = names.length;
				if (len > 0) {
					for (var i = 0; i < len; i++) {
						names[i].checked = true;
					}
				}
			} else {
				this.isCheckAll = false;
				var names = document.getElementsByName("check-one");
				var len = names.length;
				if (len > 0) {
					for (var i = 0; i < len; i++) {
						names[i].checked = false;
					}
				}
			}
		},
		startDoBatch: function () {
			var names = document.getElementsByName("check-one");
			var len = names.length;
			if (len > 0) {
				var str = "";
				var indexs = [];
				for (var i = 0; i < len; i++) {
					if (names[i].checked) {
						var row = names[i].parentNode.parentNode;
						var id = row.cells[1].innerHTML;
						str = str + id + ",";
						indexs.push(names[i].parentNode.parentNode.rowIndex - 1);
						names[i].checked = false;
					}
				}

				let data = { "username": __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].username() };
				data["alert_id"] = str.substring(0, str.length - 1);
				data["update"] = 1;
				let paramsJson = {};
				paramsJson["data"] = data;
				paramsJson["indexs"] = indexs;
				paramsJson["indexs"] = indexs;

				__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].getData("alertrecord", paramsJson, function (jsondata) {
					if (jsondata.body.error_code === 22000) {
						this.$store.dispatch("startDoItemsBatch", paramsJson);
						__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("已经开始处理了");
					}
				}.bind(this), function (err) {
					console.log(err);
				}.bind(this));
			}
		},
		startDo: function (event) {
			let ele = event.currentTarget;
			let id = ele.getAttribute("data-alerid");
			let index = ele.getAttribute("data-index");
			let paramsJson = {};
			let data = { "username": __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].username() };

			data["alert_id"] = id;
			data["update"] = 1;
			paramsJson["data"] = data;
			paramsJson["index"] = index;

			__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].getData("alertrecord", paramsJson, function (jsondata) {
				if (jsondata.body.error_code === 22000) {
					// this.$store.dispatch('getAlarmtableList',this.alarmquerydata)
					this.$store.dispatch("startDoItem", paramsJson);
					__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("已经开始处理了");
				}
			}.bind(this), function (err) {
				console.log(err);
			}.bind(this));
			// // }.bind(this),"http://192.168.217.22:8999/monitor/")
		},
		finishDoBatch: function () {
			var names = document.getElementsByName("check-one");
			var len = names.length;
			if (len > 0) {
				var str = "";
				var indexs = [];
				for (var i = 0; i < len; i++) {
					if (names[i].checked) {
						var row = names[i].parentNode.parentNode;
						var id = row.cells[1].innerHTML;
						str = str + id + ",";
						indexs.push(names[i].parentNode.parentNode.rowIndex - 1);
						names[i].checked = false;
					}
				}
				this.$store.dispatch("getAlarmIdBatch", str.substring(0, str.length - 1));
				location.href = "http://" + location.host + "/#/alarminfobatch";
			}
		}
	}
});

/***/ }),
/* 40 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__dialogs_DialogsAlertGroup_vue__ = __webpack_require__(73);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__dialogs_DialogsAlertGroup_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__dialogs_DialogsAlertGroup_vue__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//





/* harmony default export */ __webpack_exports__["default"] = ({
	name: 'ManageAlertGroup',
	data() {
		return {
			editGetFormData: {}, //编辑时数据
			newAddGroup: false, //是否新建报警组
			groupName: "",
			newAddMember: false, //是否添加报警组成员
			memberName: "",
			alarmSelected: 0 };
	},
	computed: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_vuex__["c" /* mapGetters */])({
		alarmList: "alertmanagelist",
		alertclassid: "alertclassid"
	}),
	watch: {
		alertclassid: function () {
			let id = this.alertclassid;
			for (let i = 0; i < this.alarmList.length; i++) {
				let json = this.alarmList[i];
				if (id == json.class_id) {
					this.alarmSelected = i;
					return false;
				}
			}
		}
	},
	methods: {
		/*
  seeMembers:function(index){
  	let data = {"type":4,"username":vueGetData.username,"class_id":index}
         vueGetData.getData("alertmember",data,function(jsondata){
         	console.log(jsondata);
          if(jsondata.body.error_code === 22000){
         		let memberlist = jsondata.body.data;
  	        		var str="";
  			for(var i=0;i<memberlist.length;i++){
  				str=str+memberlist[i].username+", ";
  			}
  			document.getElementById(index).innerHTML = str.substring(0,str.length-2);
         	}else{
  			document.getElementById(index).innerHTML = "";
  		}
         }.bind(this),function(){
  	        }.bind(this));
  },
  */
		addAlertGroup: function () {
			this.newAddGroup = true;
			this.newAddMember = false;
		},
		saveAddGroup: function () {
			let data = {};
			data = { "username": __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].username, "type": 1 };
			if (this.groupName === '') {
				__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("请填写报警组名");
			} else {
				this.newAddGroup = false;
				data["class_name"] = __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].trim(this.groupName);
				__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].getData("alertmanage", data, function (jsondata) {
					console.log(jsondata);
					if (jsondata.body.error_code === 22000) {
						__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("报警组添加成功");
						this.$store.dispatch('getAlertemanagelist', { "username": __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].username, "type": 4 });
					} else {
						__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("无操作权限 添加失败");
						console.log(jsondata.body.error_code);
					}
					this.groupName = "";
				}.bind(this), function () {}.bind(this));
			}
		},
		cancelAddGroup: function () {
			this.newAddGroup = false;
		},

		addAlertMember: function () {
			this.newAddGroup = false;
			this.newAddMember = true;
		},

		saveAddMember: function () {
			let data = {};
			data = { "username": __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].username, "type": 1 };
			data["class_id"] = this.alarmList[this.alarmSelected].class_id;
			if (this.memberName === '') {
				__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("请填写用户名");
			} else {
				this.newAddMember = false;
				data["member_name"] = __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].trim(this.memberName);
				console.log(data);
				__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].getData("alertmember", data, function (jsondata) {
					console.log(jsondata);
					if (jsondata.body.error_code === 22000) {
						__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("添加成功");
					} else if (jsondata.body.error_code === 22005) {
						__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("添加失败 该成员不是用户，请添加用户");
						console.log(jsondata.body.error_code);
					} else {
						__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("无操作权限 添加失败");
						console.log(jsondata.body.error_code);
					}
					this.memberName = "";
					this.alarmSelected = 0;
				}.bind(this), function () {}.bind(this));
			}
		},
		cancelAddMember: function () {
			this.newAddMember = false;
		},

		showDialog: function () {
			document.getElementsByClassName("dialog")[0].style.display = "block";
		},

		editAlertGroup: function (name) {
			let id = event.target.getAttribute("data-id");
			let data = { "username": __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].username, "type": 4, "class_id": id, "class_name": name, "isNew": true };
			this.$store.dispatch('getAlertmemberlist', data);
			this.showDialog();
		},

		deleteComfirm: function (event) {
			let _self = this;
			let id = event.currentTarget.getAttribute("data-id");
			let data = { "username": __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].username, "type": 2, "class_id": id };
			let str = '<div class="popCreat" id="deleteLogBox">' + '<h3>确定要删除吗？</h3>' + '<div class="btns"><span class="surebtn" id="surebtn">确定</span><span class="cancelbtn" id="cancelbtn">取消</span></div></div>';
			__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatPop(str);

			let surebtn = document.getElementById("surebtn");
			let cancelbtn = document.getElementById("cancelbtn");

			surebtn.onclick = function () {

				__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].closePop();
				__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].getData("alertmanage", data, function (jsondata) {
					console.log(jsondata);
					if (jsondata.body.error_code === 22000) {
						__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("删除成功");
						_self.$store.dispatch('getAlertemanagelist', { "username": __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].username, "type": 4 });
					} else {
						__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("删除失败");
						console.log(jsondata.body.error_code);
					}
				}.bind(this), function () {}.bind(this));
			};
			cancelbtn.onclick = function () {
				__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].closePop();
			};
		}

	},
	components: {
		DialogsAlertGroup: __WEBPACK_IMPORTED_MODULE_2__dialogs_DialogsAlertGroup_vue___default.a
	}
});

/***/ }),
/* 41 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__dialogs_DialogsCertiGroup_vue__ = __webpack_require__(74);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__dialogs_DialogsCertiGroup_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__dialogs_DialogsCertiGroup_vue__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//





/* harmony default export */ __webpack_exports__["default"] = ({
	name: 'ManageCertiGroup',
	data() {
		return {
			editGetFormData: {}, //编辑时数据
			newAddGroup: false, //是否新建权限组
			groupName: "",
			newAddMember: false, //是否添加权限组成员
			memberName: "",
			certiSelected: 0 };
	},
	computed: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_vuex__["c" /* mapGetters */])({
		certiList: "certificatemanagelist",
		certiclassid: "permissioclassid"
	}),
	watch: {
		certiclassid: function () {
			let id = this.certiclassid;
			for (let i = 0; i < this.certiList.length; i++) {
				let json = this.certiList[i];
				if (id == json.class_id) {
					this.certiSelected = i;
					return false;
				}
			}
		}
	},
	methods: {
		/*
  seeMembers:function(index){
  	let data = {"type":4,"username":vueGetData.username,"class_id":index}
         vueGetData.getData("certificatemember",data,function(jsondata){
         	console.log(jsondata);
          if(jsondata.body.error_code === 22000){
         		let memberlist = jsondata.body.data;
  	        		var str="";
  			for(var i=0;i<memberlist.length;i++){
  				str=str+memberlist[i].username+", ";
  			}
  			document.getElementById(index).innerHTML = str.substring(0,str.length-2);
         	}else{
  			document.getElementById(index).innerHTML = "";
  		}
         }.bind(this),function(){
  	        }.bind(this));
  },
  */
		addCertiGroup: function () {
			this.newAddGroup = true;
			this.newAddMember = false;
		},
		saveAddGroup: function () {
			let data = {};
			data = { "username": __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].username, "type": 1 };
			if (this.groupName === '') {
				__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("请填写权限组名");
			} else {
				this.newAddGroup = false;
				data["class_name"] = __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].trim(this.groupName);
				__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].getData("certificatemanage", data, function (jsondata) {
					console.log(jsondata);
					if (jsondata.body.error_code === 22000) {
						__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("权限组添加成功");
						this.$store.dispatch('getCertificatemanagelist', { "username": __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].username, "type": 4 });
					} else {
						__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("无操作权限 添加失败");
						console.log(jsondata.body.error_code);
					}
					this.groupName = "";
				}.bind(this), function () {}.bind(this));
			}
			var temp = document.getElementsByName("radio");
			console.log(temp);
		},
		cancelAddGroup: function () {
			this.newAddGroup = false;
		},

		addCertiMember: function () {
			this.newAddGroup = false;
			this.newAddMember = true;
		},

		saveAddMember: function () {
			let data = {};
			data = { "username": __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].username, "type": 1 };
			data["class_id"] = this.certiList[this.certiSelected].class_id;
			var temp = document.getElementsByName("isAdmin");
			if (temp[0].checked) {
				data["is_admin"] = 1;
			} else {
				data["is_admin"] = 0;
			}
			if (this.memberName === '') {
				__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("请填写用户名");
			} else {
				this.newAddMember = false;
				data["member_name"] = __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].trim(this.memberName);
				console.log(data);
				__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].getData("certificatemember", data, function (jsondata) {
					console.log(jsondata);
					if (jsondata.body.error_code === 22000) {
						__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("添加成功");
					} else if (jsondata.body.error_code === 22005) {
						__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("添加失败 该成员不是用户，请添加用户  管理类别/用户信息");
						console.log(jsondata.body.error_code);
					} else {
						__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("无操作权限 添加失败");
						console.log(jsondata.body.error_code);
					}
					this.memberName = "";
					this.certiSelected = 0;
				}.bind(this), function () {}.bind(this));
			}
		},
		cancelAddMember: function () {
			this.newAddMember = false;
		},

		showDialog: function () {
			document.getElementsByClassName("dialog")[0].style.display = "block";
		},

		editCertificateGroup: function (name) {
			let id = event.target.getAttribute("data-id");
			let data = { "username": __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].username, "type": 4, "class_id": id, "class_name": name, "isNew": true };
			this.$store.dispatch('getCertificatememberlist', data);
			this.showDialog();
		},

		deleteComfirm: function (event) {
			let _self = this;
			let id = event.currentTarget.getAttribute("data-id");
			let data = { "username": __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].username, "type": 2, "class_id": id };

			let str = '<div class="popCreat" id="deleteLogBox">' + '<h3>确定要删除吗？</h3>' + '<div class="btns"><span class="surebtn" id="surebtn">确定</span><span class="cancelbtn" id="cancelbtn">取消</span></div></div>';
			__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatPop(str);

			let surebtn = document.getElementById("surebtn");
			let cancelbtn = document.getElementById("cancelbtn");

			surebtn.onclick = function () {
				__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].closePop();
				__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].getData("certificatemanage", data, function (jsondata) {
					console.log(jsondata);
					if (jsondata.body.error_code === 22000) {
						__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("删除成功");
						_self.$store.dispatch('getCertificatemanagelist', { "username": __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].username, "type": 4 });
					} else {
						__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("无操作权限 删除失败");
						console.log(jsondata.body.error_code);
					}
				}.bind(this), function () {}.bind(this));
			};
			cancelbtn.onclick = function () {
				__WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].closePop();
			};
		}

	},
	components: {
		DialogsCertiGroup: __WEBPACK_IMPORTED_MODULE_2__dialogs_DialogsCertiGroup_vue___default.a
	}
});

/***/ }),
/* 42 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__dialogs_DialogsAddEles_vue__ = __webpack_require__(71);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__dialogs_DialogsAddEles_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__dialogs_DialogsAddEles_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Js_vueGetData_js__ = __webpack_require__(0);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//





/* harmony default export */ __webpack_exports__["default"] = ({
	name: 'ManageTop',
	data() {
		return {
			topname: '基础配置',
			manageConfigSelectedId: '2',
			editGetFormData: {} //编辑时数据
		};
	},
	computed: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_vuex__["c" /* mapGetters */])({
		productId: "productId",
		tableHttp: "elestableList",
		childHttptabledata: "managequerydata"
	}),
	methods: {
		newAddCase: function () {
			if (!this.productId || this.productId == -1) {
				__WEBPACK_IMPORTED_MODULE_2__Js_vueGetData_js__["a" /* default */].creatTips("请先选择左侧产品线");
				return false;
			}
			this.editGetFormData["oper"] = 1;
			this.showDialog();
		},
		showDialog: function () {
			let data = { "username": __WEBPACK_IMPORTED_MODULE_2__Js_vueGetData_js__["a" /* default */].username, "type": 4 };
			this.$store.dispatch('getCertificatemanagelist', data);
			this.$store.dispatch('getAlertemanagelist', data);
			this.$store.dispatch('getRobotacountlist', data);
			document.getElementsByClassName("dialog")[0].style.display = "block";
		},
		deleteComfirm: function (type, event) {
			let _self = this;
			let ele = event.currentTarget;
			let id = ele.getAttribute("data-id");
			let index = ele.getAttribute("data-index");
			let data = {
				"oper": 2,
				"taskid": id
			};
			let paramsJson = {};
			paramsJson["data"] = data;
			paramsJson["index"] = index;
			paramsJson["type"] = type;

			let str = '<div class="popCreat" id="deleteLogBox">' + '<h3>确定要删除吗？</h3>' + '<div class="btns"><span class="surebtn" id="surebtn">确定</span><span class="cancelbtn" id="cancelbtn">取消</span></div></div>';
			__WEBPACK_IMPORTED_MODULE_2__Js_vueGetData_js__["a" /* default */].creatPop(str);

			let surebtn = document.getElementById("surebtn");
			let cancelbtn = document.getElementById("cancelbtn");

			surebtn.onclick = function () {
				_self.$store.dispatch('deleteManagetableList', paramsJson);
				__WEBPACK_IMPORTED_MODULE_2__Js_vueGetData_js__["a" /* default */].closePop();
			};
			cancelbtn.onclick = function () {
				__WEBPACK_IMPORTED_MODULE_2__Js_vueGetData_js__["a" /* default */].closePop();
			};
		},

		deleteHttp: function (type, event) {
			let ele = event.target;
			let id = ele.getAttribute("data-id");
			let index = ele.getAttribute("data-index");
			let data = {
				"oper": 2,
				"taskid": id
			};
			let paramsJson = {};
			paramsJson["data"] = data;
			paramsJson["index"] = index;
			paramsJson["type"] = type;
			this.$store.dispatch('deleteManagetableList', paramsJson);
		},
		stopHttp: function (event) {
			// alert("确定禁用？");
			let ele = event.target;
			let id = ele.getAttribute("data-id");
			let index = ele.getAttribute("data-index");
			let data = {
				"oper": 3,
				"taskid": id
			};

			let paramsJson = {};
			paramsJson["data"] = data;
			paramsJson["index"] = index;
			paramsJson["type"] = 2;
			this.$store.dispatch('stopManagetableList', paramsJson);
		},
		startHttp: function (event) {
			// alert("确定启用？");
			let ele = event.target;
			let id = ele.getAttribute("data-id");
			let index = ele.getAttribute("data-index");
			let data = {
				"oper": 4,
				"taskid": id
			};

			let paramsJson = {};
			paramsJson["data"] = data;
			paramsJson["index"] = index;
			paramsJson["type"] = 2;
			this.$store.dispatch('startManagetableList', paramsJson);
		},
		editHttp: function (isEdit) {
			let id = event.target.getAttribute("data-id");
			let data = { "taskid": id, "username": __WEBPACK_IMPORTED_MODULE_2__Js_vueGetData_js__["a" /* default */].username };
			this.showDialog();
			__WEBPACK_IMPORTED_MODULE_2__Js_vueGetData_js__["a" /* default */].getData("itemdetail", data, function (jsondata) {
				if (jsondata.body.error_code === 22000) {
					this.editGetFormData = jsondata.body.data;
					this.editGetFormData["oper"] = 5;
					this.editGetFormData["taskid"] = id;
					if (isEdit) {
						this.editGetFormData["edit"] = true;
					} else {
						this.editGetFormData["edit"] = false;
					}
					document.getElementsByClassName("dialog")[0].style.display = "block";
				}
			}.bind(this), function () {}.bind(this));
		}
	},
	mounted: function () {
		this.$store.dispatch('elestableList', this.childHttptabledata);
	},
	components: {
		DialogsAddEles: __WEBPACK_IMPORTED_MODULE_1__dialogs_DialogsAddEles_vue___default.a
	}
});

/***/ }),
/* 43 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__dialogs_DialogsAddDataport_vue__ = __webpack_require__(70);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__dialogs_DialogsAddDataport_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__dialogs_DialogsAddDataport_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Js_vueGetData_js__ = __webpack_require__(0);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//





/* harmony default export */ __webpack_exports__["default"] = ({
	name: 'ManageTop',
	data() {
		return {
			topname: '基础配置',
			manageConfigSelectedId: '1',
			editGetFormData: {} //编辑时数据
		};
	},
	// props: ["httptabledata"],
	computed: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_vuex__["c" /* mapGetters */])({
		productId: "productId",
		tableHttp: "jsconftableList",
		childHttptabledata: "managequerydata"
	}),
	methods: {
		newAddCase: function () {
			if (!this.productId || this.productId == -1) {
				__WEBPACK_IMPORTED_MODULE_2__Js_vueGetData_js__["a" /* default */].creatTips("请先选择左侧产品线");
				return false;
			}
			this.editGetFormData["oper"] = 1;
			this.showDialog();
		},
		showDialog: function () {
			let data = { "username": __WEBPACK_IMPORTED_MODULE_2__Js_vueGetData_js__["a" /* default */].username, "type": 4 };
			this.$store.dispatch('getCertificatemanagelist', data);
			this.$store.dispatch('getAlertemanagelist', data);
			this.$store.dispatch('getRobotacountlist', data);
			document.getElementsByClassName("dialog")[0].style.display = "block";
		},
		deleteComfirm: function (type, event) {
			let _self = this;
			let ele = event.currentTarget;
			let id = ele.getAttribute("data-id");
			let index = ele.getAttribute("data-index");
			let data = {
				"oper": 2,
				"taskid": id
			};
			let paramsJson = {};
			paramsJson["data"] = data;
			paramsJson["index"] = index;
			paramsJson["type"] = type;

			let str = '<div class="popCreat" id="deleteLogBox">' + '<h3>确定要删除吗？</h3>' + '<div class="btns"><span class="surebtn" id="surebtn">确定</span><span class="cancelbtn" id="cancelbtn">取消</span></div></div>';
			__WEBPACK_IMPORTED_MODULE_2__Js_vueGetData_js__["a" /* default */].creatPop(str);

			let surebtn = document.getElementById("surebtn");
			let cancelbtn = document.getElementById("cancelbtn");

			surebtn.onclick = function () {
				_self.$store.dispatch('deleteManagetableList', paramsJson);
				__WEBPACK_IMPORTED_MODULE_2__Js_vueGetData_js__["a" /* default */].closePop();
			};
			cancelbtn.onclick = function () {
				__WEBPACK_IMPORTED_MODULE_2__Js_vueGetData_js__["a" /* default */].closePop();
			};
		},
		deleteHttp: function (type, event) {
			let ele = event.target;
			let id = ele.getAttribute("data-id");
			let index = ele.getAttribute("data-index");
			let data = {
				"oper": 2,
				"taskid": id
			};
			let paramsJson = {};
			paramsJson["data"] = data;
			paramsJson["index"] = index;
			paramsJson["type"] = type;
			this.$store.dispatch('deleteManagetableList', paramsJson);
		},
		stopHttp: function (event) {
			// alert("确定禁用？");
			let ele = event.target;
			let id = ele.getAttribute("data-id");
			let index = ele.getAttribute("data-index");
			let data = {
				"oper": 3,
				"taskid": id
			};

			let paramsJson = {};
			paramsJson["data"] = data;
			paramsJson["index"] = index;
			paramsJson["type"] = 1;
			this.$store.dispatch('stopManagetableList', paramsJson);
		},
		startHttp: function (event) {
			// alert("确定启用？");
			let ele = event.target;
			let id = ele.getAttribute("data-id");
			let index = ele.getAttribute("data-index");
			let data = {
				"oper": 4,
				"taskid": id
			};

			let paramsJson = {};
			paramsJson["data"] = data;
			paramsJson["index"] = index;
			paramsJson["type"] = 1;
			this.$store.dispatch('startManagetableList', paramsJson);
		},
		editHttp: function (isEdit) {
			let id = event.target.getAttribute("data-id");
			let data = { "taskid": id, "username": __WEBPACK_IMPORTED_MODULE_2__Js_vueGetData_js__["a" /* default */].username };
			this.showDialog();
			__WEBPACK_IMPORTED_MODULE_2__Js_vueGetData_js__["a" /* default */].getData("itemdetail", data, function (jsondata) {
				if (jsondata.body.error_code === 22000) {
					this.editGetFormData = jsondata.body.data;
					this.editGetFormData["oper"] = 5;
					this.editGetFormData["taskid"] = id;
					if (isEdit) {
						this.editGetFormData["edit"] = true;
					} else {
						this.editGetFormData["edit"] = false;
					}
					// document.getElementsByClassName("dialog")[0].style.display = "block";
				}
			}.bind(this), function () {}.bind(this));
		}
	},
	mounted: function () {
		this.$store.dispatch('getManagetableList', this.childHttptabledata);
	},
	components: {
		DialogsAddDataport: __WEBPACK_IMPORTED_MODULE_1__dialogs_DialogsAddDataport_vue___default.a
	}
});

/***/ }),
/* 44 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__dialogs_DialogsAddHttp_vue__ = __webpack_require__(72);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__dialogs_DialogsAddHttp_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__dialogs_DialogsAddHttp_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Js_vueGetData_js__ = __webpack_require__(0);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//





/* harmony default export */ __webpack_exports__["default"] = ({
	name: 'ManageTop',
	data() {
		return {
			topname: '基础配置',
			manageConfigSelectedId: '0',
			editGetFormData: {} //编辑时数据
		};
	},
	computed: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_vuex__["c" /* mapGetters */])({
		productId: "productId",
		tableHttp: "httptableList",
		childHttptabledata: "managequerydata"
	}),
	methods: {
		newAddCase: function () {
			if (!this.productId || this.productId == -1) {
				__WEBPACK_IMPORTED_MODULE_2__Js_vueGetData_js__["a" /* default */].creatTips("请先选择左侧产品线");
				return false;
			}
			this.editGetFormData["oper"] = 1;
			this.showDialog();
		},
		showDialog: function () {
			let data = { "username": __WEBPACK_IMPORTED_MODULE_2__Js_vueGetData_js__["a" /* default */].username, "type": 4 };
			this.$store.dispatch('getCertificatemanagelist', data);
			this.$store.dispatch('getAlertemanagelist', data);
			this.$store.dispatch('getRobotacountlist', data);
			document.getElementsByClassName("dialog")[0].style.display = "block";
		},
		deleteComfirm: function (type, event) {
			let _self = this;
			let ele = event.currentTarget;
			let id = ele.getAttribute("data-id");
			let index = ele.getAttribute("data-index");
			let data = {
				"oper": 2,
				"taskid": id
			};
			let paramsJson = {};
			paramsJson["data"] = data;
			paramsJson["index"] = index;
			paramsJson["type"] = type;

			let str = '<div class="popCreat" id="deleteLogBox">' + '<h3>确定要删除吗？</h3>' + '<div class="btns"><span class="surebtn" id="surebtn">确定</span><span class="cancelbtn" id="cancelbtn">取消</span></div></div>';
			__WEBPACK_IMPORTED_MODULE_2__Js_vueGetData_js__["a" /* default */].creatPop(str);

			let surebtn = document.getElementById("surebtn");
			let cancelbtn = document.getElementById("cancelbtn");

			surebtn.onclick = function () {
				console.log(paramsJson);
				_self.$store.dispatch('deleteManagetableList', paramsJson);
				__WEBPACK_IMPORTED_MODULE_2__Js_vueGetData_js__["a" /* default */].closePop();
			};
			cancelbtn.onclick = function () {
				__WEBPACK_IMPORTED_MODULE_2__Js_vueGetData_js__["a" /* default */].closePop();
			};
		},
		deleteHttp: function (type, event) {
			let ele = event.currentTarget;
			let id = ele.getAttribute("data-id");
			let index = ele.getAttribute("data-index");
			let data = {
				"oper": 2,
				"taskid": id
			};
			let paramsJson = {};
			paramsJson["data"] = data;
			paramsJson["index"] = index;
			paramsJson["type"] = type;

			this.$store.dispatch('deleteManagetableList', paramsJson);
		},
		stopHttp: function (event) {
			let ele = event.currentTarget;
			let id = ele.getAttribute("data-id");
			let index = ele.getAttribute("data-index");
			let data = {
				"oper": 3,
				"taskid": id
			};

			let paramsJson = {};
			paramsJson["data"] = data;
			paramsJson["index"] = index;
			paramsJson["type"] = 0;
			this.$store.dispatch('stopManagetableList', paramsJson);
		},
		startHttp: function (event) {
			let ele = event.currentTarget;
			let id = ele.getAttribute("data-id");
			let index = ele.getAttribute("data-index");
			let data = {
				"oper": 4,
				"taskid": id
			};

			let paramsJson = {};
			paramsJson["data"] = data;
			paramsJson["index"] = index;
			paramsJson["type"] = 0;
			this.$store.dispatch('startManagetableList', paramsJson);
		},
		editHttp: function (isEdit) {
			let id = event.currentTarget.getAttribute("data-id");
			let data = { "taskid": id, "username": __WEBPACK_IMPORTED_MODULE_2__Js_vueGetData_js__["a" /* default */].username };
			this.showDialog();
			__WEBPACK_IMPORTED_MODULE_2__Js_vueGetData_js__["a" /* default */].getData("itemdetail", data, function (jsondata) {
				if (jsondata.body.error_code === 22000) {
					this.editGetFormData = jsondata.body.data;
					this.editGetFormData["oper"] = 5;
					this.editGetFormData["taskid"] = id;
					if (isEdit) {
						this.editGetFormData["edit"] = true;
					} else {
						this.editGetFormData["edit"] = false;
					}
					// document.getElementsByClassName("dialog")[0].style.display = "block";
				}
			}.bind(this), function () {}.bind(this));
		}
	},
	mounted: function () {
		this.$store.dispatch('getManagetableList', this.childHttptabledata);
	},
	components: {
		DialogsAddHttp: __WEBPACK_IMPORTED_MODULE_1__dialogs_DialogsAddHttp_vue___default.a
	}
});

/***/ }),
/* 45 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
//
//
//
//
//
//
//

/* harmony default export */ __webpack_exports__["default"] = ({
	name: '',
	data() {
		return {
			datas: {}
		};
	}

});

/***/ }),
/* 46 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__ = __webpack_require__(0);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//




/* harmony default export */ __webpack_exports__["default"] = ({
	name: 'Runlogtable',
	data() {
		return {
			thildRunlogTable: {}
		};
	},
	computed: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_vuex__["c" /* mapGetters */])({
		runloglist: "runloglist",
		runlogquerydata: "runlogquerydata"
	}),
	watch: {
		runloglist: function () {}
	},
	mounted: function () {}
});

/***/ }),
/* 47 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony default export */ __webpack_exports__["a"] = ({
    serializeJSON(jsondata) {
        let str = "";
        for (let k in jsondata) {
            str += '&' + k + '=' + jsondata[k];
        }
        return str;
    },
    addCookie(name, value, iDay) {
        if (iDay) {
            var oDate = new Date();
            oDate.setDate(oDate.getDate() + iDay);
            document.cookie = name + '=' + value + ';path=/;expires=' + oDate.toGMTString();
        } else {
            document.cookie = name + '=' + value + ';path=/';
        }
    },
    getCookie(name) {
        var arr = document.cookie.split('; ');
        for (var i = 0; i < arr.length; i++) {
            var arr2 = arr[i].split('=');
            if (arr2[0] == name) {
                return arr2[1];
            }
        }
        return '';
    },
    removeCookie(name) {
        addCookie(name, 'asdfasdf', -10);
    },
    //两位数
    doublenum: function (n) {
        if (n <= 9) {
            n = "0" + n;
        } else {
            n = "" + n;
        }
        return n;
    }
});

/***/ }),
/* 48 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// export const Apihost = "http://192.168.217.22:8071/monitor/"; //RD
// export const Apihost = "http://192.168.2.93:8071/monitor/"; //QA
const Apihost = "http://monitor.taihenw.com/monitor/";
/* harmony export (immutable) */ __webpack_exports__["a"] = Apihost;
 //线上机器 192.168.4.4 8888
//export const Apihost = "http://192.168.4.4:8888/monitor/"; //线上机器 192.168.4.4 8888
// export let username = "";

/***/ }),
/* 49 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mutation_types_js__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__ = __webpack_require__(0);



//定义变量
const state = {
    alarmlist: [],
    alarAllpage: null,
    alarTableTotal: null,
    runloglist: [],
    runlogAllpage: null,
    runlogTableTotal: null,
    alarmquerydata: {},
    runlogquerydata: {},
    alarmidbatch: ""
};

//事件处理：异步请求、判断、流程控制
const actions = {
    getAlarmquerydata: function ({ commit }, paramsJson) {
        var data = paramsJson;
        commit(__WEBPACK_IMPORTED_MODULE_0__mutation_types_js__["b" /* ALARMQUERYDATA */], data);
    },
    getRunlogquerydata: function ({ commit }, paramsJson) {
        var data = paramsJson;
        commit(__WEBPACK_IMPORTED_MODULE_0__mutation_types_js__["c" /* RUNLOGQUERYDATA */], data);
    },
    // getRunlogquerydata:function({commit},paramsJson){
    //     let data = {};
    //     if(paramsJson.origin){
    //         data = paramsJson.origin
    //         let start = paramsJson.start;
    //         if(start){ //start
    //             data["start"] = start;
    //         }
    //     }else{
    //         data = paramsJson;
    //     }
    //     commit(types.RUNLOGQUERYDATA,data);
    // },
    //获取表格数据
    getAlarmtableList: function ({ commit }, paramsJson) {
        let json = {};
        for (let key in paramsJson) {
            if (!(key == "product_line" && paramsJson[key] == -1)) {
                json[key] = paramsJson[key];
            }
        }
        __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].getData("alertrecord", json, function (jsondata) {
            if (jsondata.body.error_code === 22000) {
                let list = jsondata.body.data;
                let count = parseInt(jsondata.body.count);
                let total = Math.ceil(count / 20);
                commit(__WEBPACK_IMPORTED_MODULE_0__mutation_types_js__["d" /* ALARMLIST */], { list, total, count });
            }
        }, function (err) {
            console.log(err);
        });
    },
    //获取运行记录表格数据
    getRunlogtableList: function ({ commit }, paramsJson) {
        let json = {};
        for (let key in paramsJson) {
            if (!(key == "product_line" && paramsJson[key] == -1)) {
                json[key] = paramsJson[key];
            }
        }
        __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].getData("runrecord", json, function (jsondata) {
            if (jsondata.body.error_code === 22000) {
                let list = jsondata.body.data;
                let count = parseInt(jsondata.body.count);
                let total = Math.ceil(count / 20);
                commit(__WEBPACK_IMPORTED_MODULE_0__mutation_types_js__["e" /* RUNLOGLIST */], { list, total, count });
            }
        }, function (err) {
            console.log(err);
        });
    },
    //开始处理后修改状态
    startDoItem: function ({ commit }, paramsJson) {
        let data = paramsJson.data;
        let index = paramsJson.index;
        __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].postData("alertrecord", data, function (jsondata) {
            if (jsondata.body.error_code === 22000) {
                commit(__WEBPACK_IMPORTED_MODULE_0__mutation_types_js__["f" /* UPDATEALARMINDEX */], index);
            }
        }, function (err) {
            console.log(err);
        });
    },
    //开始处理后修改状态
    startDoItemsBatch: function ({ commit }, paramsJson) {
        let data = paramsJson.data;
        let indexs = paramsJson.indexs;
        __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].postData("alertrecord", data, function (jsondata) {
            if (jsondata.body.error_code === 22000) {
                commit(__WEBPACK_IMPORTED_MODULE_0__mutation_types_js__["g" /* UPDATEALARMINDEXSBATCH */], indexs);
            }
        }, function (err) {
            console.log(err);
        });
    },
    //获取批量完成处理id
    getAlarmIdBatch: function ({ commit }, paramsJson) {
        var data = paramsJson;
        console.log(data);
        commit(__WEBPACK_IMPORTED_MODULE_0__mutation_types_js__["h" /* ALARMIDBATCH */], data);
    }

};
//处理状态、数据的变化
const mutations = {
    [__WEBPACK_IMPORTED_MODULE_0__mutation_types_js__["d" /* ALARMLIST */]](state, params) {
        state.alarmlist = params.list;
        state.alarAllpage = params.total;
        state.alarTableTotal = params.count;
    },
    [__WEBPACK_IMPORTED_MODULE_0__mutation_types_js__["e" /* RUNLOGLIST */]](state, params) {
        state.runloglist = params.list;
        state.runlogAllpage = params.total;
        state.runlogTableTotal = params.count;
    },
    [__WEBPACK_IMPORTED_MODULE_0__mutation_types_js__["b" /* ALARMQUERYDATA */]](state, data) {
        state.alarmquerydata = data;
    },
    [__WEBPACK_IMPORTED_MODULE_0__mutation_types_js__["c" /* RUNLOGQUERYDATA */]](state, data) {
        state.runlogquerydata = data;
    },
    [__WEBPACK_IMPORTED_MODULE_0__mutation_types_js__["f" /* UPDATEALARMINDEX */]](state, index) {
        let a = state.alarmlist[index];
        a.process_status = 1;
        state.alarmlist.splice(index, 1, a);
    },
    [__WEBPACK_IMPORTED_MODULE_0__mutation_types_js__["g" /* UPDATEALARMINDEXSBATCH */]](state, indexs) {
        for (var i = 0; i < indexs.length; i++) {
            let a = state.alarmlist[indexs[i]];
            a.process_status = 1;
            state.alarmlist.splice(indexs[i], 1, a);
        }
    },
    [__WEBPACK_IMPORTED_MODULE_0__mutation_types_js__["h" /* ALARMIDBATCH */]](state, data) {
        state.alarmidbatch = data;
    }

};

//导出数据
const getters = {
    alarmlist(state) {
        return state.alarmlist;
    },
    alarAllpage(state) {
        return state.alarAllpage;
    },
    alarTableTotal(state) {
        return state.alarTableTotal;
    },

    runloglist(state) {
        return state.runloglist;
    },
    runlogAllpage(state) {
        return state.runlogAllpage;
    },
    runlogTableTotal(state) {
        return state.runlogTableTotal;
    },

    alarmquerydata(state) {
        return state.alarmquerydata;
    },
    runlogquerydata(state) {
        return state.runlogquerydata;
    },
    alarmidbatch(state) {
        return state.alarmidbatch;
    }
};

/* harmony default export */ __webpack_exports__["a"] = ({
    state,
    actions,
    mutations,
    getters
});

/***/ }),
/* 50 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mutation_types_js__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__ = __webpack_require__(0);



//定义变量
const state = {
    managequerydata: {},
    httptableList: [],
    jsconftableList: [],
    elestableList: [],
    //////////////////////////////
    userinfolist: [],

    certificatemanagelist: [],
    permissioclassid: "",
    certificatememberlist: {},
    ////////////////////////////
    alertmanagelist: [],
    alertclassid: "",
    alertmemberlist: {},
    /////////////////////////////
    robotacountlist: [],
    robotacountid: "",
    allpage: 0,
    tableTotal: null
};

//事件处理：异步请求、判断、流程控制
const actions = {
    getManagequerydata: function ({ commit }, paramsJson) {
        var data = paramsJson;
        commit(__WEBPACK_IMPORTED_MODULE_0__mutation_types_js__["i" /* MANAGEQUERYDATA */], data);
    },
    //获取表格数据
    getManagetableList: function ({ commit }, paramsJson) {
        let type = paramsJson.type;
        let json = {};
        for (let key in paramsJson) {
            if (!(key == "product_line" && paramsJson[key] == -1)) {
                json[key] = paramsJson[key];
            }
        }
        __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].getData("itemshow", json, function (jsondata) {
            if (jsondata.body.error_code === 22000) {
                let list = jsondata.body.data;
                let count = parseInt(jsondata.body.count);
                let total = Math.ceil(count / 20);
                if (type == 0) {
                    commit(__WEBPACK_IMPORTED_MODULE_0__mutation_types_js__["j" /* HTTPTABLELIST */], { list, total, count });
                } else if (type == 1) {
                    console.log("type=1");
                    commit(__WEBPACK_IMPORTED_MODULE_0__mutation_types_js__["k" /* JSCONFTABLELIST */], { list, total, count });
                } else if (type == 2) {
                    commit(__WEBPACK_IMPORTED_MODULE_0__mutation_types_js__["l" /* ELESTABLELIST */], { list, total, count });
                }
            }
        }, function (err) {
            console.log(err);
        });
    },
    //删除某一项
    deleteManagetableList: function ({ commit }, paramsJson) {
        let data = paramsJson.data;
        let index = paramsJson.index;
        let type = paramsJson.type;
        __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].postData("itemmodify", data, function (jsondata) {
            if (jsondata.body.error_code === 22000) {
                if (type == 0) {
                    commit(__WEBPACK_IMPORTED_MODULE_0__mutation_types_js__["m" /* HTTPDELETEINDEX */], index);
                } else if (type == 1) {
                    commit(__WEBPACK_IMPORTED_MODULE_0__mutation_types_js__["n" /* JSCONFDELETEINDEX */], index);
                } else if (type == 2) {
                    commit(__WEBPACK_IMPORTED_MODULE_0__mutation_types_js__["o" /* ELESDELETEINDEX */], index);
                }
            }
        }, function (err) {
            console.log(err);
        });
    },
    //启用某一项
    startManagetableList: function ({ commit }, paramsJson) {
        let data = paramsJson.data;
        let index = paramsJson.index;
        let type = paramsJson.type;
        __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].postData("itemmodify", data, function (jsondata) {
            if (jsondata.body.error_code === 22000) {
                if (type == 0) {
                    commit(__WEBPACK_IMPORTED_MODULE_0__mutation_types_js__["p" /* HTTPSTARTINDEX */], index);
                } else if (type == 1) {
                    commit(__WEBPACK_IMPORTED_MODULE_0__mutation_types_js__["q" /* JSCONFSTARTINDEX */], index);
                } else if (type == 2) {
                    commit(__WEBPACK_IMPORTED_MODULE_0__mutation_types_js__["r" /* ELESSTARTINDEX */], index);
                }
                __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("启用成功");
            } else if (jsondata.body.error_code === 22001) {
                __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].creatTips("系统错误请联系管理员查看问题");
            }
        }, function (err) {
            console.log(err);
        });
    },
    //禁用某一项
    stopManagetableList: function ({ commit }, paramsJson) {
        let data = paramsJson.data;
        let index = paramsJson.index;
        let type = paramsJson.type;
        __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].postData("itemmodify", data, function (jsondata) {
            if (jsondata.body.error_code === 22000) {
                if (type == 0) {
                    commit(__WEBPACK_IMPORTED_MODULE_0__mutation_types_js__["s" /* HTTPSTOPINDEX */], index);
                } else if (type == 1) {
                    commit(__WEBPACK_IMPORTED_MODULE_0__mutation_types_js__["t" /* JSCONFSTOPINDEX */], index);
                } else if (type == 2) {
                    commit(__WEBPACK_IMPORTED_MODULE_0__mutation_types_js__["u" /* ELESSTOPINDEX */], index);
                }
            }
        }, function (err) {
            console.log(err);
        });
    },
    ////////////////////////////////////////////////////////////////////
    getUserinfolist: function ({ commit }, paramsJson) {
        __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].getData("userinfo", paramsJson, function (jsondata) {
            if (jsondata.body.error_code === 22000) {
                let list = jsondata.body.data;
                commit(__WEBPACK_IMPORTED_MODULE_0__mutation_types_js__["v" /* USERINFOLIST */], list);
            }
        }, function (err) {
            console.log(err);
        });
    },
    //获取权限组
    getCertificatemanagelist: function ({ commit }, paramsJson) {
        __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].getData("certificatemanage", paramsJson, function (jsondata) {
            if (jsondata.body.error_code === 22000) {
                let list = jsondata.body.data;
                commit(__WEBPACK_IMPORTED_MODULE_0__mutation_types_js__["w" /* CERTIFICATEMANAGELIST */], list);
            }
        }, function (err) {
            console.log(err);
        });
    },
    getCertificatememberlist: function ({ commit }, paramsJson) {
        __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].getData("certificatemember", paramsJson, function (jsondata) {
            let data = {};
            if (jsondata.body.error_code === 22000) {
                data = jsondata.body;
                data.class_name = paramsJson.class_name;
                data.class_id = paramsJson.class_id;
            } else if (jsondata.body.error_code === 22001) {
                data.class_name = paramsJson.class_name;
                data.class_id = paramsJson.class_id;
            }
            commit(__WEBPACK_IMPORTED_MODULE_0__mutation_types_js__["x" /* CERTIFICATEMEMBERLIST */], data);
        }, function (err) {
            console.log(err);
        });
    },
    //////////////////////////////////////////////////////////////////
    //获取报警组
    getAlertemanagelist: function ({ commit }, paramsJson) {
        __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].getData("alertmanage", paramsJson, function (jsondata) {
            if (jsondata.body.error_code === 22000) {
                let list = jsondata.body.data;
                commit(__WEBPACK_IMPORTED_MODULE_0__mutation_types_js__["y" /* ALERTMANAGELIST */], list);
            }
        }, function (err) {
            console.log(err);
        });
    },

    //获取报警组成员列表
    getAlertmemberlist: function ({ commit }, paramsJson) {
        __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].getData("alertmember", paramsJson, function (jsondata) {
            let data = {};
            if (jsondata.body.error_code === 22000) {
                data = jsondata.body;
                data.class_name = paramsJson.class_name;
                data.class_id = paramsJson.class_id;
            } else if (jsondata.body.error_code === 22001) {
                data.class_name = paramsJson.class_name;
                data.class_id = paramsJson.class_id;
            }
            commit(__WEBPACK_IMPORTED_MODULE_0__mutation_types_js__["z" /* ALERTMEMBERLIST */], data);
        }, function (err) {
            console.log(err);
        });
    },
    ///////////////////////////////////////////////////////////////////
    //获取虚拟用户列表
    getRobotacountlist: function ({ commit }, paramsJson) {
        __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].getData("robotacount", paramsJson, function (jsondata) {
            if (jsondata.body.error_code === 22000) {
                let list = jsondata.body.data;
                commit(__WEBPACK_IMPORTED_MODULE_0__mutation_types_js__["A" /* ROBOTACOUNTLIST */], list);
            }
        }, function (err) {
            console.log(err);
        });
    }
};
//处理状态、数据的变化
const mutations = {
    [__WEBPACK_IMPORTED_MODULE_0__mutation_types_js__["j" /* HTTPTABLELIST */]](state, params) {
        state.httptableList = params.list;
        state.allpage = params.total;
        state.tableTotal = params.count;
    },
    [__WEBPACK_IMPORTED_MODULE_0__mutation_types_js__["k" /* JSCONFTABLELIST */]](state, params) {
        state.jsconftableList = params.list;
        state.allpage = params.total;
        state.tableTotal = params.count;
    },
    [__WEBPACK_IMPORTED_MODULE_0__mutation_types_js__["l" /* ELESTABLELIST */]](state, params) {
        state.elestableList = params.list;
        state.allpage = params.total;
        state.tableTotal = params.count;
    },

    [__WEBPACK_IMPORTED_MODULE_0__mutation_types_js__["m" /* HTTPDELETEINDEX */]](state, index) {
        state.httptableList.splice(index, 1);
    },
    [__WEBPACK_IMPORTED_MODULE_0__mutation_types_js__["n" /* JSCONFDELETEINDEX */]](state, index) {
        state.jsconftableList.splice(index, 1);
    },
    [__WEBPACK_IMPORTED_MODULE_0__mutation_types_js__["o" /* ELESDELETEINDEX */]](state, index) {
        state.elestableList.splice(index, 1);
    },

    [__WEBPACK_IMPORTED_MODULE_0__mutation_types_js__["p" /* HTTPSTARTINDEX */]](state, index) {
        state.httptableList[index].status = 2;
    },
    [__WEBPACK_IMPORTED_MODULE_0__mutation_types_js__["q" /* JSCONFSTARTINDEX */]](state, index) {
        state.jsconftableList[index].status = 2;
    },
    [__WEBPACK_IMPORTED_MODULE_0__mutation_types_js__["r" /* ELESSTARTINDEX */]](state, index) {
        state.elestableList[index].status = 2;
    },

    [__WEBPACK_IMPORTED_MODULE_0__mutation_types_js__["s" /* HTTPSTOPINDEX */]](state, index) {
        state.httptableList[index].status = 1;
    },
    [__WEBPACK_IMPORTED_MODULE_0__mutation_types_js__["t" /* JSCONFSTOPINDEX */]](state, index) {
        state.jsconftableList[index].status = 1;
    },
    [__WEBPACK_IMPORTED_MODULE_0__mutation_types_js__["u" /* ELESSTOPINDEX */]](state, index) {
        state.elestableList[index].status = 1;
    },
    /////////////////////////////////////////////////////
    [__WEBPACK_IMPORTED_MODULE_0__mutation_types_js__["v" /* USERINFOLIST */]](state, list) {
        state.userinfolist = list;
    },
    [__WEBPACK_IMPORTED_MODULE_0__mutation_types_js__["w" /* CERTIFICATEMANAGELIST */]](state, list) {
        state.certificatemanagelist = list;
        if (list.length > 0) {
            // state.permissioclassid = list[0].class_name;
            state.permissioclassid = list[0].class_id;
        }
    },
    [__WEBPACK_IMPORTED_MODULE_0__mutation_types_js__["x" /* CERTIFICATEMEMBERLIST */]](state, data) {
        state.certificatememberlist = data;
    },
    ///////////////////////////////////////////////////
    [__WEBPACK_IMPORTED_MODULE_0__mutation_types_js__["y" /* ALERTMANAGELIST */]](state, list) {
        state.alertmanagelist = list;
        if (list.length > 0) {
            // state.alertclassid = list[0].class_name;
            state.alertclassid = list[0].class_id;
        }
    },
    [__WEBPACK_IMPORTED_MODULE_0__mutation_types_js__["z" /* ALERTMEMBERLIST */]](state, data) {
        state.alertmemberlist = data;
    },

    /////////////////////////////////////////////////
    [__WEBPACK_IMPORTED_MODULE_0__mutation_types_js__["A" /* ROBOTACOUNTLIST */]](state, list) {
        state.robotacountlist = list;
        if (list.length > 0) {
            state.robotacountid = list[0].acount_name;
        }
    },

    [__WEBPACK_IMPORTED_MODULE_0__mutation_types_js__["i" /* MANAGEQUERYDATA */]](state, data) {
        state.managequerydata = data;
    }
};

//导出数据
const getters = {
    httptableList(state) {
        return state.httptableList;
    },
    jsconftableList(state) {
        return state.jsconftableList;
    },
    elestableList(state) {
        return state.elestableList;
    },
    ///////////////////////////////////////////
    userinfolist(state) {
        return state.userinfolist;
    },
    certificatemanagelist(state) {
        return state.certificatemanagelist;
    },
    permissioclassid(state) {
        return state.permissioclassid;
    },
    certificatememberlist(state) {
        return state.certificatememberlist;
    },
    //////////////////////////////////////////
    alertmanagelist(state) {
        return state.alertmanagelist;
    },
    alertclassid(state) {
        return state.alertclassid;
    },

    alertmemberlist(state) {
        return state.alertmemberlist;
    },

    //////////////////////////////////////////
    robotacountlist(state) {
        return state.robotacountlist;
    },
    robotacountid(state) {
        return state.robotacountid;
    },
    managequerydata(state) {
        return state.managequerydata;
    },
    allpage(state) {
        return state.allpage;
    },
    tableTotal(state) {
        return state.tableTotal;
    }
};

/* harmony default export */ __webpack_exports__["a"] = ({
    state,
    actions,
    mutations,
    getters
});

/***/ }),
/* 51 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mutation_types_js__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__ = __webpack_require__(0);



//定义变量
const state = {
    lineslist: [],
    productId: null
};

//事件处理：异步请求、判断、流程控制
const actions = {
    getLines: function ({ commit }, paramsJson) {
        __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__["a" /* default */].getData("productline", paramsJson, function (jsondata) {
            if (jsondata.body.error_code === 22000) {
                let list = jsondata.body.data;
                commit(__WEBPACK_IMPORTED_MODULE_0__mutation_types_js__["a" /* GETLINELIST */], list); //将commit中指定的名称放在mutation-types中定义
            }
        }, function (err) {
            console.log(err);
        });
    },
    pushProductId: function ({ commit }, paramsJson) {
        let id = paramsJson.id;
        commit(__WEBPACK_IMPORTED_MODULE_0__mutation_types_js__["B" /* PRODUCTID */], id);
    }
};
//处理状态、数据的变化
const mutations = {
    [__WEBPACK_IMPORTED_MODULE_0__mutation_types_js__["a" /* GETLINELIST */]](state, list) {
        //GETLINELISTT是变量 需使用[]
        state.lineslist = list;
    },
    [__WEBPACK_IMPORTED_MODULE_0__mutation_types_js__["B" /* PRODUCTID */]](state, id) {
        state.productId = id;
    }
};

//导出数据
const getters = {
    lineslist(state) {
        return state.lineslist;
    },
    productId(state) {
        return state.productId;
    }
};

/* harmony default export */ __webpack_exports__["a"] = ({
    state,
    actions,
    mutations,
    getters
});

/***/ }),
/* 52 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mutation_types_js__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Js_vueGetData_js__ = __webpack_require__(0);



//定义变量
const state = {
    pagesConfig: {
        totalpages: null,
        index: null
    }
};

//事件处理：异步请求、判断、流程控制
const actions = {
    getTotal: function ({ commit }, paramsJson) {
        commit(__WEBPACK_IMPORTED_MODULE_0__mutation_types_js__["a" /* GETLINELIST */], list); //将commit中指定的名称放在mutation-types中定义
    }
};
//处理状态、数据的变化
const mutations = {
    [__WEBPACK_IMPORTED_MODULE_0__mutation_types_js__["a" /* GETLINELIST */]](state, list) {
        //GETLINELISTT是变量 需使用[]
        state.lineslist = list;
    }
};

//导出数据
const getters = {
    totalpages(state) {
        return state.pagesConfig;
    }
};

/* harmony default export */ __webpack_exports__["a"] = ({
    state,
    actions,
    mutations,
    getters
});

/***/ }),
/* 53 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_vue_router__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_vue_resource__ = __webpack_require__(18);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_vuex__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__Components_App_vue__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__Components_App_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4__Components_App_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__router_config_js__ = __webpack_require__(16);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__Store_store_js__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_jquery__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_jquery___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_jquery__);









__WEBPACK_IMPORTED_MODULE_0_vue___default.a.use(__WEBPACK_IMPORTED_MODULE_1_vue_router__["a" /* default */]);
__WEBPACK_IMPORTED_MODULE_0_vue___default.a.use(__WEBPACK_IMPORTED_MODULE_2_vue_resource__["a" /* default */]);
__WEBPACK_IMPORTED_MODULE_0_vue___default.a.use(__WEBPACK_IMPORTED_MODULE_3_vuex__["a" /* default */]);

const router = new __WEBPACK_IMPORTED_MODULE_1_vue_router__["a" /* default */](__WEBPACK_IMPORTED_MODULE_5__router_config_js__["a" /* default */]);

// require('./Js/onload.js')

new __WEBPACK_IMPORTED_MODULE_0_vue___default.a({
	router,
	store: __WEBPACK_IMPORTED_MODULE_6__Store_store_js__["a" /* default */],
	el: "#app",
	render: h => h(__WEBPACK_IMPORTED_MODULE_4__Components_App_vue___default.a)
});

/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)();
// imports


// module
exports.push([module.i, ".subDivContent{font-size:14px}.validtime{width:200px!important}", ""]);

// exports


/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)();
// imports


// module
exports.push([module.i, ".SideRight[data-v-0a8cddf0]{width:100%;min-height:100px;overflow-y:auto}.SideRight .manage-main[data-v-0a8cddf0]{background:#fff;border-left:1px solid #ccc;padding-bottom:50px}.topbox select.manage-select[data-v-0a8cddf0]{width:20%;background-position:95%}.topbox select.red-input[data-v-0a8cddf0]{border:1px solid red;color:red}.topbox select.red-input option[data-v-0a8cddf0]{color:#000}.topbox input.manage-input[data-v-0a8cddf0]{width:20%}.topbox .input-idbox input[type=number][data-v-0a8cddf0]{-moz-appearance:textfield}.topbox .input-idbox input[type=number][data-v-0a8cddf0]::-webkit-inner-spin-button,.topbox .input-idbox input[type=number][data-v-0a8cddf0]::-webkit-outer-spin-button{-webkit-appearance:none!important;margin:0}.topbox .box .subbox[data-v-0a8cddf0]{display:inline-block;width:auto;font-size:0}.topbox .box button[data-v-0a8cddf0]{font-size:13px;display:inline-block;margin-right:10px;padding:0 20px}.topbox .box button.blue-button[data-v-0a8cddf0]{boder:none}.manageTop[data-v-0a8cddf0]{height:50px;line-height:50px;padding:0 20px;background:#f9f9f9}.manageTop label[data-v-0a8cddf0]{font-size:13px}.manageTop .nowrap label[data-v-0a8cddf0]{min-width:68px}.searchDetail[data-v-0a8cddf0]{padding:5px 20px;background:#f9f9f9}.configList[data-v-0a8cddf0]{margin:20px}.configList a[data-v-0a8cddf0]{color:#4085f4}.configList .button-area button[data-v-0a8cddf0]{margin-right:10px}.configList table a[data-v-0a8cddf0]{margin:0 2px}.SideRight[data-v-0a8cddf0]{padding-left:200px}", ""]);

// exports


/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)();
// imports


// module
exports.push([module.i, ".alarminfobox{padding:10px 0 60px}.alarminfobox .infoitembox{padding:20px 10px 0 50px;width:1100px;line-height:30px;overflow:hidden}.alarminfobox .infoitembox .itemtitle{float:left;display:inline-block;font-size:13px;width:120px}.alarminfobox .infoitembox .itemtext{float:right;font-size:13px;word-break:break-all;width:920px}.alarminfobox .infoitembox .itemtext textarea{width:100%;height:150px;line-height:30px;border:1px solid #bbb}.alarminfobox .infoitembox .itemtext select{width:200px;background:url(/dist/Image/select-icon.png) no-repeat scroll 175px transparent;margin-left:0}.alarminfobox .infoitembox .itemtext input{margin-left:0}.alarminfobox .infoitembox .itemtext .inputtextarea{height:100px;resize:vertical}.alarminfobox .infoitembox .itemtext.buttons{padding-left:140px}.alarminfobox .infoitembox .itemtext.buttons .dialog-blue-button{margin-right:20px}", ""]);

// exports


/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)();
// imports


// module
exports.push([module.i, ".dialogSubDiv div .info-label{width:100%;margin:0;font-size:13px;line-height:40px}.dialogSubDiv div .info-label span.lebel-sm{padding:3px 6px}.dialogSubDiv div .info-label span.lebel-sm label{width:30px!important}", ""]);

// exports


/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)();
// imports


// module
exports.push([module.i, ".productlinebox{padding:10px 20px 60px;position:relative;background:#fff}.productlinebox .infoitembox{padding:20px 40px 0 10px;width:1100px;line-height:30px;overflow:hidden;position:relative}.productlinebox .infoitembox .itemtitle{float:left;display:inline-block;font-size:13px;width:80px}.productlinebox .infoitembox .itemsubtitle{width:35px;font-size:13px;display:inline-block;vertical-align:top;position:relative}.productlinebox .infoitembox .itemtext{float:left;font-size:13px;word-break:break-all;width:920px}.productlinebox .infoitembox .itemtext textarea{width:100%;height:150px;line-height:30px;border:1px solid #bbb}.productlinebox .infoitembox .itemtext select{width:200px;background:url(/dist/Image/select-icon.png) no-repeat scroll 175px transparent;margin-left:0}.productlinebox .infoitembox .itemtext input{margin-left:0}.productlinebox .infoitembox .itemtext .inputtextarea{height:100px;resize:vertical}.productlinebox .infoitembox .itemtext.buttons{padding-left:140px}.productlinebox .infoitembox .itemtext.buttons .dialog-blue-button{margin-right:20px}.productlinebox .requiredItem:before{content:\"*\";position:absolute;right:0;top:2px;color:red;font-size:14px}", ""]);

// exports


/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)();
// imports


// module
exports.push([module.i, ".sideLeft{position:absolute;top:68px;left:0;width:200px;min-height:500px;border:1px solid #ccc;border-left-color:#ccc;border-right:none;background:#f9f9f9;border-top:none;border-bottom:none;overflow-y:auto}.sideLeft h3{padding-left:20px;height:50px;line-height:50px;border-bottom:1px solid #bbb;font-size:16px}.sideLeft .searchbox{position:relative;padding-right:20px;height:40px}.sideLeft .searchbox #tree-search{float:left;height:40px;line-height:40px;width:160px;border:none;color:#333;background:none}.sideLeft .searchbox #ztree-search-button{position:absolute;top:10px;right:18px;width:20px;height:20px;background:url(\"/dist/Image/search.png\") no-repeat;background-size:20px;cursor:pointer}.sideLeft .treeWrap{width:100%;overflow:hidden}.sideLeft .treeWrap .treeName{overflow:hidden;padding:10px 0;margin:0 20px 0 10px;position:relative}.sideLeft .treeWrap .treeName i{position:absolute;top:10px;left:10px}.sideLeft .treeWrap .treeName a{display:inline-block;padding-left:30px;font-size:16px}.sideLeft .treeWrap .treeName.triangleR i{width:0;height:0;border-top:7px solid transparent;border-bottom:7px solid transparent;border-left:7px solid #4085f4;margin-right:7px;margin-top:2px}.sideLeft .treeWrap .treeName.triangleR a{color:#4085f4}.sideLeft .treeWrap .treeName.triangleD i{width:0;height:0;border-left:7px solid transparent;border-right:7px solid transparent;border-top:7px solid #333;margin-right:7px;margin-top:7px}.sideLeft .treeWrap .treelist{line-height:30px}.sideLeft .treeWrap .treelist li{padding-left:35px;height:30px}.sideLeft .treeWrap .treelist li.cur{background:rgba(64,133,244,.3)}.sideLeft .treeWrap .treelist li.cur a{color:#4085f4}", ""]);

// exports


/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)();
// imports


// module
exports.push([module.i, ".showmember{line-height:25px;padding:10px;overflow:hidden;vertical-align:middle;word-break:break-all;white-space:normal}.requiredItem:before{content:\"*\";position:absolute;right:0;top:2px;color:red;font-size:14px}", ""]);

// exports


/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)();
// imports


// module
exports.push([module.i, ".alarminfobox{padding:10px 0 60px}.alarminfobox .infoitembox{padding:20px 10px 0 50px;width:1100px;line-height:30px;overflow:hidden}.alarminfobox .infoitembox .itemtitle{float:left;display:inline-block;font-size:13px;width:120px}.alarminfobox .infoitembox .itemtext{float:right;font-size:13px;word-break:break-all;width:920px}.alarminfobox .infoitembox .itemtext textarea{width:100%;height:150px;line-height:30px;border:1px solid #bbb}.alarminfobox .infoitembox .itemtext select{width:200px;background:url(/dist/Image/select-icon.png) no-repeat scroll 175px transparent;margin-left:0}.alarminfobox .infoitembox .itemtext input{margin-left:0}.alarminfobox .infoitembox .itemtext .inputtextarea{height:100px;resize:vertical}.alarminfobox .infoitembox .itemtext.buttons{padding-left:140px}.alarminfobox .infoitembox .itemtext.buttons .dialog-blue-button{margin-right:20px}", ""]);

// exports


/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)();
// imports


// module
exports.push([module.i, ".header{height:68px;background:#0e4fb5;width:100%;z-index:200;position:relative;opacity:.95}.header.header-noborder{box-shadow:0 0 0 #e5e5e5;border-bottom:0}.header .logo{display:block;width:247px;height:68px;float:left;background-image:url(/dist/Image/logo.png);background-repeat:no-repeat;background-size:contain;background-position-y:10px}.header-container{width:97%;margin:0 auto}.user-info{font-size:13px;position:relative;float:right;min-width:100px}.user-info .username,.user-info .username>span{display:inline-block;vertical-align:middle}.user-info .username>span{width:100px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;line-height:68px;color:#ccc;cursor:pointer;padding-right:20px;background:url(/dist/Image/down_triangle.png) no-repeat;background-position:100%;font-size:14px}.user-info .username:hover>span{background:url(/dist/Image/up_triangle.png) no-repeat;background-position:100%}.user-info a{vertical-align:middle;color:#ccc}.nav-list{float:right;display:inline-block;margin-right:40px}.nav-list>li{float:left;line-height:68px;width:100px;text-align:center}.nav-list>li:hover{background:rgba(0,0,0,.05)}.nav-list li a{color:#fff;display:block;font-size:15px}.nav-list li a.router-link-active{background:rgba(0,0,0,.1)}.nav-list>span{float:left;line-height:65px;width:5px;text-align:center;color:#fff;font-size:18px;font-weight:700}.sub-nav{position:absolute;z-index:10;padding:10px 0;border:1px solid #ccc;display:none;border-top:0;box-sizing:border-box;min-width:100px;background:#fff}.sub-nav li>a{display:block;line-height:30px;text-align:left;padding:0 20px;color:#333;font-size:13px}.sub-nav li>a:hover{background:#ecf3fe;color:#4085f4}.nav-list>li:hover .sub-nav,.username:hover .sub-nav{display:block}", ""]);

// exports


/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)();
// imports


// module
exports.push([module.i, ".alarminfobox{padding:0 0 60px;position:relative}.alarminfobox .infoitembox{padding:20px 40px 0 10px;width:1100px;line-height:30px;overflow:hidden;position:relative}.alarminfobox .infoitembox .itemtitle{float:left;display:inline-block;font-size:13px;width:80px}.alarminfobox .infoitembox .itemsubtitle{width:50px;font-size:13px;display:inline-block;vertical-align:top;position:relative}.alarminfobox .infoitembox .itemtext{float:left;font-size:13px;word-break:break-all;width:920px}.alarminfobox .infoitembox .itemtext textarea{width:100%;height:150px;line-height:30px;border:1px solid #bbb}.alarminfobox .infoitembox .itemtext select{width:200px;background:url(/dist/Image/select-icon.png) no-repeat scroll 175px transparent;margin-left:0}.alarminfobox .infoitembox .itemtext input{margin-left:0}.alarminfobox .infoitembox .itemtext .inputtextarea{height:100px;resize:vertical}.alarminfobox .infoitembox .itemtext.buttons{padding-left:140px}.alarminfobox .infoitembox .itemtext.buttons .dialog-blue-button{margin-right:20px}.alarminfobox .requiredItem:before{content:\"*\";position:absolute;right:0;top:2px;color:red;font-size:14px}", ""]);

// exports


/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)();
// imports


// module
exports.push([module.i, ".SideRight{width:100%;min-height:100px;overflow-y:auto}.SideRight .manage-main{background:#fff;border-left:1px solid #ccc;padding-bottom:50px}.topbox select.manage-select{width:20%;background-position:95%}.topbox select.red-input{border:1px solid red;color:red}.topbox select.red-input option{color:#000}.topbox input.manage-input{width:20%}.topbox .input-idbox input[type=number]{-moz-appearance:textfield}.topbox .input-idbox input[type=number]::-webkit-inner-spin-button,.topbox .input-idbox input[type=number]::-webkit-outer-spin-button{-webkit-appearance:none!important;margin:0}.topbox .box .subbox{display:inline-block;width:auto;font-size:0}.topbox .box button{font-size:13px;display:inline-block;margin-right:10px;padding:0 20px}.topbox .box button.blue-button{boder:none}.manageTop{height:50px;line-height:50px;padding:0 20px;background:#f9f9f9}.manageTop label{font-size:13px}.manageTop .nowrap label{min-width:68px}.searchDetail{padding:5px 20px;background:#f9f9f9}.configList{margin:20px}.configList a{color:#4085f4}.configList .button-area button{margin-right:10px}.configList table a{margin:0 2px}", ""]);

// exports


/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)();
// imports


// module
exports.push([module.i, ".showmember{line-height:25px;padding:10px;overflow:hidden;vertical-align:middle;word-break:break-all;white-space:normal}.requiredItem:before{content:\"*\";position:absolute;right:0;top:2px;color:red;font-size:14px}", ""]);

// exports


/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)();
// imports
exports.i(__webpack_require__(67), "");

// module
exports.push([module.i, "html{color:#535353;background:#fff;cursor:default}blockquote,body,dd,div,dl,dt,fieldset,form,h1,h2,h3,h4,h5,h6,input,li,ol,p,pre,table,td,textarea,th,ul{padding:0;margin:0}fieldset,img{border:0}address,b,caption,cite,code,dfn,em,i,strong,th,var{font-weight:400;font-style:normal}del,ins{text-decoration:none}ol,ul{list-style:none}caption,th{text-align:left}q:after,q:before{content:\"\"}h1,h2,h3,h4,h5,h6{font-weight:400;font-size:100%}button,input,optgroup,option,select,textarea{font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit}button,input,select,textarea{*font-size:100%}body{font:12px/1.231 \\\\5FAE\\8F6F\\96C5\\9ED1,arial,\\\\5B8B\\4F53,helvetica,clean,\"sans-serif\"}button,input,select,textarea{font:\"\\5FAE\\8F6F\\96C5\\9ED1\",\"arial\",\"\\5B8B\\4F53\",\"helvetica\",\"clean\",\"sans-serif\"}table{font-size:inherit;font:100%}body{font-family:Helvetica Neue,Helvetica,PingFang SC,Hiragino Sans GB,Microsoft YaHei,SimSun,sans-serif}a{color:#535353;text-decoration:none;background:none}a,button,input,select,textarea{outline:none}textarea{resize:none}img,input{vertical-align:middle}*,:after,:before{box-sizing:border-box;-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-tap-highlight-color:transparent}body{margin:0;height:100%;color:#333;font-size:14px;background:#f9f9f9}img{width:100%;vertical-align:bottom}.clearfix:after{content:\"\";display:block;visibility:hidden;clear:both;height:0}.pos_a{position:absolute}.pos_r{position:relative}.opacity0{opacity:0}.opacity1{opacity:1}.displaybox{display:-webkit-box;display:-moz-box;display:box}.boxflex1{-webkit-box-flex:1;box-flex:1}em{font-style:normal}.orienthor,.orientver{-webkit-box-orient:vertical;box-orient:vertical}.twocenter{-webkit-box-pack:center;box-pack:center;-webkit-box-align:center;box-align:center}.triangle{color:#ed1c24;width:0;height:0;border-left:6px solid transparent;border-right:6px solid transparent;border-top:6px solid red}.triangleL{width:0;height:0;border-top:6px solid transparent;border-bottom:6px solid transparent;border-right:6px solid #999}.clear_float{clear:both;font-size:0;height:0;line-height:0}input[type=number],input[type=password],input[type=text],input[type=url]{height:30px;line-height:28px;width:160px;border:1px solid #bbb;border-radius:3px;margin:0 10px;padding:0 10px;outline:0}input[type=checkbox]{height:auto;margin-top:3px}input[type=checkbox],input[type=radio]{margin-right:10px;vertical-align:text-top}input[type=radio]{margin-top:1px}select{background:url(/static/modules/common/images/select-icon.png) no-repeat scroll 135px #fff}textarea{padding:10px;border-radius:3px;border:1px solid #ededed;font-size:13px;color:#333}textarea.long-textarea{border-color:#bbb;width:100%;min-height:100px}[disabled]{background:#eee}label{display:inline-block;max-width:100%;margin-bottom:5px;font-weight:400}.nowrap{white-space:nowrap;margin-right:10px;line-height:40px}.nowrap label{min-width:52px;margin-bottom:0}select{margin:0 10px;height:30px;line-height:30px!important;width:160px;border:1px solid #bbb;border-radius:3px;outline:0;appearance:none;-moz-appearance:none;-webkit-appearance:none;-o-appearance:none;padding:0 30px 0 10px;background:url(/dist/Image/select-icon.png) no-repeat scroll 135px #fff}select[disabled]{background:#eee!important}input:focus,select:focus,textarea:focus{border-color:#4085f4}.white-button{height:30px;padding:0 10px;font-size:13px;line-height:28px;color:#4085f4;background-color:#f5f9fe;border-radius:3px;display:inline-block;border:1px solid #4085f4}.white-button:focus,.white-button:hover{color:#4085f4}.button-area{margin:20px 0 10px;font-size:0}.add-blue-button{height:30px;padding-left:30px;padding-right:10px;line-height:28px;background-color:#4085f4;border-radius:3px;color:#fff;font-size:13px;display:inline-block;border:1px solid #4085f4;position:relative;cursor:pointer}.add-blue-button:focus,.add-blue-button:hover{color:#fff}.add-blue-button>span{height:10px;width:10px;background:url(/dist/Image/plus.png) no-repeat;background-size:10px;display:inline-block;position:absolute;top:10px;left:10px}.add-gray-button{height:30px;padding-left:30px;padding-right:10px;line-height:28px;background-color:#fff;border-radius:3px;color:#999;font-size:13px;display:inline-block;border:1px solid #999;position:relative}.add-gray-button>span{height:10px;width:10px;background:url(/dist/Image/gray-plus.png) no-repeat;background-size:10px;display:inline-block;position:absolute;top:10px;left:10px}.blue-button{height:30px;padding:0 10px;line-height:28px;background-color:#4085f4;border-radius:3px;color:#fff;font-size:13px;display:inline-block;border:1px solid #4085f4;position:relative}.blue-button:focus,.blue-button:hover{color:#fff}.gray-button{height:30px;padding-left:10px;padding-right:10px;line-height:28px;background-color:#fff;border-radius:3px;color:#999;font-size:13px;display:inline-block;border:1px solid #999;position:relative}.gray-button[disabled]{background:#eee}button[disabled]{height:30px;line-height:28px;background-color:#fff;border-radius:3px;color:#999;font-size:13px;display:inline-block;border:1px solid #999;position:relative}table{table-layout:fixed;width:100%;color:#333;text-align:left;border-collapse:collapse;border-spacing:0;font-size:13px!important}table>thead{height:40px;background-color:#f9f9f9}table>thead>tr>th{height:40px;line-height:40px;padding:0 10px;font-weight:400;text-overflow:ellipsis;overflow:hidden}table>tbody>tr{border-bottom:1px solid #e9e9e9}table>tbody>tr>td{height:40px;line-height:40px;padding:0 10px;word-break:break-all;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}table>tbody>tr:hover{background-color:#f5f9fe}.table-condensed{table-layout:auto}table.table-condensed>tbody>tr>td,table.table-condensed>thead>tr>th{padding:5px}.pageDiv{text-align:right;font-size:0;padding-right:20px}.pageDiv>span{height:30px;line-height:30px;display:inline-block;font-size:13px;margin:0 2px}.page-size-select{width:40px;padding-right:10px;margin:0 2px;font-size:13px}.pagination{display:inline-block;padding-left:0;margin:20px 0;border-radius:4px;font-size:0;margin-right:20px}.pagination>li{display:inline}.pagination>li>a,.pagination>li>span{position:relative;padding:6px 12px;margin-left:-1px;line-height:1.42857143;color:#337ab7;text-decoration:none;background-color:#fff;border:1px solid #ddd;color:#333;font-size:13px}.pagination>li:first-child>a,.pagination>li:first-child>span{margin-left:0;border-top-left-radius:4px;border-bottom-left-radius:4px}.pagination>li:last-child>a,.pagination>li:last-child>span{border-top-right-radius:4px;border-bottom-right-radius:4px}.pagination>li>a:focus,.pagination>li>a:hover,.pagination>li>span:focus,.pagination>li>span:hover{z-index:2;color:#23527c;background-color:#eee;border-color:#ddd}.pagination>.active>a,.pagination>.active>a:focus,.pagination>.active>a:hover,.pagination>.active>span,.pagination>.active>span:focus,.pagination>.active>span:hover{z-index:3;color:#fff;cursor:default;background-color:#337ab7;border-color:#337ab7}.pagination>.disabled>a,.pagination>.disabled>a:focus,.pagination>.disabled>a:hover,.pagination>.disabled>span,.pagination>.disabled>span:focus,.pagination>.disabled>span:hover{color:#777;pointer-events:none;cursor:not-allowed;background-color:#fff;border-color:#ddd}.kalendae{background:#f5f9fe;padding:10px 20px 70px;border:1px solid #4085f4;border-radius:0 0 4px 4px;box-shadow:none;font-family:\\\\5FAE\\8F6F\\96C5\\9ED1,arial,\\\\5B8B\\4F53,helvetica,clean,\"sans-serif\";margin-left:100px}.kalendae .k-header span{text-align:center;font-weight:700;width:40px;line-height:40px;padding:0;color:#000}.kalendae .k-calendar{width:300px}.kalendae .k-days,.kalendae .k-header,.kalendae .k-title{width:300px;display:block;overflow:hidden}.kalendae .k-title{height:40px}.kalendae .k-caption{font-size:14px;line-height:40px}.kalendae .k-btn-next-month,.kalendae .k-btn-next-year,.kalendae .k-btn-previous-month,.kalendae .k-btn-previous-year{top:8px}.kalendae .k-separator{width:20px;background:none;margin:0}.kalendae .k-days span,.kalendae .k-header span{margin:0}.kalendae .k-calendar:first-child{margin-right:20px}.kalendae .k-days span{text-align:center;width:40px;height:40px;line-height:40px;padding:0;border:0;font-size:14px}.kalendae .k-days{background:#fff;padding:10px}.kalendae .k-header span{color:#999}.kalendae .k-days span.k-active.k-day-hover-active,.kalendae .k-days span.k-active:hover{border-color:#333}.kalendae .k-days span.k-range.k-in-month,.kalendae .k-days span.k-selected.k-active,.kalendae .k-header.k-active span.k-selected{background:#f0f0f0;color:#333}.kalendae .k-days span.k-out-of-month{color:#999}.kalendae.k-floating{box-shadow:0 0 0 transparent;margin-left:220px}.kalendae .k-days span.k-out-of-month{display:none}.kalendae .k-btn-close{display:inline-block;bottom:10px;top:auto;left:50%;margin-left:-70px;height:40px;line-height:40px;color:#e14147;width:140px;text-align:center;border:1px solid #eee;border-radius:4px;font-size:14px;box-shadow:0 0 0 transparent;color:#4085f4;border:none;border:1px solid #4085f4}.kalendae .k-btn-close:hover{color:#4085f4;border:none;border:1px solid #4085f4}.kalendae .k-btn-close:after{content:\"\\5173\\95ED\"}.kalendae .k-btn-previous-month{width:0;height:0;border-top:6px solid transparent;border-bottom:6px solid transparent;border-right:6px solid #4085f4;left:26px}.kalendae .k-btn-previous-month:after{display:none}.kalendae .k-btn-next-month,.kalendae .k-btn-next-year,.kalendae .k-btn-previous-month,.kalendae .k-btn-previous-year{top:15px;height:12px}.kalendae .k-btn-previous-year:after,.kalendae .k-btn-previous-year:before{content:\"\";width:0;height:0;position:absolute;top:0;left:0;border-top:6px solid transparent;border-bottom:6px solid transparent;border-right:6px solid #4085f4}.kalendae .k-btn-previous-year:before{left:6px}.kalendae .k-btn-next-month{width:0;height:0;border-top:6px solid transparent;border-bottom:6px solid transparent;border-left:6px solid #4085f4;left:auto;right:26px}.kalendae .k-btn-next-month:after{display:none}.kalendae .k-btn-next-year:after,.kalendae .k-btn-next-year:before{content:\"\";position:absolute;top:0;right:0;width:0;height:0;border-top:6px solid transparent;border-bottom:6px solid transparent;border-left:6px solid #4085f4}.kalendae .k-btn-next-year:before{right:6px}.loadingbox,.tipsbox{position:fixed;top:0;left:0;display:-webkit-box;display:-moz-box;display:box;width:100%;height:100%;z-index:3000;-webkit-animation:fadeIn 0s .2s ease both;-moz-animation:fadeIn 0s .2s ease both;z-index:19999}.tipsbox span{background:rgba(0,0,0,.6);padding:20px 80px;color:#fff;text-align:center;border-radius:10px}.tipsbox.hide{-webkit-animation:fadeIn 0s .5s ease both;-moz-animation:fadeIn 0s .5s ease both}@-webkit-keyframes fadeIn{0%{opacity:0}to{opacity:1}}@-webkit-keyframes fadeOut{0%{opacity:1}to{opacity:0}}.mask{background:rgba(0,0,0,.4);z-index:990}.mask,.popBox{position:fixed;top:0;left:0;width:100%;height:100%}.popBox{display:-webkit-box;display:-moz-box;display:box;z-index:1000}.popBox.twocenter .popWrap{position:static}.popWrap{position:absolute;left:50%;margin-left:90px;width:480px;background:#fff;padding:40px 60px}.popWrap h3{color:#333;font-size:18px;margin-bottom:20px}.popCreat input{width:360px;border:1px solid #ededed;line-height:40px;border-radius:5px;padding:0 5px 0 15px}.popCreat input.tips{border:1px solid #ec3838}.popWrap .btns{width:100%;overflow:hidden;margin-top:20px}.popWrap .btns span{width:160px;line-height:40px;border-radius:5px;text-align:center;cursor:pointer}.popWrap .surebtn{float:left;background:#4085f4;color:#fff}.popWrap .surebtn:hover{background:#6085ff}.popWrap .cancelbtn{float:right;background:#fff;border:1px solid #4085f4;color:#4085f4}.popWrap .cancelbtn:hover{color:#6085ff}.dialog{overflow:auto;-webkit-overflow-scrolling:touch;z-index:10000;padding:50px 0;display:none}.dialog,.dialog .dialogOverlay{position:fixed;top:0;right:0;bottom:0;left:0}.dialog .dialogOverlay{background:rgba(0,0,0,.4);animation:dialog-fadein .5s}.dialog .dialogTitle{width:100%;height:50px;line-height:50px;font-size:18px;color:#333;padding:0 29px;background-color:#ecf3fe;border-bottom:1px solid #ccc;border-top-left-radius:inherit;border-tio-right-radius:inherit}.dialog .dialogClose{position:absolute;top:0;right:0;cursor:pointer;border-radius:5px;width:50px;height:50px}.dialog .dialogClose:after,.dialog .dialogClose:before{content:\"\";position:absolute;width:2px;height:13px;background:#bbb;font-size:0;line-height:0;vertical-align:middle;transform:rotate(45deg);-webkit-transform:rotate(45deg);transform-origin:50% 50%;-webkit-transform-origin:50% 50%;left:24px;top:18px}.dialog .dialogClose:after{-webkit-transform:rotate(-45deg)}.dialog .dialogContent{position:relative;background:#fff;border-radius:5px;color:#333;max-width:100%;margin:0 auto;width:800px;overflow:hidden;animation:dialog-flyin 1.5s}.dialog .dialogContent .dialogSubDiv input[type=number],.dialog .dialogContent .dialogSubDiv input[type=password],.dialog .dialogContent .dialogSubDiv input[type=text],.dialog .dialogContent .dialogSubDiv input[type=url]{width:360px;margin-left:0;font-size:13px;margin:5px 0}.dialog .dialogContent .dialogSubDiv label{width:120px;margin:0;font-size:13px;line-height:40px}.dialog .dialogContent .dialogSubDiv label span.lebel-sm{padding:0 6px}.dialog .dialogContent .dialogSubDiv label span.lebel-sm label{width:30px!important}.dialog .dialogContent .dialogSubDiv label.info-label{width:auto}.dialog .dialogContent .dialogSubDiv select{width:120px;margin:5px 0;background:url(/dist/Image/select-icon.png) no-repeat scroll 95px transparent;font-size:13px}.dialog .dialogContent .dialogSubDiv select.info-select{width:120px}.dialog .dialogContent .dialogSubDiv input[type=text].mid-input{width:200px;font-size:13px}.dialog .dialogContent .dialogSubDiv input[type=number].mid-number-input,.dialog .dialogContent .dialogSubDiv input[type=text].mid-number-input{width:120px;font-size:13px}.dialog .dialogContent .dialogSubDiv input[type=number].sm-size{width:120px;padding-left:10px;padding-right:0}.dialog .dialogContent .dialogSubDiv input[type=number].md-size{width:200px;padding-left:10px;padding-right:0}.dialog .dialogContent .dialogSubDiv input[type=text].sm-size{width:200px;font-size:13px}.dialog .dialogContent .dialogDiv{margin:30px 50px;font-size:13px;color:#333}.dialog .dialogContent .dialogDiv .dialogSubDiv{margin:10px 0;font-size:0}.dialog .dialogContent .dialogDiv .dialogSubDiv .subDivTitle{width:90px;font-size:13px;line-height:40px;margin-right:10px;display:inline-block;vertical-align:top;position:relative}.dialog .dialogContent .dialogDiv .dialogSubDiv .subDivContent{width:600px;min-height:40px;display:inline-block}.dialog .dialogContent .dialogDiv .dialogSubDiv .subDivContent .long-select{width:200px;background:url(/dist/Image/select-icon.png) no-repeat scroll 175px transparent}.dialog .dialogContent .dialogDiv .dialogSubDiv .subDivContent p{line-height:40px;font-size:13px}.dialog .dialogContent .dialogDiv .dialogSubDiv .subDivContent .subDivCard{width:600px;min-height:100px;border:1px solid #ccc;padding:10px 20px}.dialog .dialogContent .dialogDiv .dialogSubDiv .subDivContent .cardContent{font-size:13px;color:#333;height:40px;line-height:40px;display:block}.dialog .dialogContent .dialogDiv .dialogSubDiv .subDivContent .dialog-short-input{width:50px;height:20px;line-height:28px;padding:0 5px;margin:3px}.dialog .dialogContent .dialogDiv .dialogSubDiv .subDivContent .dialog-long-input{width:600px}.dialog .dialogContent .dialogDiv .dialogSubDiv .showfont{display:inline-block;font-size:13px;line-height:40px;height:40px}.dialog .dialogContent .dialogDiv .dialogButtonDiv{margin-top:30px;text-align:center;font-size:0}.dialog .dialogContent .dialogDiv .dialogButtonDiv a{margin-right:20px;font-size:13px;display:inline-block}.dialog .dialogContent .dialogDiv .dialogButtonDiv a.dialog-blue-button{color:#fff}.dialog .dialogContent .dialogDiv .dialogButtonDiv a.dialog-gray-button{color:#333}.dialog .requiredItem:before{content:\"*\";position:absolute;right:0;top:2px;color:red;font-size:14px}.dialog-blue-button,.dialog-gray-button{display:inline-block;width:100px;height:30px;line-height:30px;text-align:center;background-color:#4085f4;border-radius:3px;color:#fff;font-size:13px}.dialog-gray-button{background-color:#eee;color:#333}@-webkit-keyframes dialog-fadeout{0%{opacity:1}to{opacity:0}}@keyframes dialog-fadeout{0%{opacity:1}to{opacity:0}}@-webkit-keyframes dialog-fadein{0%{opacity:0}to{opacity:1}}@keyframes dialog-fadein{0%{opacity:0}to{opacity:1}}@-webkit-keyframes ngdialog-flyin{0%{opacity:0;-webkit-transform:translateY(-40px);transform:translateY(-40px)}to{opacity:1;-webkit-transform:translateY(0);transform:translateY(0)}}@keyframes ngdialog-flyin{0%{opacity:0;-webkit-transform:translateY(-40px);transform:translateY(-40px)}to{opacity:1;-webkit-transform:translateY(0);transform:translateY(0)}}@-webkit-keyframes ngdialog-flyout{0%{opacity:1;-webkit-transform:translateY(0);transform:translateY(0)}to{opacity:0;-webkit-transform:translateY(-40px);transform:translateY(-40px)}}@keyframes ngdialog-flyout{0%{opacity:1;-webkit-transform:translateY(0);transform:translateY(0)}to{opacity:0;-webkit-transform:translateY(-40px);transform:translateY(-40px)}}#app{width:100%}", ""]);

// exports


/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)();
// imports


// module
exports.push([module.i, ".kalendae{display:inline-block;zoom:1;*display:inline;background:#eee;padding:10px;margin:5px;border-radius:5px;font-size:11px;font-family:Helvetica Neue,Helvetica;cursor:default;position:relative}.kalendae,.kalendae *{box-sizing:border-box}.kalendae.k-floating{top:0;left:0;z-index:100000;margin:0}.kalendae .k-btn-close,.kalendae.k-floating{position:absolute;box-shadow:0 1px 3px rgba(0,0,0,.75)}.kalendae .k-btn-close{top:-8px;right:-8px;width:20px;height:20px;background:#fff;border:2px solid #ccc;color:#999;line-height:17px;text-align:center;font-size:13px;border-radius:10px;cursor:pointer;text-decoration:none}.kalendae .k-btn-close:after{content:\"\\2716\"}.kalendae .k-btn-close:hover{color:#7ea0e2;background:#fff;border-color:#7ea0e2}.kalendae .k-calendar{width:155px}.kalendae .k-calendar,.kalendae .k-separator{display:inline-block;zoom:1;*display:inline;vertical-align:top}.kalendae .k-separator{width:2px;background:#ddd;height:155px;margin:0 10px}.kalendae .k-title{text-align:center;white-space:nowrap;position:relative;height:18px}.kalendae .k-caption{font-size:12px;line-height:18px}.kalendae .k-btn-next-month,.kalendae .k-btn-next-year,.kalendae .k-btn-previous-month,.kalendae .k-btn-previous-year{width:16px;height:23px;cursor:pointer;position:absolute;top:-3px;color:#777;font-size:32px;line-height:18px;font-weight:700;font-family:arial;text-decoration:none}.kalendae .k-btn-previous-year{left:0}.kalendae .k-btn-previous-month{left:16px}.kalendae .k-btn-next-month{right:16px}.kalendae .k-btn-next-year{right:0}.kalendae .k-btn-previous-month:after{content:\"\\2039\"}.kalendae .k-btn-next-month:after{content:\"\\203A\"}.kalendae .k-btn-previous-year:after{content:\"\\AB\"}.kalendae .k-btn-next-year:after{content:\"\\BB\"}.kalendae .k-btn-next-month:hover,.kalendae .k-btn-previous-month:hover{color:#7ea0e2}.kalendae .k-btn-next-year:hover,.kalendae .k-btn-previous-year:hover{color:#6fdf81}.kalendae .k-first-month .k-btn-next-month,.kalendae .k-first-month .k-btn-next-year,.kalendae .k-last-month .k-btn-previous-month,.kalendae .k-last-month .k-btn-previous-year,.kalendae .k-middle-month .k-btn-next-month,.kalendae .k-middle-month .k-btn-next-year,.kalendae .k-middle-month .k-btn-previous-month,.kalendae .k-middle-month .k-btn-previous-year,.kalendae .k-title.k-disable-year-nav .k-btn-next-year,.kalendae .k-title.k-disable-year-nav .k-btn-previous-year{display:none}.kalendae .k-title.k-disable-year-nav .k-btn-next-month{right:0}.kalendae .k-title.k-disable-year-nav .k-btn-previous-month{left:0}.kalendae .k-days,.kalendae .k-header,.kalendae .k-title{width:154px;display:block;overflow:hidden}.kalendae.k-disable-next-month-btn .k-btn-next-month,.kalendae.k-disable-next-year-btn .k-btn-next-year,.kalendae.k-disable-previous-month-btn .k-btn-previous-month,.kalendae.k-disable-previous-year-btn .k-btn-previous-year{display:none}.kalendae .k-days span,.kalendae .k-header span{float:left;margin:1px 1px 2px}.kalendae .k-header span{text-align:center;font-weight:700;width:20px;padding:1px 0;color:#666}.kalendae .k-header.k-active span{cursor:pointer;border-radius:3px}.kalendae .k-days span{text-align:right;width:20px;height:1.5em;line-height:1em;padding:2px 3px 2px 2px;border:1px solid transparent;border-radius:3px;color:#999}.kalendae .k-today{text-decoration:underline}.kalendae .k-days span.k-in-month.k-active{border-color:#ddd;background-color:#fff;color:#333}.kalendae .k-days span.k-out-of-month{color:#ddd}.kalendae .k-days span.k-active{cursor:pointer}.kalendae .k-days span.k-selected{border-color:#1072a5;color:#1072a5}.kalendae .k-days span.k-selected.k-active,.kalendae .k-header.k-active span.k-selected{background:#7ea0e2;color:#fff}.kalendae .k-days span.k-range{background:none;border-color:#6dd4fe}.kalendae .k-days span.k-range.k-in-month{background:#c4d4f1;border-color:#19aefe;color:#333}.kalendae .k-days span.k-active.k-day-hover-active,.kalendae .k-days span.k-active:hover,.kalendae .k-week:hover span.k-active{border-color:#666}.clearfix:after{visibility:hidden;display:block;font-size:0;content:\" \";clear:both;height:0}.kalendae.ie8.k-floating{border:1px solid #ccc}.kalendae.ie8 .k-btn-close{width:20px;height:20px;border:none}.kalendae.ie8 .k-btn-close:after{display:none}.kalendae.ie8 .k-btn-next-month,.kalendae.ie8 .k-btn-next-year,.kalendae.ie8 .k-btn-previous-month,.kalendae.ie8 .k-btn-previous-year{width:16px;height:16px;cursor:pointer;position:absolute;top:0}.kalendae.ie8 .k-btn-next-month,.kalendae.ie8 .k-btn-next-year{background-position:100%}.kalendae.ie8 .k-btn-next-month:hover,.kalendae.ie8 .k-btn-previous-month:hover{background-color:#7ea0e2}.kalendae.ie8 .k-btn-next-year,.kalendae.ie8 .k-btn-previous-year{background-color:#333}.kalendae.ie8 .k-btn-next-year:hover,.kalendae.ie8 .k-btn-previous-year:hover{background-color:#6fdf81}.kalendae.ie8 .k-btn-next-month:after,.kalendae.ie8 .k-btn-next-year:after,.kalendae.ie8 .k-btn-previous-month:after,.kalendae.ie8 .k-btn-previous-year:after{display:none}", ""]);

// exports


/***/ }),
/* 68 */,
/* 69 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(126)

var Component = __webpack_require__(1)(
  /* script */
  __webpack_require__(21),
  /* template */
  __webpack_require__(111),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(118)

var Component = __webpack_require__(1)(
  /* script */
  __webpack_require__(24),
  /* template */
  __webpack_require__(92),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

var Component = __webpack_require__(1)(
  /* script */
  __webpack_require__(25),
  /* template */
  __webpack_require__(97),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(121)

var Component = __webpack_require__(1)(
  /* script */
  __webpack_require__(26),
  /* template */
  __webpack_require__(95),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

var Component = __webpack_require__(1)(
  /* script */
  __webpack_require__(27),
  /* template */
  __webpack_require__(113),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

var Component = __webpack_require__(1)(
  /* script */
  __webpack_require__(28),
  /* template */
  __webpack_require__(96),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

var Component = __webpack_require__(1)(
  /* script */
  __webpack_require__(29),
  /* template */
  __webpack_require__(101),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 76 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(120)

var Component = __webpack_require__(1)(
  /* script */
  __webpack_require__(30),
  /* template */
  __webpack_require__(94),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(125)

var Component = __webpack_require__(1)(
  /* script */
  __webpack_require__(31),
  /* template */
  __webpack_require__(106),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

var Component = __webpack_require__(1)(
  /* script */
  __webpack_require__(32),
  /* template */
  __webpack_require__(109),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 79 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(128)

var Component = __webpack_require__(1)(
  /* script */
  __webpack_require__(33),
  /* template */
  __webpack_require__(115),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(119)

var Component = __webpack_require__(1)(
  /* script */
  __webpack_require__(34),
  /* template */
  __webpack_require__(93),
  /* scopeId */
  "data-v-0a8cddf0",
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 81 */
/***/ (function(module, exports, __webpack_require__) {

var Component = __webpack_require__(1)(
  /* script */
  __webpack_require__(35),
  /* template */
  __webpack_require__(114),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 82 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(122)

var Component = __webpack_require__(1)(
  /* script */
  __webpack_require__(36),
  /* template */
  __webpack_require__(102),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 83 */
/***/ (function(module, exports, __webpack_require__) {

var Component = __webpack_require__(1)(
  /* script */
  __webpack_require__(37),
  /* template */
  __webpack_require__(100),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 84 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(127)

var Component = __webpack_require__(1)(
  /* script */
  __webpack_require__(38),
  /* template */
  __webpack_require__(112),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

var Component = __webpack_require__(1)(
  /* script */
  __webpack_require__(39),
  /* template */
  __webpack_require__(91),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 86 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(129)

var Component = __webpack_require__(1)(
  /* script */
  __webpack_require__(40),
  /* template */
  __webpack_require__(116),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(124)

var Component = __webpack_require__(1)(
  /* script */
  __webpack_require__(41),
  /* template */
  __webpack_require__(104),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 88 */
/***/ (function(module, exports, __webpack_require__) {

var Component = __webpack_require__(1)(
  /* script */
  __webpack_require__(42),
  /* template */
  __webpack_require__(107),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 89 */
/***/ (function(module, exports, __webpack_require__) {

var Component = __webpack_require__(1)(
  /* script */
  __webpack_require__(45),
  /* template */
  __webpack_require__(99),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 90 */
/***/ (function(module, exports, __webpack_require__) {

var Component = __webpack_require__(1)(
  /* script */
  __webpack_require__(46),
  /* template */
  __webpack_require__(105),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 91 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    staticClass: "table-div"
  }, [_c('div', {
    staticClass: "button-area",
    staticStyle: {
      "display": "block"
    }
  }, [_c('button', {
    staticClass: "blue-button",
    on: {
      "click": _vm.startDoBatch
    }
  }, [_vm._v("批量开始处理")]), _vm._v(" "), _c('button', {
    staticClass: "white-button",
    on: {
      "click": _vm.finishDoBatch
    }
  }, [_vm._v("批量完成处理")])]), _vm._v(" "), _c('table', {
    staticClass: "manage-table"
  }, [_c('thead', [_c('tr', [_c('th', {
    attrs: {
      "width": "3%"
    }
  }, [_c('input', {
    attrs: {
      "type": "checkbox",
      "name": "check-all"
    },
    on: {
      "click": function($event) {
        _vm.swapCheck()
      }
    }
  })]), _c('th', {
    attrs: {
      "width": "9%"
    }
  }, [_vm._v("ID")]), _c('th', {
    attrs: {
      "width": "8%"
    }
  }, [_vm._v("状态")]), _c('th', {
    attrs: {
      "width": "14%"
    }
  }, [_vm._v("监控名称")]), _c('th', {
    attrs: {
      "width": "5%"
    }
  }, [_vm._v("级别")]), _c('th', {
    attrs: {
      "width": "11%"
    }
  }, [_vm._v("监控类别")]), _c('th', {
    attrs: {
      "width": "15%"
    }
  }, [_vm._v("报警时间")]), _c('th', {
    attrs: {
      "width": "20%"
    }
  }, [_vm._v("报警详情")]), _c('th', {
    attrs: {
      "width": "15%"
    }
  }, [_vm._v("操作")])])]), _vm._v(" "), _c('tbody', _vm._l((_vm.childAlarmTable), function(value, index) {
    return _c('tr', [_vm._m(0, true), _vm._v(" "), _c('td', [_vm._v(_vm._s(value.id))]), _vm._v(" "), (value.process_status == 0) ? _c('td', [_vm._v("未处理")]) : (value.process_status == 1) ? _c('td', [_vm._v("处理中")]) : (value.process_status == 2) ? _c('td', [_vm._v("已处理")]) : _vm._e(), _vm._v(" "), _c('td', [_vm._v(_vm._s(value.item_name))]), _vm._v(" "), _c('td', [_vm._v(_vm._s(value.item_level))]), _vm._v(" "), (value.item_type == 0) ? _c('td', [_vm._v("http可用性")]) : (value.item_type == 1) ? _c('td', [_vm._v("数据接口")]) : (value.item_type == 2) ? _c('td', [_vm._v("页面元素")]) : _vm._e(), _vm._v(" "), _c('td', [_vm._v(_vm._s(_vm._f("formatDate")(value.alert_time)))]), _vm._v(" "), _c('td', [_vm._v(_vm._s(value.alert_detail))]), _vm._v(" "), (value.process_status == 0) ? _c('td', [_c('a', {
      attrs: {
        "href": "javascript:;",
        "data-alerid": value.id,
        "data-index": index
      },
      on: {
        "click": _vm.startDo
      }
    }, [_vm._v("开始处理")]), _c('router-link', {
      attrs: {
        "to": '/alarminfo/' + value.id,
        "target": "_blank"
      }
    }, [_vm._v("完成处理")])], 1) : (value.process_status == 1) ? _c('td', [_c('router-link', {
      attrs: {
        "to": '/alarminfo/' + value.id,
        "target": "_blank"
      }
    }, [_vm._v("完成处理")])], 1) : (value.process_status == 2) ? _c('td', [_c('router-link', {
      attrs: {
        "to": '/alarminfo/' + value.id,
        "target": "_blank"
      }
    }, [_vm._v("查看详情")])], 1) : _vm._e()])
  }))])])
},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('td', [_c('input', {
    attrs: {
      "type": "checkbox",
      "name": "check-one"
    }
  })])
}]}

/***/ }),
/* 92 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    staticClass: "dialog"
  }, [_c('div', {
    staticClass: "dialogOverlay"
  }), _vm._v(" "), _c('div', {
    staticClass: "dialogContent"
  }, [_c('div', {
    staticClass: "dialogClose",
    on: {
      "click": _vm.hideDialog
    }
  }), _vm._v(" "), _c('div', {
    staticClass: "dialogDetail"
  }, [_c('div', {
    staticClass: "dialogTitle"
  }, [_vm._v(_vm._s(_vm.dataportformData.dialogTitle))]), _vm._v(" "), _c('div', {
    staticClass: "dialogDiv"
  }, [_c('div', {
    staticClass: "dialogSubDiv"
  }, [_c('div', {
    staticClass: "subDivTitle requiredItem"
  }, [_vm._v("监控项名称")]), _vm._v(" "), _c('div', {
    staticClass: "subDivContent"
  }, [_c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.dataportformData.itemName),
      expression: "dataportformData.itemName"
    }],
    staticClass: "dataport-dialog-name",
    attrs: {
      "type": "text",
      "placeholder": ""
    },
    domProps: {
      "value": (_vm.dataportformData.itemName)
    },
    on: {
      "input": function($event) {
        if ($event.target.composing) { return; }
        _vm.dataportformData.itemName = $event.target.value
      }
    }
  })])]), _vm._v(" "), _c('div', {
    staticClass: "dialogSubDiv"
  }, [_c('div', {
    staticClass: "subDivTitle requiredItem"
  }, [_vm._v("监控分级")]), _vm._v(" "), _c('div', {
    staticClass: "subDivContent"
  }, [_c('label', [_c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.dataportformData.levelRadio),
      expression: "dataportformData.levelRadio"
    }],
    attrs: {
      "type": "radio",
      "name": "level",
      "value": "0",
      "id": "level0"
    },
    domProps: {
      "checked": _vm._q(_vm.dataportformData.levelRadio, "0")
    },
    on: {
      "__c": function($event) {
        _vm.dataportformData.levelRadio = "0"
      }
    }
  }), _c('span', {
    attrs: {
      "for": "level0"
    }
  }, [_vm._v("0级")])]), _vm._v(" "), _c('label', [_c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.dataportformData.levelRadio),
      expression: "dataportformData.levelRadio"
    }],
    attrs: {
      "type": "radio",
      "name": "level",
      "value": "1",
      "id": "level1"
    },
    domProps: {
      "checked": _vm._q(_vm.dataportformData.levelRadio, "1")
    },
    on: {
      "__c": function($event) {
        _vm.dataportformData.levelRadio = "1"
      }
    }
  }), _c('span', {
    attrs: {
      "for": "level1"
    }
  }, [_vm._v("1级")])]), _vm._v(" "), _c('label', [_c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.dataportformData.levelRadio),
      expression: "dataportformData.levelRadio"
    }],
    attrs: {
      "type": "radio",
      "name": "level",
      "value": "2",
      "id": "level2"
    },
    domProps: {
      "checked": _vm._q(_vm.dataportformData.levelRadio, "2")
    },
    on: {
      "__c": function($event) {
        _vm.dataportformData.levelRadio = "2"
      }
    }
  }), _c('span', {
    attrs: {
      "for": "level2"
    }
  }, [_vm._v("2级")])])])]), _vm._v(" "), _c('div', {
    staticClass: "dialogSubDiv"
  }, [_c('div', {
    staticClass: "subDivTitle requiredItem"
  }, [_vm._v("服务url")]), _vm._v(" "), _c('div', {
    staticClass: "subDivContent"
  }, [_c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.dataportformData.inputServerUrl),
      expression: "dataportformData.inputServerUrl"
    }],
    staticClass: "dataport-dialog-name",
    attrs: {
      "type": "text",
      "placeholder": ""
    },
    domProps: {
      "value": (_vm.dataportformData.inputServerUrl)
    },
    on: {
      "input": function($event) {
        if ($event.target.composing) { return; }
        _vm.dataportformData.inputServerUrl = $event.target.value
      }
    }
  })])]), _vm._v(" "), _c('div', {
    staticClass: "dialogSubDiv"
  }, [_c('div', {
    staticClass: "subDivTitle"
  }, [_vm._v("referer")]), _vm._v(" "), _c('div', {
    staticClass: "subDivContent"
  }, [_c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.dataportformData.referer),
      expression: "dataportformData.referer"
    }],
    staticClass: "dataport-dialog-referer",
    attrs: {
      "type": "text",
      "placeholder": ""
    },
    domProps: {
      "value": (_vm.dataportformData.referer)
    },
    on: {
      "input": function($event) {
        if ($event.target.composing) { return; }
        _vm.dataportformData.referer = $event.target.value
      }
    }
  })])]), _vm._v(" "), _c('div', {
    staticClass: "dialogSubDiv"
  }, [_c('div', {
    staticClass: "subDivTitle"
  }, [_vm._v("userAgent")]), _vm._v(" "), _c('div', {
    staticClass: "subDivContent"
  }, [_c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.dataportformData.userAgent),
      expression: "dataportformData.userAgent"
    }],
    staticClass: "dataport-dialog-useragent",
    attrs: {
      "type": "text",
      "placeholder": ""
    },
    domProps: {
      "value": (_vm.dataportformData.userAgent)
    },
    on: {
      "input": function($event) {
        if ($event.target.composing) { return; }
        _vm.dataportformData.userAgent = $event.target.value
      }
    }
  })])]), _vm._v(" "), _c('div', {
    staticClass: "dialogSubDiv"
  }, [_c('div', {
    staticClass: "subDivTitle"
  }, [_vm._v("请求方式")]), _vm._v(" "), _c('div', {
    staticClass: "subDivContent"
  }, [_c('label', [_c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.dataportformData.isAndPost),
      expression: "dataportformData.isAndPost"
    }],
    attrs: {
      "type": "radio",
      "value": "0"
    },
    domProps: {
      "checked": _vm._q(_vm.dataportformData.isAndPost, "0")
    },
    on: {
      "__c": function($event) {
        _vm.dataportformData.isAndPost = "0"
      }
    }
  }), _vm._v("get")]), _vm._v(" "), _c('label', [_c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.dataportformData.isAndPost),
      expression: "dataportformData.isAndPost"
    }],
    attrs: {
      "type": "radio",
      "value": "1"
    },
    domProps: {
      "checked": _vm._q(_vm.dataportformData.isAndPost, "1")
    },
    on: {
      "__c": function($event) {
        _vm.dataportformData.isAndPost = "1"
      }
    }
  }), _vm._v("post")]), _vm._v(" "), (_vm.dataportformData.isAndPost == 1) ? _c('div', {
    staticClass: "subDivCard"
  }, [_c('div', {
    staticClass: "dialogSubDiv"
  }, [_c('div', {
    staticClass: "subDivTitle"
  }, [_vm._v("postData格式")]), _vm._v(" "), _c('div', {
    staticClass: "subDivContent",
    staticStyle: {
      "display": "inline-block",
      "width": "400px"
    }
  }, [_c('select', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.dataportformData.formatSelect),
      expression: "dataportformData.formatSelect"
    }],
    staticClass: "long-select",
    attrs: {
      "name": "format"
    },
    on: {
      "change": function($event) {
        var $$selectedVal = Array.prototype.filter.call($event.target.options, function(o) {
          return o.selected
        }).map(function(o) {
          var val = "_value" in o ? o._value : o.value;
          return val
        });
        _vm.dataportformData.formatSelect = $event.target.multiple ? $$selectedVal : $$selectedVal[0]
      }
    }
  }, _vm._l((_vm.formats), function(value, index) {
    return _c('option', {
      domProps: {
        "value": index
      }
    }, [_vm._v(_vm._s(value))])
  }))])]), _vm._v(" "), _c('textarea', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.dataportformData.andPostCon),
      expression: "dataportformData.andPostCon"
    }],
    staticStyle: {
      "width": "100%",
      "height": "100px"
    },
    attrs: {
      "placeholder": "post数据格式为Json或urlEncode,例如：{\"key\":\"value\"}",
      "id": "andPostCon"
    },
    domProps: {
      "value": (_vm.dataportformData.andPostCon)
    },
    on: {
      "input": function($event) {
        if ($event.target.composing) { return; }
        _vm.dataportformData.andPostCon = $event.target.value
      }
    }
  })]) : _vm._e(), _vm._v(" "), (_vm.dataportformData.isAndPost == 0) ? _c('div', {
    staticClass: "subDivCard"
  }, [_c('div', {
    staticClass: "dialogSubDiv"
  }, [_c('div', {
    staticClass: "subDivTitle",
    staticStyle: {
      "color": "#ccc"
    }
  }, [_vm._v("postData格式")]), _vm._v(" "), _c('div', {
    staticClass: "subDivContent",
    staticStyle: {
      "display": "inline-block",
      "width": "400px"
    }
  }, [_c('select', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.dataportformData.formatSelect),
      expression: "dataportformData.formatSelect"
    }],
    staticClass: "long-select",
    attrs: {
      "name": "format",
      "disabled": "disabled"
    },
    on: {
      "change": function($event) {
        var $$selectedVal = Array.prototype.filter.call($event.target.options, function(o) {
          return o.selected
        }).map(function(o) {
          var val = "_value" in o ? o._value : o.value;
          return val
        });
        _vm.dataportformData.formatSelect = $event.target.multiple ? $$selectedVal : $$selectedVal[0]
      }
    }
  }, _vm._l((_vm.formats), function(value, index) {
    return _c('option', {
      domProps: {
        "value": index
      }
    }, [_vm._v(_vm._s(value))])
  }))])]), _vm._v(" "), _c('textarea', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.dataportformData.andPostCon),
      expression: "dataportformData.andPostCon"
    }],
    staticStyle: {
      "width": "100%",
      "height": "100px"
    },
    attrs: {
      "placeholder": "post数据格式为Json或urlEncode,例如：{\"key\":\"value\"}",
      "id": "andPostCon",
      "disabled": "disabled"
    },
    domProps: {
      "value": (_vm.dataportformData.andPostCon)
    },
    on: {
      "input": function($event) {
        if ($event.target.composing) { return; }
        _vm.dataportformData.andPostCon = $event.target.value
      }
    }
  })]) : _vm._e()])]), _vm._v(" "), _c('div', {
    staticClass: "dialogSubDiv"
  }, [_c('div', {
    staticClass: "subDivTitle requiredItem"
  }, [_vm._v("url请求超时")]), _vm._v(" "), _c('div', {
    staticClass: "subDivContent"
  }, [_c('label', [_c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.dataportformData.timeOut),
      expression: "dataportformData.timeOut"
    }],
    staticClass: "alarm-config-dialog-timeout sm-size",
    attrs: {
      "type": "number",
      "min": "1",
      "placeholder": ""
    },
    domProps: {
      "value": (_vm.dataportformData.timeOut)
    },
    on: {
      "input": function($event) {
        if ($event.target.composing) { return; }
        _vm.dataportformData.timeOut = $event.target.value
      },
      "blur": function($event) {
        _vm.$forceUpdate()
      }
    }
  })]), _c('span', {
    staticClass: "showfont"
  }, [_vm._v("ms(默认为10秒)")])])]), _vm._v(" "), _c('div', {
    staticClass: "dialogSubDiv"
  }, [_c('div', {
    staticClass: "subDivTitle"
  }, [_vm._v("账号选择")]), _vm._v(" "), _c('div', {
    staticClass: "subDivContent"
  }, [_c('div', {
    staticClass: "subDivCard"
  }, [_c('label', [_c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.dataportformData.isNeedAccount),
      expression: "dataportformData.isNeedAccount"
    }],
    attrs: {
      "type": "radio",
      "name": "isNeedAccount",
      "value": "0"
    },
    domProps: {
      "checked": _vm._q(_vm.dataportformData.isNeedAccount, "0")
    },
    on: {
      "__c": function($event) {
        _vm.dataportformData.isNeedAccount = "0"
      }
    }
  }), _vm._v("不需要用户账号")]), _vm._v(" "), _c('label', [_c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.dataportformData.isNeedAccount),
      expression: "dataportformData.isNeedAccount"
    }],
    attrs: {
      "type": "radio",
      "name": "isNeedAccount",
      "value": "1"
    },
    domProps: {
      "checked": _vm._q(_vm.dataportformData.isNeedAccount, "1")
    },
    on: {
      "__c": function($event) {
        _vm.dataportformData.isNeedAccount = "1"
      }
    }
  }), _vm._v("需要用户账号")]), _vm._v(" "), _c('div', {}, [(_vm.dataportformData.isNeedAccount == 0) ? _c('select', {
    staticClass: "long-select",
    attrs: {
      "name": "",
      "disabled": "disabled"
    }
  }, [_c('option')]) : _c('select', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.dataportformData.userSelected),
      expression: "dataportformData.userSelected"
    }],
    staticClass: "long-select",
    attrs: {
      "name": ""
    },
    on: {
      "change": function($event) {
        var $$selectedVal = Array.prototype.filter.call($event.target.options, function(o) {
          return o.selected
        }).map(function(o) {
          var val = "_value" in o ? o._value : o.value;
          return val
        });
        _vm.dataportformData.userSelected = $event.target.multiple ? $$selectedVal : $$selectedVal[0]
      }
    }
  }, _vm._l((_vm.userAccounts), function(value) {
    return _c('option', {
      domProps: {
        "value": value.acount_name
      }
    }, [_vm._v(_vm._s(value.acount_name))])
  }))])])])]), _vm._v(" "), _c('div', {
    staticClass: "dialogSubDiv"
  }, [_c('div', {
    staticClass: "subDivTitle",
    staticStyle: {
      "line-height": "30px"
    }
  }, [_vm._v("获取页面数据")]), _vm._v(" "), _c('div', {
    staticClass: "subDivContent"
  }, [_c('button', {
    staticClass: "blue-button",
    on: {
      "click": _vm.testRules
    }
  }, [_vm._v("获取数据")])])]), _vm._v(" "), _c('div', {
    staticClass: "dialogSubDiv"
  }, [_c('div', {
    staticClass: "subDivTitle"
  }, [_vm._v("页面数据表现")]), _vm._v(" "), _c('div', {
    staticClass: "subDivContent"
  }, [_c('textarea', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.dataportformData.eleshow),
      expression: "dataportformData.eleshow"
    }],
    staticClass: "long-textarea",
    attrs: {
      "placeholder": "",
      "id": "eleshow"
    },
    domProps: {
      "value": (_vm.dataportformData.eleshow)
    },
    on: {
      "input": function($event) {
        if ($event.target.composing) { return; }
        _vm.dataportformData.eleshow = $event.target.value
      }
    }
  })])]), _vm._v(" "), _c('div', {
    staticClass: "dialogSubDiv"
  }, [_c('div', {
    staticClass: "subDivTitle requiredItem"
  }, [_vm._v("监控规则")]), _vm._v(" "), _c('div', {
    staticStyle: {
      "display": "inline-block",
      "width": "600px"
    }
  }, [_vm._l((_vm.dataportformData.ruleselects), function(item, i) {
    return [_c('div', {
      staticClass: "subDivContent",
      staticStyle: {
        "margin-bottom": "10px"
      }
    }, [_c('div', {
      staticClass: "subDivCard"
    }, [_c('div', {
      staticClass: "box"
    }, [_c('label', {
      staticClass: "name"
    }, [_vm._v("规则类别")]), _vm._v(" "), _c('select', {
      directives: [{
        name: "model",
        rawName: "v-model",
        value: (item.ruletype),
        expression: "item.ruletype"
      }],
      attrs: {
        "name": ""
      },
      on: {
        "change": function($event) {
          var $$selectedVal = Array.prototype.filter.call($event.target.options, function(o) {
            return o.selected
          }).map(function(o) {
            var val = "_value" in o ? o._value : o.value;
            return val
          });
          item.ruletype = $event.target.multiple ? $$selectedVal : $$selectedVal[0]
        }
      }
    }, _vm._l((_vm.ruletypes), function(value, index) {
      return _c('option', {
        domProps: {
          "value": index
        }
      }, [_vm._v(_vm._s(value))])
    }))]), _vm._v(" "), _c('div', {
      staticClass: "box"
    }, [_c('label', {
      staticClass: "name"
    }, [_vm._v("规则内容(非空)")]), _vm._v(" "), _c('input', {
      directives: [{
        name: "model",
        rawName: "v-model",
        value: (item.rulecont),
        expression: "item.rulecont"
      }],
      staticClass: "dataport-dialog-rulename",
      attrs: {
        "type": "text",
        "placeholder": ""
      },
      domProps: {
        "value": (item.rulecont)
      },
      on: {
        "input": function($event) {
          if ($event.target.composing) { return; }
          item.rulecont = $event.target.value
        }
      }
    })]), _vm._v(" "), _c('div', {
      staticClass: "box"
    }, [_c('label', {
      staticClass: "name"
    }, [_vm._v("条件操作")]), _vm._v(" "), _c('div', {
      staticClass: "subbox"
    }, [(item.rulecont) ? [_c('button', {
      staticClass: "blue-button",
      on: {
        "click": _vm.addTestManageRules
      }
    }, [_vm._v("添加")]), _vm._v(" "), _c('button', {
      directives: [{
        name: "show",
        rawName: "v-show",
        value: (_vm.dataportformData.ruleselects.length > 1),
        expression: "dataportformData.ruleselects.length >1"
      }],
      staticClass: "blue-button",
      on: {
        "click": function($event) {
          _vm.deleteTestManageRules(i)
        }
      }
    }, [_vm._v("删除")]), _vm._v(" "), _c('button', {
      staticClass: "blue-button",
      on: {
        "click": function($event) {
          _vm.testManageRules(i)
        }
      }
    }, [_vm._v("测试规则")])] : [_c('button', {
      staticClass: "gray-button",
      attrs: {
        "disabled": "disabled"
      }
    }, [_vm._v("添加")]), _vm._v(" "), _c('button', {
      directives: [{
        name: "show",
        rawName: "v-show",
        value: (_vm.dataportformData.ruleselects.length > 1),
        expression: "dataportformData.ruleselects.length >1"
      }],
      staticClass: "blue-button",
      on: {
        "click": function($event) {
          _vm.deleteTestManageRules(i)
        }
      }
    }, [_vm._v("删除")]), _vm._v(" "), _c('button', {
      staticClass: "gray-button",
      attrs: {
        "disabled": "disabled"
      }
    }, [_vm._v("测试规则")])]], 2)])])])]
  })], 2)]), _vm._v(" "), _c('div', {
    staticClass: "dialogSubDiv"
  }, [_c('div', {
    staticClass: "subDivTitle",
    staticStyle: {
      "line-height": "20px"
    }
  }, [_vm._v("自定义报警回调API")]), _vm._v(" "), _c('div', {
    staticClass: "subDivContent"
  }, [_c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.dataportformData.callbackApi),
      expression: "dataportformData.callbackApi"
    }],
    staticClass: "dataport-dialog-name",
    attrs: {
      "type": "text",
      "placeholder": ""
    },
    domProps: {
      "value": (_vm.dataportformData.callbackApi)
    },
    on: {
      "input": function($event) {
        if ($event.target.composing) { return; }
        _vm.dataportformData.callbackApi = $event.target.value
      }
    }
  })])]), _vm._v(" "), _c('div', {
    staticClass: "dialogSubDiv"
  }, [_c('div', {
    staticClass: "subDivTitle requiredItem"
  }, [_vm._v("执行方案")]), _vm._v(" "), _c('div', {
    staticClass: "subDivContent"
  }, [_c('label', [_c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.dataportformData.isForever),
      expression: "dataportformData.isForever"
    }],
    attrs: {
      "type": "radio",
      "name": "alarm-level",
      "value": "1"
    },
    domProps: {
      "checked": _vm._q(_vm.dataportformData.isForever, "1")
    },
    on: {
      "__c": function($event) {
        _vm.dataportformData.isForever = "1"
      }
    }
  }), _vm._v("永久")]), _vm._v(" "), _c('label', [_c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.dataportformData.isForever),
      expression: "dataportformData.isForever"
    }],
    attrs: {
      "type": "radio",
      "name": "alarm-level",
      "value": "0"
    },
    domProps: {
      "checked": _vm._q(_vm.dataportformData.isForever, "0")
    },
    on: {
      "__c": function($event) {
        _vm.dataportformData.isForever = "0"
      }
    }
  }), _vm._v("一次性")]), _vm._v(" "), (_vm.dataportformData.isForever == 1) ? _c('div', {
    staticClass: "subDivCard",
    staticStyle: {
      "min-height": "50px"
    }
  }, [_c('label', {
    staticClass: "info-label"
  }, [_vm._v("监控频率"), _c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.dataportformData.foreverFrequence),
      expression: "dataportformData.foreverFrequence"
    }],
    staticClass: "foreverFrequence sm-size",
    attrs: {
      "type": "number",
      "placeholder": "",
      "min": "1"
    },
    domProps: {
      "value": (_vm.dataportformData.foreverFrequence)
    },
    on: {
      "input": function($event) {
        if ($event.target.composing) { return; }
        _vm.dataportformData.foreverFrequence = $event.target.value
      },
      "blur": function($event) {
        _vm.$forceUpdate()
      }
    }
  }), _vm._v("分钟(m)")])]) : _vm._e()])]), _vm._v(" "), _c('div', {
    staticClass: "dialogSubDiv"
  }, [_c('div', {
    staticClass: "subDivTitle requiredItem"
  }, [_vm._v("监控权限组")]), _vm._v(" "), _c('div', {
    staticClass: "subDivContent"
  }, [_c('select', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.dataportformData.permissionSelected),
      expression: "dataportformData.permissionSelected"
    }],
    staticClass: "long-select",
    attrs: {
      "name": ""
    },
    on: {
      "change": function($event) {
        var $$selectedVal = Array.prototype.filter.call($event.target.options, function(o) {
          return o.selected
        }).map(function(o) {
          var val = "_value" in o ? o._value : o.value;
          return val
        });
        _vm.dataportformData.permissionSelected = $event.target.multiple ? $$selectedVal : $$selectedVal[0]
      }
    }
  }, _vm._l((_vm.permissionList), function(value, index) {
    return _c('option', {
      domProps: {
        "value": index
      }
    }, [_vm._v(_vm._s(value.class_name))])
  }))])]), _vm._v(" "), _c('div', {
    staticClass: "dialogSubDiv"
  }, [_c('div', {
    staticClass: "subDivTitle requiredItem"
  }, [_vm._v("报警配置")]), _vm._v(" "), _c('div', {
    staticClass: "subDivContent"
  }, [_c('div', {
    staticClass: "subDivCard"
  }, [_c('div', {}, [_c('label', {
    staticClass: "info-label"
  }, [_vm._v("监控报警组")]), _vm._v(" "), _c('select', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.dataportformData.alarmSelected),
      expression: "dataportformData.alarmSelected"
    }],
    staticClass: "long-select",
    attrs: {
      "name": ""
    },
    on: {
      "change": function($event) {
        var $$selectedVal = Array.prototype.filter.call($event.target.options, function(o) {
          return o.selected
        }).map(function(o) {
          var val = "_value" in o ? o._value : o.value;
          return val
        });
        _vm.dataportformData.alarmSelected = $event.target.multiple ? $$selectedVal : $$selectedVal[0]
      }
    }
  }, _vm._l((_vm.alarmList), function(value, index) {
    return _c('option', {
      domProps: {
        "value": index
      }
    }, [_vm._v(_vm._s(value.class_name))])
  }))]), _vm._v(" "), _c('span', {
    staticClass: "cardContent"
  }, [_vm._v("邮件报警频率：连续"), _c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.dataportformData.mailCount),
      expression: "dataportformData.mailCount"
    }],
    staticClass: "dialog-short-input email-alarm-rates",
    attrs: {
      "type": "number",
      "min": "0"
    },
    domProps: {
      "value": (_vm.dataportformData.mailCount)
    },
    on: {
      "input": function($event) {
        if ($event.target.composing) { return; }
        _vm.dataportformData.mailCount = $event.target.value
      },
      "blur": function($event) {
        _vm.$forceUpdate()
      }
    }
  }), _vm._v("次失败后触发报警")]), _vm._v(" "), _c('span', {
    staticClass: "cardContent"
  }, [_vm._v("短信报警频率：连续"), _c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.dataportformData.messageCount),
      expression: "dataportformData.messageCount"
    }],
    staticClass: "dialog-short-input message-alarm-rates",
    attrs: {
      "type": "number",
      "min": "0"
    },
    domProps: {
      "value": (_vm.dataportformData.messageCount)
    },
    on: {
      "input": function($event) {
        if ($event.target.composing) { return; }
        _vm.dataportformData.messageCount = $event.target.value
      },
      "blur": function($event) {
        _vm.$forceUpdate()
      }
    }
  }), _vm._v("次失败后触发报警")])])])]), _vm._v(" "), _c('div', {
    staticClass: "dialogSubDiv"
  }, [_c('div', {
    staticClass: "subDivTitle requiredItem"
  }, [_vm._v("有效监控时间")]), _vm._v(" "), _c('div', {
    staticClass: "subDivContent"
  }, [_c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.dataportformData.startTime),
      expression: "dataportformData.startTime"
    }],
    staticClass: "validtime",
    attrs: {
      "type": "text"
    },
    domProps: {
      "value": (_vm.dataportformData.startTime)
    },
    on: {
      "input": function($event) {
        if ($event.target.composing) { return; }
        _vm.dataportformData.startTime = $event.target.value
      }
    }
  }), _vm._v(" 至 "), _c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.dataportformData.endTime),
      expression: "dataportformData.endTime"
    }],
    staticClass: "validtime",
    attrs: {
      "type": "text"
    },
    domProps: {
      "value": (_vm.dataportformData.endTime)
    },
    on: {
      "input": function($event) {
        if ($event.target.composing) { return; }
        _vm.dataportformData.endTime = $event.target.value
      }
    }
  })])]), _vm._v(" "), _c('div', {
    staticClass: "dialogButtonDiv"
  }, [_c('a', {
    directives: [{
      name: "show",
      rawName: "v-show",
      value: (this.dataportformData.isShowSavebtn),
      expression: "this.dataportformData.isShowSavebtn"
    }],
    staticClass: "dialog-blue-button",
    attrs: {
      "href": "javascript:;"
    },
    on: {
      "click": _vm.addHttp
    }
  }, [_vm._v("保存")]), _vm._v(" "), _c('a', {
    staticClass: "dialog-gray-button",
    attrs: {
      "href": "javascript:;"
    },
    on: {
      "click": _vm.hideDialog
    }
  }, [_vm._v("取消")])])])])])])
},staticRenderFns: []}

/***/ }),
/* 93 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    staticClass: "SideRight"
  }, [_c('SideLeft'), _vm._v(" "), _c('div', {
    staticClass: "manage-main"
  }, [_c('div', {
    staticClass: "topbox"
  }, [_c('div', {
    staticClass: "manageTop"
  }, [_c('span', {
    staticClass: "nowrap"
  }, [_c('label', {
    attrs: {
      "for": "monitor-type"
    }
  }, [_vm._v("监控类型")]), _vm._v(" "), _c('select', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.formInitData.monitorTypeSelectedID),
      expression: "formInitData.monitorTypeSelectedID"
    }],
    staticClass: "manage-select",
    attrs: {
      "id": "monitor-type"
    },
    on: {
      "change": [function($event) {
        var $$selectedVal = Array.prototype.filter.call($event.target.options, function(o) {
          return o.selected
        }).map(function(o) {
          var val = "_value" in o ? o._value : o.value;
          return val
        });
        _vm.formInitData.monitorTypeSelectedID = $event.target.multiple ? $$selectedVal : $$selectedVal[0]
      }, function($event) {
        _vm.getTableList(_vm.formInitData.monitorTypeSelectedID)
      }]
    }
  }, _vm._l((_vm.formInitData.monitorType), function(option, index) {
    return _c('option', {
      domProps: {
        "value": index
      }
    }, [_vm._v(_vm._s(option))])
  }))])]), _vm._v(" "), _c('div', {
    staticClass: "searchDetail"
  }, [_c('div', {
    staticClass: "manageDetail"
  }, [_c('span', {
    staticClass: "nowrap"
  }, [_c('label', {
    attrs: {
      "for": "item-name"
    }
  }, [_vm._v("策略名称")]), _c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.formInitData.itemname),
      expression: "formInitData.itemname"
    }],
    staticClass: "manage-input",
    attrs: {
      "type": "text",
      "id": "item-name",
      "required": ""
    },
    domProps: {
      "value": (_vm.formInitData.itemname)
    },
    on: {
      "input": function($event) {
        if ($event.target.composing) { return; }
        _vm.formInitData.itemname = $event.target.value
      }
    }
  })]), _vm._v(" "), _c('span', {
    staticClass: "nowrap input-idbox"
  }, [_c('label', {
    attrs: {
      "for": "item-id"
    }
  }, [_vm._v("策略项ID")]), _c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.formInitData.itemid),
      expression: "formInitData.itemid"
    }],
    staticClass: "manage-input ",
    attrs: {
      "type": "number",
      "id": "item-id"
    },
    domProps: {
      "value": (_vm.formInitData.itemid)
    },
    on: {
      "input": function($event) {
        if ($event.target.composing) { return; }
        _vm.formInitData.itemid = $event.target.value
      },
      "blur": function($event) {
        _vm.$forceUpdate()
      }
    }
  })]), _vm._v(" "), _c('span', {
    staticClass: "nowrap"
  }, [_c('label', {
    attrs: {
      "for": "monitor-status"
    }
  }, [_vm._v("监控项状态")]), _vm._v(" "), _c('select', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.formInitData.statusSelect),
      expression: "formInitData.statusSelect"
    }],
    staticClass: "manage-select",
    attrs: {
      "id": "monitor-status"
    },
    on: {
      "change": function($event) {
        var $$selectedVal = Array.prototype.filter.call($event.target.options, function(o) {
          return o.selected
        }).map(function(o) {
          var val = "_value" in o ? o._value : o.value;
          return val
        });
        _vm.formInitData.statusSelect = $event.target.multiple ? $$selectedVal : $$selectedVal[0]
      }
    }
  }, _vm._l((_vm.formInitData.statusList), function(value) {
    return _c('option', {
      attrs: {
        "value": ""
      },
      domProps: {
        "value": value
      }
    }, [_vm._v(_vm._s(value))])
  }))]), _vm._v(" "), _c('span', {
    staticClass: "nowrap"
  }, [_c('label', {
    attrs: {
      "for": "monitor-level"
    }
  }, [_vm._v("监控级别")]), _vm._v(" "), _c('select', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.formInitData.levelSelect),
      expression: "formInitData.levelSelect"
    }],
    staticClass: "manage-select",
    attrs: {
      "id": "monitor-level"
    },
    on: {
      "change": function($event) {
        var $$selectedVal = Array.prototype.filter.call($event.target.options, function(o) {
          return o.selected
        }).map(function(o) {
          var val = "_value" in o ? o._value : o.value;
          return val
        });
        _vm.formInitData.levelSelect = $event.target.multiple ? $$selectedVal : $$selectedVal[0]
      }
    }
  }, _vm._l((_vm.formInitData.levelList), function(value) {
    return _c('option', {
      attrs: {
        "value": ""
      },
      domProps: {
        "value": value
      }
    }, [_vm._v(_vm._s(value))])
  }))]), _vm._v(" "), _c('a', {
    staticClass: "white-button",
    attrs: {
      "href": "javascript:;"
    },
    on: {
      "click": _vm.getdatas
    }
  }, [_vm._v("查询")])])]), _vm._v(" "), _c('div', {
    staticClass: "configList"
  }, [_c('keep-alive', [_c(_vm.dynamics, {
    tag: "component",
    attrs: {
      "httptabledata": _vm.datas
    },
    on: {
      "update:httptabledata": function($event) {
        _vm.datas = $event
      }
    }
  })], 1)], 1), _vm._v(" "), _c('TurnPage', {
    attrs: {
      "allpage": _vm.allpage,
      "tableTotal": _vm.tableTotal,
      "type": _vm.formInitData.monitorTypeSelectedID
    }
  })], 1)])], 1)
},staticRenderFns: []}

/***/ }),
/* 94 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    staticClass: "SideRight"
  }, _vm._l((_vm.alertDeatail), function(value, index) {
    return _c('div', {
      staticClass: "manage-main"
    }, [_c('div', {
      staticClass: "alarminfobox"
    }, [_c('div', {
      staticClass: "infoitembox"
    }, [_c('div', {
      staticClass: "itemtitle"
    }, [_vm._v("监控名称")]), _vm._v(" "), _c('div', {
      staticClass: "itemtext"
    }, [_vm._v(_vm._s(value.item_name))])]), _vm._v(" "), _c('div', {
      staticClass: "infoitembox"
    }, [_c('div', {
      staticClass: "itemtitle"
    }, [_vm._v("监控类别")]), _vm._v(" "), (value.item_type == 0) ? _c('div', {
      staticClass: "itemtext"
    }, [_vm._v("http可用性")]) : (value.item_type == 1) ? _c('div', {
      staticClass: "itemtext"
    }, [_vm._v("数据接口")]) : (value.item_type == 2) ? _c('div', {
      staticClass: "itemtext"
    }, [_vm._v("页面元素")]) : _vm._e()]), _vm._v(" "), _c('div', {
      staticClass: "infoitembox"
    }, [_c('div', {
      staticClass: "itemtitle"
    }, [_vm._v("监控URL")]), _vm._v(" "), _c('div', {
      staticClass: "itemtext"
    }, [_vm._v(_vm._s(value.item_url))])]), _vm._v(" "), _c('div', {
      staticClass: "infoitembox"
    }, [_c('div', {
      staticClass: "itemtitle"
    }, [_vm._v("报警详情")]), _vm._v(" "), _c('div', {
      staticClass: "itemtext"
    }, [_c('textarea', {
      attrs: {
        "readonly": "readonly"
      },
      domProps: {
        "value": value.alert_detail
      }
    })])]), _vm._v(" "), _c('div', {
      staticClass: "infoitembox"
    }, [_c('div', {
      staticClass: "itemtitle"
    }, [_vm._v("报警时间")]), _vm._v(" "), _c('div', {
      staticClass: "itemtext"
    }, [_vm._v(_vm._s(_vm._f("formatDate")(value.alert_time)))])]), _vm._v(" "), _c('div', {
      staticClass: "infoitembox"
    }, [_c('div', {
      staticClass: "itemtitle"
    }, [_vm._v("报警根因反馈")]), _vm._v(" "), _c('div', {
      staticClass: "itemtext"
    }, [_c('select', {
      directives: [{
        name: "model",
        rawName: "v-model",
        value: (_vm.reasonSelected),
        expression: "reasonSelected"
      }],
      attrs: {
        "name": "reasonpselect",
        "id": "reasonpselect"
      },
      on: {
        "change": [function($event) {
          var $$selectedVal = Array.prototype.filter.call($event.target.options, function(o) {
            return o.selected
          }).map(function(o) {
            var val = "_value" in o ? o._value : o.value;
            return val
          });
          _vm.reasonSelected = $event.target.multiple ? $$selectedVal : $$selectedVal[0]
        }, _vm.resetSecondSelected]
      }
    }, _vm._l((_vm.reasons), function(value, index) {
      return _c('option', {
        domProps: {
          "value": index
        }
      }, [_vm._v(_vm._s(value))])
    })), _vm._v(" "), (_vm.reasonSelected == 0) ? [(_vm.secondReason1.length > 0) ? _c('select', {
      directives: [{
        name: "model",
        rawName: "v-model",
        value: (_vm.secondReasonSelected),
        expression: "secondReasonSelected"
      }],
      attrs: {
        "name": "secondreasonpselect",
        "id": "secondreasonpselect"
      },
      on: {
        "change": function($event) {
          var $$selectedVal = Array.prototype.filter.call($event.target.options, function(o) {
            return o.selected
          }).map(function(o) {
            var val = "_value" in o ? o._value : o.value;
            return val
          });
          _vm.secondReasonSelected = $event.target.multiple ? $$selectedVal : $$selectedVal[0]
        }
      }
    }, _vm._l((_vm.secondReason1), function(value, index) {
      return _c('option', {
        domProps: {
          "value": index
        }
      }, [_vm._v(_vm._s(value))])
    })) : _vm._e()] : (_vm.reasonSelected == 1) ? [(_vm.secondReason2.length > 0) ? _c('select', {
      directives: [{
        name: "model",
        rawName: "v-model",
        value: (_vm.secondReasonSelected),
        expression: "secondReasonSelected"
      }],
      attrs: {
        "name": "secondreasonpselect",
        "id": "secondreasonpselect"
      },
      on: {
        "change": function($event) {
          var $$selectedVal = Array.prototype.filter.call($event.target.options, function(o) {
            return o.selected
          }).map(function(o) {
            var val = "_value" in o ? o._value : o.value;
            return val
          });
          _vm.secondReasonSelected = $event.target.multiple ? $$selectedVal : $$selectedVal[0]
        }
      }
    }, _vm._l((_vm.secondReason2), function(value, index) {
      return _c('option', {
        domProps: {
          "value": index
        }
      }, [_vm._v(_vm._s(value))])
    })) : _vm._e()] : (_vm.reasonSelected == 2) ? [(_vm.secondReason3.length > 0) ? _c('select', {
      directives: [{
        name: "model",
        rawName: "v-model",
        value: (_vm.secondReasonSelected),
        expression: "secondReasonSelected"
      }],
      attrs: {
        "name": "secondreasonpselect",
        "id": "secondreasonpselect"
      },
      on: {
        "change": function($event) {
          var $$selectedVal = Array.prototype.filter.call($event.target.options, function(o) {
            return o.selected
          }).map(function(o) {
            var val = "_value" in o ? o._value : o.value;
            return val
          });
          _vm.secondReasonSelected = $event.target.multiple ? $$selectedVal : $$selectedVal[0]
        }
      }
    }, _vm._l((_vm.secondReason3), function(value, index) {
      return _c('option', {
        domProps: {
          "value": index
        }
      }, [_vm._v(_vm._s(value))])
    })) : _vm._e()] : (_vm.reasonSelected == 3) ? [(_vm.secondReason4.length > 0) ? _c('select', {
      directives: [{
        name: "model",
        rawName: "v-model",
        value: (_vm.secondReasonSelected),
        expression: "secondReasonSelected"
      }],
      attrs: {
        "name": "secondreasonpselect",
        "id": "secondreasonpselect"
      },
      on: {
        "change": function($event) {
          var $$selectedVal = Array.prototype.filter.call($event.target.options, function(o) {
            return o.selected
          }).map(function(o) {
            var val = "_value" in o ? o._value : o.value;
            return val
          });
          _vm.secondReasonSelected = $event.target.multiple ? $$selectedVal : $$selectedVal[0]
        }
      }
    }, _vm._l((_vm.secondReason4), function(value, index) {
      return _c('option', {
        domProps: {
          "value": index
        }
      }, [_vm._v(_vm._s(value))])
    })) : _vm._e()] : (_vm.reasonSelected == 4) ? [(_vm.secondReason5.length > 0) ? _c('select', {
      directives: [{
        name: "model",
        rawName: "v-model",
        value: (_vm.secondReasonSelected),
        expression: "secondReasonSelected"
      }],
      attrs: {
        "name": "secondreasonpselect",
        "id": "secondreasonpselect"
      },
      on: {
        "change": function($event) {
          var $$selectedVal = Array.prototype.filter.call($event.target.options, function(o) {
            return o.selected
          }).map(function(o) {
            var val = "_value" in o ? o._value : o.value;
            return val
          });
          _vm.secondReasonSelected = $event.target.multiple ? $$selectedVal : $$selectedVal[0]
        }
      }
    }, _vm._l((_vm.secondReason5), function(value, index) {
      return _c('option', {
        domProps: {
          "value": index
        }
      }, [_vm._v(_vm._s(value))])
    })) : _vm._e()] : (_vm.reasonSelected == 5) ? [(_vm.secondReason6.length > 0) ? _c('select', {
      directives: [{
        name: "model",
        rawName: "v-model",
        value: (_vm.secondReasonSelected),
        expression: "secondReasonSelected"
      }],
      attrs: {
        "name": "secondreasonpselect",
        "id": "secondreasonpselect"
      },
      on: {
        "change": function($event) {
          var $$selectedVal = Array.prototype.filter.call($event.target.options, function(o) {
            return o.selected
          }).map(function(o) {
            var val = "_value" in o ? o._value : o.value;
            return val
          });
          _vm.secondReasonSelected = $event.target.multiple ? $$selectedVal : $$selectedVal[0]
        }
      }
    }, _vm._l((_vm.secondReason6), function(value, index) {
      return _c('option', {
        domProps: {
          "value": index
        }
      }, [_vm._v(_vm._s(value))])
    })) : _vm._e()] : (_vm.reasonSelected == 6) ? [(_vm.secondReason7.length > 0) ? _c('select', {
      directives: [{
        name: "model",
        rawName: "v-model",
        value: (_vm.secondReasonSelected),
        expression: "secondReasonSelected"
      }],
      attrs: {
        "name": "secondreasonpselect",
        "id": "secondreasonpselect"
      },
      on: {
        "change": function($event) {
          var $$selectedVal = Array.prototype.filter.call($event.target.options, function(o) {
            return o.selected
          }).map(function(o) {
            var val = "_value" in o ? o._value : o.value;
            return val
          });
          _vm.secondReasonSelected = $event.target.multiple ? $$selectedVal : $$selectedVal[0]
        }
      }
    }, _vm._l((_vm.secondReason7), function(value, index) {
      return _c('option', {
        domProps: {
          "value": index
        }
      }, [_vm._v(_vm._s(value))])
    })) : _vm._e()] : _vm._e()], 2)]), _vm._v(" "), _c('div', {
      staticClass: "infoitembox"
    }, [_c('div', {
      staticClass: "itemtitle"
    }, [_vm._v("问题严重等级")]), _vm._v(" "), _c('div', {
      staticClass: "itemtext"
    }, [_c('select', {
      directives: [{
        name: "model",
        rawName: "v-model",
        value: (_vm.problemgradeSelected),
        expression: "problemgradeSelected"
      }],
      attrs: {
        "name": "problemgrade",
        "id": "problemgrade"
      },
      on: {
        "change": function($event) {
          var $$selectedVal = Array.prototype.filter.call($event.target.options, function(o) {
            return o.selected
          }).map(function(o) {
            var val = "_value" in o ? o._value : o.value;
            return val
          });
          _vm.problemgradeSelected = $event.target.multiple ? $$selectedVal : $$selectedVal[0]
        }
      }
    }, _vm._l((_vm.problemgrades), function(value, index) {
      return _c('option', {
        domProps: {
          "value": index
        }
      }, [_vm._v(_vm._s(value))])
    }))])]), _vm._v(" "), _c('div', {
      staticClass: "infoitembox"
    }, [_c('div', {
      staticClass: "itemtitle"
    }, [_vm._v("反馈时间")]), _vm._v(" "), _c('div', {
      staticClass: "itemtext"
    }, [(value.feedbacktime > 0) ? _c('p', [_vm._v(_vm._s(_vm._f("formatDate")(value.feedbacktime)))]) : _vm._e()])]), _vm._v(" "), _c('div', {
      staticClass: "infoitembox"
    }, [_c('div', {
      staticClass: "itemtitle"
    }, [_vm._v("反馈详情")]), _vm._v(" "), _c('div', {
      staticClass: "itemtext"
    }, [_c('textarea', {
      directives: [{
        name: "model",
        rawName: "v-model",
        value: (_vm.feedbackdetail),
        expression: "feedbackdetail"
      }],
      staticClass: "inputtextarea",
      domProps: {
        "value": (_vm.feedbackdetail)
      },
      on: {
        "input": function($event) {
          if ($event.target.composing) { return; }
          _vm.feedbackdetail = $event.target.value
        }
      }
    })])]), _vm._v(" "), _c('div', {
      staticClass: "infoitembox"
    }, [_c('div', {
      staticClass: "itemtitle"
    }, [_vm._v("实际损失描述")]), _vm._v(" "), _c('div', {
      staticClass: "itemtext"
    }, [_c('textarea', {
      directives: [{
        name: "model",
        rawName: "v-model",
        value: (_vm.lossdescribe),
        expression: "lossdescribe"
      }],
      staticClass: "inputtextarea",
      domProps: {
        "value": (_vm.lossdescribe)
      },
      on: {
        "input": function($event) {
          if ($event.target.composing) { return; }
          _vm.lossdescribe = $event.target.value
        }
      }
    })])]), _vm._v(" "), _c('div', {
      staticClass: "infoitembox"
    }, [_c('div', {
      staticClass: "itemtitle"
    }), _vm._v(" "), _c('div', {
      staticClass: "itemtext buttons"
    }, [_c('a', {
      directives: [{
        name: "show",
        rawName: "v-show",
        value: (_vm.isshowSave),
        expression: "isshowSave"
      }],
      staticClass: "dialog-blue-button",
      attrs: {
        "href": "javascript:;"
      },
      on: {
        "click": _vm.save
      }
    }, [_vm._v("保存")]), _vm._v(" "), _c('router-link', {
      staticClass: "dialog-gray-button",
      attrs: {
        "to": "/alarm",
        "target": "_blank"
      }
    }, [_vm._v("取消")])], 1)])])])
  }))
},staticRenderFns: []}

/***/ }),
/* 95 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    staticClass: "dialog"
  }, [_c('div', {
    staticClass: "dialogOverlay"
  }), _vm._v(" "), _c('div', {
    staticClass: "dialogContent"
  }, [_c('div', {
    staticClass: "dialogClose",
    on: {
      "click": _vm.hideDialog
    }
  }), _vm._v(" "), _c('div', {
    staticClass: "dialogDetail"
  }, [_c('div', {
    staticClass: "dialogTitle"
  }, [_vm._v(_vm._s(_vm.formData.dialogTitle))]), _vm._v(" "), _c('div', {
    staticClass: "dialogDiv"
  }, [_c('div', {
    staticClass: "dialogSubDiv"
  }, [_c('div', {
    staticClass: "subDivTitle requiredItem"
  }, [_vm._v("监控项名称")]), _vm._v(" "), _c('div', {
    staticClass: "subDivContent"
  }, [_c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.formData.itemName),
      expression: "formData.itemName"
    }],
    staticClass: "alarm-config-dialog-name",
    attrs: {
      "type": "text",
      "placeholder": ""
    },
    domProps: {
      "value": (_vm.formData.itemName)
    },
    on: {
      "input": function($event) {
        if ($event.target.composing) { return; }
        _vm.formData.itemName = $event.target.value
      }
    }
  })])]), _vm._v(" "), _c('div', {
    staticClass: "dialogSubDiv"
  }, [_c('div', {
    staticClass: "subDivTitle requiredItem"
  }, [_vm._v("监控分级")]), _vm._v(" "), _c('div', {
    staticClass: "subDivContent"
  }, [_c('label', [_c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.formData.levelRadio),
      expression: "formData.levelRadio"
    }],
    attrs: {
      "type": "radio",
      "name": "level",
      "value": "0",
      "id": "level0"
    },
    domProps: {
      "checked": _vm._q(_vm.formData.levelRadio, "0")
    },
    on: {
      "__c": function($event) {
        _vm.formData.levelRadio = "0"
      }
    }
  }), _c('span', {
    attrs: {
      "for": "level0"
    }
  }, [_vm._v("0级")])]), _vm._v(" "), _c('label', [_c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.formData.levelRadio),
      expression: "formData.levelRadio"
    }],
    attrs: {
      "type": "radio",
      "name": "level",
      "value": "1",
      "id": "level1"
    },
    domProps: {
      "checked": _vm._q(_vm.formData.levelRadio, "1")
    },
    on: {
      "__c": function($event) {
        _vm.formData.levelRadio = "1"
      }
    }
  }), _c('span', {
    attrs: {
      "for": "level1"
    }
  }, [_vm._v("1级")])]), _vm._v(" "), _c('label', [_c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.formData.levelRadio),
      expression: "formData.levelRadio"
    }],
    attrs: {
      "type": "radio",
      "name": "level",
      "value": "2",
      "id": "level2"
    },
    domProps: {
      "checked": _vm._q(_vm.formData.levelRadio, "2")
    },
    on: {
      "__c": function($event) {
        _vm.formData.levelRadio = "2"
      }
    }
  }), _c('span', {
    attrs: {
      "for": "level2"
    }
  }, [_vm._v("2级")])])])]), _vm._v(" "), _c('div', {
    staticClass: "dialogSubDiv"
  }, [_c('div', {
    staticClass: "subDivTitle requiredItem"
  }, [_vm._v("服务url")]), _vm._v(" "), _c('div', {
    staticClass: "subDivContent"
  }, [_c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.formData.inputServerUrl),
      expression: "formData.inputServerUrl"
    }],
    staticClass: "alarm-config-dialog-name",
    attrs: {
      "type": "text",
      "placeholder": ""
    },
    domProps: {
      "value": (_vm.formData.inputServerUrl)
    },
    on: {
      "input": function($event) {
        if ($event.target.composing) { return; }
        _vm.formData.inputServerUrl = $event.target.value
      }
    }
  })])]), _vm._v(" "), _c('div', {
    staticClass: "dialogSubDiv"
  }, [_c('div', {
    staticClass: "subDivTitle"
  }, [_vm._v("加参")]), _vm._v(" "), _c('div', {
    staticClass: "subDivContent"
  }, [_c('label', {
    staticStyle: {
      "width": "100%"
    }
  }, [_c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.formData.isAddPlat),
      expression: "formData.isAddPlat"
    }],
    attrs: {
      "type": "checkbox"
    },
    domProps: {
      "checked": Array.isArray(_vm.formData.isAddPlat) ? _vm._i(_vm.formData.isAddPlat, null) > -1 : (_vm.formData.isAddPlat)
    },
    on: {
      "__c": function($event) {
        var $$a = _vm.formData.isAddPlat,
          $$el = $event.target,
          $$c = $$el.checked ? (true) : (false);
        if (Array.isArray($$a)) {
          var $$v = null,
            $$i = _vm._i($$a, $$v);
          if ($$c) {
            $$i < 0 && (_vm.formData.isAddPlat = $$a.concat($$v))
          } else {
            $$i > -1 && (_vm.formData.isAddPlat = $$a.slice(0, $$i).concat($$a.slice($$i + 1)))
          }
        } else {
          _vm.formData.isAddPlat = $$c
        }
      }
    }
  }), _vm._v("请求时URL是否加入参数'_plat=monitor'")])])]), _vm._v(" "), _c('div', {
    staticClass: "dialogSubDiv"
  }, [_c('div', {
    staticClass: "subDivTitle"
  }, [_vm._v("请求方式")]), _vm._v(" "), _c('div', {
    staticClass: "subDivContent"
  }, [_c('label', [_c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.formData.isAndPost),
      expression: "formData.isAndPost"
    }],
    attrs: {
      "type": "radio",
      "value": "0"
    },
    domProps: {
      "checked": _vm._q(_vm.formData.isAndPost, "0")
    },
    on: {
      "__c": function($event) {
        _vm.formData.isAndPost = "0"
      }
    }
  }), _vm._v("get")]), _vm._v(" "), _c('label', [_c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.formData.isAndPost),
      expression: "formData.isAndPost"
    }],
    attrs: {
      "type": "radio",
      "value": "1"
    },
    domProps: {
      "checked": _vm._q(_vm.formData.isAndPost, "1")
    },
    on: {
      "__c": function($event) {
        _vm.formData.isAndPost = "1"
      }
    }
  }), _vm._v("post")]), _vm._v(" "), (_vm.formData.isAndPost == 1) ? _c('div', {
    staticClass: "subDivCard"
  }, [_c('div', {
    staticClass: "dialogSubDiv"
  }, [_c('div', {
    staticClass: "subDivTitle"
  }, [_vm._v("postData格式")]), _vm._v(" "), _c('div', {
    staticClass: "subDivContent",
    staticStyle: {
      "display": "inline-block",
      "width": "400px"
    }
  }, [_c('select', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.formData.formatSelect),
      expression: "formData.formatSelect"
    }],
    staticClass: "long-select",
    attrs: {
      "name": "format"
    },
    on: {
      "change": function($event) {
        var $$selectedVal = Array.prototype.filter.call($event.target.options, function(o) {
          return o.selected
        }).map(function(o) {
          var val = "_value" in o ? o._value : o.value;
          return val
        });
        _vm.formData.formatSelect = $event.target.multiple ? $$selectedVal : $$selectedVal[0]
      }
    }
  }, _vm._l((_vm.formats), function(value, index) {
    return _c('option', {
      domProps: {
        "value": index
      }
    }, [_vm._v(_vm._s(value))])
  }))])]), _vm._v(" "), _c('textarea', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.formData.andPostCon),
      expression: "formData.andPostCon"
    }],
    staticStyle: {
      "width": "100%",
      "height": "100px"
    },
    attrs: {
      "placeholder": "post数据格式为Json或urlEncode,例如：{\"key\":\"value\"}",
      "id": "andPostCon"
    },
    domProps: {
      "value": (_vm.formData.andPostCon)
    },
    on: {
      "input": function($event) {
        if ($event.target.composing) { return; }
        _vm.formData.andPostCon = $event.target.value
      }
    }
  })]) : _vm._e(), _vm._v(" "), (_vm.formData.isAndPost == 0) ? _c('div', {
    staticClass: "subDivCard"
  }, [_c('div', {
    staticClass: "dialogSubDiv"
  }, [_c('div', {
    staticClass: "subDivTitle",
    staticStyle: {
      "color": "#ccc"
    }
  }, [_vm._v("postData格式")]), _vm._v(" "), _c('div', {
    staticClass: "subDivContent",
    staticStyle: {
      "display": "inline-block",
      "width": "400px"
    }
  }, [_c('select', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.formData.formatSelect),
      expression: "formData.formatSelect"
    }],
    staticClass: "long-select",
    attrs: {
      "name": "format",
      "disabled": "disabled"
    },
    on: {
      "change": function($event) {
        var $$selectedVal = Array.prototype.filter.call($event.target.options, function(o) {
          return o.selected
        }).map(function(o) {
          var val = "_value" in o ? o._value : o.value;
          return val
        });
        _vm.formData.formatSelect = $event.target.multiple ? $$selectedVal : $$selectedVal[0]
      }
    }
  }, _vm._l((_vm.formats), function(value, index) {
    return _c('option', {
      domProps: {
        "value": index
      }
    }, [_vm._v(_vm._s(value))])
  }))])]), _vm._v(" "), _c('textarea', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.formData.andPostCon),
      expression: "formData.andPostCon"
    }],
    staticStyle: {
      "width": "100%",
      "height": "100px"
    },
    attrs: {
      "placeholder": "post数据格式为Json或urlEncode,例如：{\"key\":\"value\"}",
      "id": "andPostCon",
      "disabled": "disabled"
    },
    domProps: {
      "value": (_vm.formData.andPostCon)
    },
    on: {
      "input": function($event) {
        if ($event.target.composing) { return; }
        _vm.formData.andPostCon = $event.target.value
      }
    }
  })]) : _vm._e()])]), _vm._v(" "), _c('div', {
    staticClass: "dialogSubDiv"
  }, [_c('div', {
    staticClass: "subDivTitle"
  }, [_vm._v("账号选择")]), _vm._v(" "), _c('div', {
    staticClass: "subDivContent"
  }, [_c('div', {
    staticClass: "subDivCard"
  }, [_c('label', [_c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.formData.isNeedAccount),
      expression: "formData.isNeedAccount"
    }],
    attrs: {
      "type": "radio",
      "name": "isNeedAccount",
      "value": "0"
    },
    domProps: {
      "checked": _vm._q(_vm.formData.isNeedAccount, "0")
    },
    on: {
      "__c": function($event) {
        _vm.formData.isNeedAccount = "0"
      }
    }
  }), _vm._v("不需要用户账号")]), _vm._v(" "), _c('label', [_c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.formData.isNeedAccount),
      expression: "formData.isNeedAccount"
    }],
    attrs: {
      "type": "radio",
      "name": "isNeedAccount",
      "value": "1"
    },
    domProps: {
      "checked": _vm._q(_vm.formData.isNeedAccount, "1")
    },
    on: {
      "__c": function($event) {
        _vm.formData.isNeedAccount = "1"
      }
    }
  }), _vm._v("需要用户账号")]), _vm._v(" "), _c('div', {}, [(_vm.formData.isNeedAccount == 0) ? _c('select', {
    staticClass: "long-select",
    attrs: {
      "name": "",
      "disabled": "disabled"
    }
  }, [_c('option')]) : _c('select', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.formData.userSelected),
      expression: "formData.userSelected"
    }],
    staticClass: "long-select",
    attrs: {
      "name": ""
    },
    on: {
      "change": function($event) {
        var $$selectedVal = Array.prototype.filter.call($event.target.options, function(o) {
          return o.selected
        }).map(function(o) {
          var val = "_value" in o ? o._value : o.value;
          return val
        });
        _vm.formData.userSelected = $event.target.multiple ? $$selectedVal : $$selectedVal[0]
      }
    }
  }, _vm._l((_vm.userAccounts), function(value) {
    return _c('option', {
      domProps: {
        "value": value.acount_name
      }
    }, [_vm._v(_vm._s(value.acount_name))])
  }))])])])]), _vm._v(" "), _c('div', {
    staticClass: "dialogSubDiv"
  }, [_c('div', {
    staticClass: "subDivTitle",
    staticStyle: {
      "line-height": "30px"
    }
  }, [_vm._v("获取页面数据")]), _vm._v(" "), _c('div', {
    staticClass: "subDivContent"
  }, [_c('button', {
    staticClass: "blue-button",
    on: {
      "click": _vm.testgetPageData
    }
  }, [_vm._v("获取数据")])])]), _vm._v(" "), _c('div', {
    staticClass: "dialogSubDiv"
  }, [_c('div', {
    staticClass: "subDivTitle"
  }, [_vm._v("页面数据表现")]), _vm._v(" "), _c('div', {
    staticClass: "subDivContent"
  }, [_c('textarea', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.formData.eleshow),
      expression: "formData.eleshow"
    }],
    staticClass: "long-textarea",
    attrs: {
      "placeholder": "",
      "id": "eleshow"
    },
    domProps: {
      "value": (_vm.formData.eleshow)
    },
    on: {
      "input": function($event) {
        if ($event.target.composing) { return; }
        _vm.formData.eleshow = $event.target.value
      }
    }
  })])]), _vm._v(" "), _c('div', {
    staticClass: "dialogSubDiv"
  }, [_c('div', {
    staticClass: "subDivTitle"
  }, [_vm._v("referer")]), _vm._v(" "), _c('div', {
    staticClass: "subDivContent"
  }, [_c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.formData.referer),
      expression: "formData.referer"
    }],
    staticClass: "https-dialog-referer",
    attrs: {
      "type": "text",
      "placeholder": ""
    },
    domProps: {
      "value": (_vm.formData.referer)
    },
    on: {
      "input": function($event) {
        if ($event.target.composing) { return; }
        _vm.formData.referer = $event.target.value
      }
    }
  })])]), _vm._v(" "), _c('div', {
    staticClass: "dialogSubDiv"
  }, [_c('div', {
    staticClass: "subDivTitle"
  }, [_vm._v("userAgent")]), _vm._v(" "), _c('div', {
    staticClass: "subDivContent"
  }, [_c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.formData.userAgent),
      expression: "formData.userAgent"
    }],
    staticClass: "https-dialog-useragent",
    attrs: {
      "type": "text",
      "placeholder": ""
    },
    domProps: {
      "value": (_vm.formData.userAgent)
    },
    on: {
      "input": function($event) {
        if ($event.target.composing) { return; }
        _vm.formData.userAgent = $event.target.value
      }
    }
  })])]), _vm._v(" "), _c('div', {
    staticClass: "dialogSubDiv"
  }, [_c('div', {
    staticClass: "subDivTitle requiredItem"
  }, [_vm._v("监控预期设置")]), _vm._v(" "), _c('div', {
    staticClass: "subDivContent"
  }, [_c('div', {
    staticClass: "info-label"
  }, [_vm._v("返回码:\n\t\t\t\t\t\t\t\t"), _c('span', {
    staticClass: "lebel-sm"
  }, [_c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.formData.criterion),
      expression: "formData.criterion"
    }],
    attrs: {
      "type": "checkbox",
      "id": "status200",
      "value": "200"
    },
    domProps: {
      "checked": Array.isArray(_vm.formData.criterion) ? _vm._i(_vm.formData.criterion, "200") > -1 : (_vm.formData.criterion)
    },
    on: {
      "__c": function($event) {
        var $$a = _vm.formData.criterion,
          $$el = $event.target,
          $$c = $$el.checked ? (true) : (false);
        if (Array.isArray($$a)) {
          var $$v = "200",
            $$i = _vm._i($$a, $$v);
          if ($$c) {
            $$i < 0 && (_vm.formData.criterion = $$a.concat($$v))
          } else {
            $$i > -1 && (_vm.formData.criterion = $$a.slice(0, $$i).concat($$a.slice($$i + 1)))
          }
        } else {
          _vm.formData.criterion = $$c
        }
      }
    }
  }), _c('label', {
    attrs: {
      "for": "status200"
    }
  }, [_vm._v("200")])]), _vm._v(" "), _c('span', {
    staticClass: "lebel-sm"
  }, [_c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.formData.criterion),
      expression: "formData.criterion"
    }],
    attrs: {
      "type": "checkbox",
      "id": "status201",
      "value": "201"
    },
    domProps: {
      "checked": Array.isArray(_vm.formData.criterion) ? _vm._i(_vm.formData.criterion, "201") > -1 : (_vm.formData.criterion)
    },
    on: {
      "__c": function($event) {
        var $$a = _vm.formData.criterion,
          $$el = $event.target,
          $$c = $$el.checked ? (true) : (false);
        if (Array.isArray($$a)) {
          var $$v = "201",
            $$i = _vm._i($$a, $$v);
          if ($$c) {
            $$i < 0 && (_vm.formData.criterion = $$a.concat($$v))
          } else {
            $$i > -1 && (_vm.formData.criterion = $$a.slice(0, $$i).concat($$a.slice($$i + 1)))
          }
        } else {
          _vm.formData.criterion = $$c
        }
      }
    }
  }), _c('label', {
    attrs: {
      "for": "status201"
    }
  }, [_vm._v("201")])]), _vm._v(" "), _c('span', {
    staticClass: "lebel-sm"
  }, [_c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.formData.criterion),
      expression: "formData.criterion"
    }],
    attrs: {
      "type": "checkbox",
      "id": "status202",
      "value": "202"
    },
    domProps: {
      "checked": Array.isArray(_vm.formData.criterion) ? _vm._i(_vm.formData.criterion, "202") > -1 : (_vm.formData.criterion)
    },
    on: {
      "__c": function($event) {
        var $$a = _vm.formData.criterion,
          $$el = $event.target,
          $$c = $$el.checked ? (true) : (false);
        if (Array.isArray($$a)) {
          var $$v = "202",
            $$i = _vm._i($$a, $$v);
          if ($$c) {
            $$i < 0 && (_vm.formData.criterion = $$a.concat($$v))
          } else {
            $$i > -1 && (_vm.formData.criterion = $$a.slice(0, $$i).concat($$a.slice($$i + 1)))
          }
        } else {
          _vm.formData.criterion = $$c
        }
      }
    }
  }), _c('label', {
    attrs: {
      "for": "status202"
    }
  }, [_vm._v("202")])]), _vm._v(" "), _c('span', {
    staticClass: "lebel-sm"
  }, [_c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.formData.criterion),
      expression: "formData.criterion"
    }],
    attrs: {
      "type": "checkbox",
      "id": "status206",
      "value": "206"
    },
    domProps: {
      "checked": Array.isArray(_vm.formData.criterion) ? _vm._i(_vm.formData.criterion, "206") > -1 : (_vm.formData.criterion)
    },
    on: {
      "__c": function($event) {
        var $$a = _vm.formData.criterion,
          $$el = $event.target,
          $$c = $$el.checked ? (true) : (false);
        if (Array.isArray($$a)) {
          var $$v = "206",
            $$i = _vm._i($$a, $$v);
          if ($$c) {
            $$i < 0 && (_vm.formData.criterion = $$a.concat($$v))
          } else {
            $$i > -1 && (_vm.formData.criterion = $$a.slice(0, $$i).concat($$a.slice($$i + 1)))
          }
        } else {
          _vm.formData.criterion = $$c
        }
      }
    }
  }), _c('label', {
    attrs: {
      "for": "status206"
    }
  }, [_vm._v("206")])]), _vm._v(" "), _c('span', {
    staticClass: "lebel-sm"
  }, [_c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.formData.criterion),
      expression: "formData.criterion"
    }],
    attrs: {
      "type": "checkbox",
      "id": "status301",
      "value": "301"
    },
    domProps: {
      "checked": Array.isArray(_vm.formData.criterion) ? _vm._i(_vm.formData.criterion, "301") > -1 : (_vm.formData.criterion)
    },
    on: {
      "__c": function($event) {
        var $$a = _vm.formData.criterion,
          $$el = $event.target,
          $$c = $$el.checked ? (true) : (false);
        if (Array.isArray($$a)) {
          var $$v = "301",
            $$i = _vm._i($$a, $$v);
          if ($$c) {
            $$i < 0 && (_vm.formData.criterion = $$a.concat($$v))
          } else {
            $$i > -1 && (_vm.formData.criterion = $$a.slice(0, $$i).concat($$a.slice($$i + 1)))
          }
        } else {
          _vm.formData.criterion = $$c
        }
      }
    }
  }), _c('label', {
    attrs: {
      "for": "status301"
    }
  }, [_vm._v("301")])]), _vm._v(" "), _c('span', {
    staticClass: "lebel-sm"
  }, [_c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.formData.criterion),
      expression: "formData.criterion"
    }],
    attrs: {
      "type": "checkbox",
      "id": "status302",
      "value": "302"
    },
    domProps: {
      "checked": Array.isArray(_vm.formData.criterion) ? _vm._i(_vm.formData.criterion, "302") > -1 : (_vm.formData.criterion)
    },
    on: {
      "__c": function($event) {
        var $$a = _vm.formData.criterion,
          $$el = $event.target,
          $$c = $$el.checked ? (true) : (false);
        if (Array.isArray($$a)) {
          var $$v = "302",
            $$i = _vm._i($$a, $$v);
          if ($$c) {
            $$i < 0 && (_vm.formData.criterion = $$a.concat($$v))
          } else {
            $$i > -1 && (_vm.formData.criterion = $$a.slice(0, $$i).concat($$a.slice($$i + 1)))
          }
        } else {
          _vm.formData.criterion = $$c
        }
      }
    }
  }), _c('label', {
    attrs: {
      "for": "status302"
    }
  }, [_vm._v("302")])]), _vm._v(" "), _c('span', {
    staticClass: "lebel-sm"
  }, [_c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.formData.criterion),
      expression: "formData.criterion"
    }],
    attrs: {
      "type": "checkbox",
      "id": "status307",
      "value": "307"
    },
    domProps: {
      "checked": Array.isArray(_vm.formData.criterion) ? _vm._i(_vm.formData.criterion, "307") > -1 : (_vm.formData.criterion)
    },
    on: {
      "__c": function($event) {
        var $$a = _vm.formData.criterion,
          $$el = $event.target,
          $$c = $$el.checked ? (true) : (false);
        if (Array.isArray($$a)) {
          var $$v = "307",
            $$i = _vm._i($$a, $$v);
          if ($$c) {
            $$i < 0 && (_vm.formData.criterion = $$a.concat($$v))
          } else {
            $$i > -1 && (_vm.formData.criterion = $$a.slice(0, $$i).concat($$a.slice($$i + 1)))
          }
        } else {
          _vm.formData.criterion = $$c
        }
      }
    }
  }), _c('label', {
    attrs: {
      "for": "status307"
    }
  }, [_vm._v("307")])]), _vm._v(" "), _c('span', {
    staticClass: "lebel-sm"
  }, [_c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.formData.criterion),
      expression: "formData.criterion"
    }],
    attrs: {
      "type": "checkbox",
      "id": "status400",
      "value": "400"
    },
    domProps: {
      "checked": Array.isArray(_vm.formData.criterion) ? _vm._i(_vm.formData.criterion, "400") > -1 : (_vm.formData.criterion)
    },
    on: {
      "__c": function($event) {
        var $$a = _vm.formData.criterion,
          $$el = $event.target,
          $$c = $$el.checked ? (true) : (false);
        if (Array.isArray($$a)) {
          var $$v = "400",
            $$i = _vm._i($$a, $$v);
          if ($$c) {
            $$i < 0 && (_vm.formData.criterion = $$a.concat($$v))
          } else {
            $$i > -1 && (_vm.formData.criterion = $$a.slice(0, $$i).concat($$a.slice($$i + 1)))
          }
        } else {
          _vm.formData.criterion = $$c
        }
      }
    }
  }), _c('label', {
    attrs: {
      "for": "status400"
    }
  }, [_vm._v("400")])])])])]), _vm._v(" "), _c('div', {
    staticClass: "dialogSubDiv"
  }, [_c('div', {
    staticClass: "subDivTitle requiredItem"
  }, [_vm._v("url请求超时")]), _vm._v(" "), _c('div', {
    staticClass: "subDivContent"
  }, [_c('label', [_c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.formData.timeOut),
      expression: "formData.timeOut"
    }],
    staticClass: "alarm-config-dialog-name sm-size",
    attrs: {
      "type": "number",
      "min": "1",
      "placeholder": ""
    },
    domProps: {
      "value": (_vm.formData.timeOut)
    },
    on: {
      "input": function($event) {
        if ($event.target.composing) { return; }
        _vm.formData.timeOut = $event.target.value
      },
      "blur": function($event) {
        _vm.$forceUpdate()
      }
    }
  })]), _c('span', {
    staticClass: "showfont"
  }, [_vm._v("毫秒(ms)")])])]), _vm._v(" "), _c('div', {
    staticClass: "dialogSubDiv"
  }, [_c('div', {
    staticClass: "subDivTitle",
    staticStyle: {
      "line-height": "30px"
    }
  }, [_vm._v("测试断言")]), _vm._v(" "), _c('div', {
    staticClass: "subDivContent"
  }, [_c('button', {
    staticClass: "blue-button",
    on: {
      "click": _vm.testRules
    }
  }, [_vm._v("测试规则")])])]), _vm._v(" "), _c('div', {
    staticClass: "dialogSubDiv"
  }, [_c('div', {
    staticClass: "subDivTitle",
    staticStyle: {
      "line-height": "20px"
    }
  }, [_vm._v("自定义报警回调API")]), _vm._v(" "), _c('div', {
    staticClass: "subDivContent"
  }, [_c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.formData.callbackApi),
      expression: "formData.callbackApi"
    }],
    staticClass: "alarm-config-dialog-name",
    attrs: {
      "type": "text",
      "placeholder": ""
    },
    domProps: {
      "value": (_vm.formData.callbackApi)
    },
    on: {
      "input": function($event) {
        if ($event.target.composing) { return; }
        _vm.formData.callbackApi = $event.target.value
      }
    }
  })])]), _vm._v(" "), _c('div', {
    staticClass: "dialogSubDiv"
  }, [_c('div', {
    staticClass: "subDivTitle requiredItem"
  }, [_vm._v("执行方案")]), _vm._v(" "), _c('div', {
    staticClass: "subDivContent"
  }, [_c('label', [_c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.formData.isForever),
      expression: "formData.isForever"
    }],
    attrs: {
      "type": "radio",
      "name": "alarm-level",
      "value": "1"
    },
    domProps: {
      "checked": _vm._q(_vm.formData.isForever, "1")
    },
    on: {
      "__c": function($event) {
        _vm.formData.isForever = "1"
      }
    }
  }), _vm._v("永久")]), _vm._v(" "), _c('label', [_c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.formData.isForever),
      expression: "formData.isForever"
    }],
    attrs: {
      "type": "radio",
      "name": "alarm-level",
      "value": "0"
    },
    domProps: {
      "checked": _vm._q(_vm.formData.isForever, "0")
    },
    on: {
      "__c": function($event) {
        _vm.formData.isForever = "0"
      }
    }
  }), _vm._v("一次性")]), _vm._v(" "), (_vm.formData.isForever == 1) ? _c('div', {
    staticClass: "subDivCard",
    staticStyle: {
      "min-height": "50px"
    }
  }, [_c('label', {
    staticClass: "info-label"
  }, [_vm._v("监控频率"), _c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.formData.foreverFrequence),
      expression: "formData.foreverFrequence"
    }],
    staticClass: "foreverFrequence sm-size",
    attrs: {
      "type": "number",
      "placeholder": "",
      "min": "1"
    },
    domProps: {
      "value": (_vm.formData.foreverFrequence)
    },
    on: {
      "input": function($event) {
        if ($event.target.composing) { return; }
        _vm.formData.foreverFrequence = $event.target.value
      },
      "blur": function($event) {
        _vm.$forceUpdate()
      }
    }
  }), _vm._v("分钟(m)\n\t\t\t\t\t\t\t\t\t")])]) : _vm._e()])]), _vm._v(" "), _c('div', {
    staticClass: "dialogSubDiv"
  }, [_c('div', {
    staticClass: "subDivTitle requiredItem"
  }, [_vm._v("监控权限组")]), _vm._v(" "), _c('div', {
    staticClass: "subDivContent"
  }, [_c('select', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.formData.permissionSelected),
      expression: "formData.permissionSelected"
    }],
    staticClass: "long-select",
    attrs: {
      "name": ""
    },
    on: {
      "change": function($event) {
        var $$selectedVal = Array.prototype.filter.call($event.target.options, function(o) {
          return o.selected
        }).map(function(o) {
          var val = "_value" in o ? o._value : o.value;
          return val
        });
        _vm.formData.permissionSelected = $event.target.multiple ? $$selectedVal : $$selectedVal[0]
      }
    }
  }, _vm._l((_vm.permissionList), function(value, index) {
    return _c('option', {
      domProps: {
        "value": index
      }
    }, [_vm._v(_vm._s(value.class_name))])
  }))])]), _vm._v(" "), _c('div', {
    staticClass: "dialogSubDiv"
  }, [_c('div', {
    staticClass: "subDivTitle requiredItem"
  }, [_vm._v("报警配置")]), _vm._v(" "), _c('div', {
    staticClass: "subDivContent"
  }, [_c('div', {
    staticClass: "subDivCard"
  }, [_c('div', {}, [_c('label', {
    staticClass: "info-label"
  }, [_vm._v("监控报警组")]), _vm._v(" "), _c('select', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.formData.alarmSelected),
      expression: "formData.alarmSelected"
    }],
    staticClass: "long-select",
    attrs: {
      "name": ""
    },
    on: {
      "change": function($event) {
        var $$selectedVal = Array.prototype.filter.call($event.target.options, function(o) {
          return o.selected
        }).map(function(o) {
          var val = "_value" in o ? o._value : o.value;
          return val
        });
        _vm.formData.alarmSelected = $event.target.multiple ? $$selectedVal : $$selectedVal[0]
      }
    }
  }, _vm._l((_vm.alarmList), function(value, index) {
    return _c('option', {
      domProps: {
        "value": index
      }
    }, [_vm._v(_vm._s(value.class_name))])
  }))]), _vm._v(" "), _c('span', {
    staticClass: "cardContent"
  }, [_vm._v("邮件报警频率：连续"), _c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.formData.mailCount),
      expression: "formData.mailCount"
    }],
    staticClass: "dialog-short-input email-alarm-rates",
    attrs: {
      "type": "number",
      "min": "0"
    },
    domProps: {
      "value": (_vm.formData.mailCount)
    },
    on: {
      "input": function($event) {
        if ($event.target.composing) { return; }
        _vm.formData.mailCount = $event.target.value
      },
      "blur": function($event) {
        _vm.$forceUpdate()
      }
    }
  }), _vm._v("次失败后触发报警")]), _vm._v(" "), _c('span', {
    staticClass: "cardContent"
  }, [_vm._v("短信报警频率：连续"), _c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.formData.messageCount),
      expression: "formData.messageCount"
    }],
    staticClass: "dialog-short-input message-alarm-rates",
    attrs: {
      "type": "number",
      "min": "0"
    },
    domProps: {
      "value": (_vm.formData.messageCount)
    },
    on: {
      "input": function($event) {
        if ($event.target.composing) { return; }
        _vm.formData.messageCount = $event.target.value
      },
      "blur": function($event) {
        _vm.$forceUpdate()
      }
    }
  }), _vm._v("次失败后触发报警")])])])]), _vm._v(" "), _c('div', {
    staticClass: "dialogSubDiv"
  }, [_c('div', {
    staticClass: "subDivTitle requiredItem"
  }, [_vm._v("有效监控时间")]), _vm._v(" "), _c('div', {
    staticClass: "subDivContent"
  }, [_c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.formData.startTime),
      expression: "formData.startTime"
    }],
    staticClass: "validtime",
    attrs: {
      "type": "text"
    },
    domProps: {
      "value": (_vm.formData.startTime)
    },
    on: {
      "input": function($event) {
        if ($event.target.composing) { return; }
        _vm.formData.startTime = $event.target.value
      }
    }
  }), _vm._v(" 至 "), _c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.formData.endTime),
      expression: "formData.endTime"
    }],
    staticClass: "validtime",
    attrs: {
      "type": "text"
    },
    domProps: {
      "value": (_vm.formData.endTime)
    },
    on: {
      "input": function($event) {
        if ($event.target.composing) { return; }
        _vm.formData.endTime = $event.target.value
      }
    }
  })])]), _vm._v(" "), _c('div', {
    staticClass: "dialogButtonDiv"
  }, [_c('a', {
    directives: [{
      name: "show",
      rawName: "v-show",
      value: (this.formData.isShowSavebtn),
      expression: "this.formData.isShowSavebtn"
    }],
    staticClass: "dialog-blue-button",
    attrs: {
      "href": "javascript:;"
    },
    on: {
      "click": _vm.addHttp
    }
  }, [_vm._v("保存")]), _vm._v(" "), _c('a', {
    staticClass: "dialog-gray-button",
    attrs: {
      "href": "javascript:;"
    },
    on: {
      "click": _vm.hideDialog
    }
  }, [_vm._v("取消")])])])])])])
},staticRenderFns: []}

/***/ }),
/* 96 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    staticClass: "dialog"
  }, [_c('div', {
    staticClass: "dialogOverlay"
  }), _vm._v(" "), _c('div', {
    staticClass: "dialogContent"
  }, [_c('div', {
    staticClass: "dialogClose",
    on: {
      "click": _vm.hideDialog
    }
  }), _vm._v(" "), _c('div', {
    staticClass: "dialogDetail"
  }, [_c('div', {
    staticClass: "dialogTitle"
  }, [_vm._v(_vm._s(_vm.dialogTitle))]), _vm._v(" "), _c('div', {
    staticClass: "dialogDiv"
  }, [_c('div', {
    staticClass: "dialogSubDiv"
  }, [_c('div', {
    staticClass: "subDivTitle requiredItem"
  }, [_vm._v("权限组名称")]), _vm._v(" "), _c('div', {
    staticClass: "subDivContent"
  }, [_c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.className),
      expression: "className"
    }],
    staticClass: "dataport-dialog-name",
    attrs: {
      "type": "text",
      "placeholder": ""
    },
    domProps: {
      "value": (_vm.className)
    },
    on: {
      "input": function($event) {
        if ($event.target.composing) { return; }
        _vm.className = $event.target.value
      }
    }
  }), _c('button', {
    staticClass: "blue-button",
    staticStyle: {
      "margin": "5px"
    },
    on: {
      "click": _vm.rename
    }
  }, [_vm._v("重命名")])])]), _vm._v(" "), _c('div', {
    staticClass: "dialogSubDiv"
  }, [_c('div', {
    staticClass: "subDivTitle"
  }, [_vm._v("权限组成员")]), _vm._v(" "), _c('div', {
    staticStyle: {
      "display": "inline-block",
      "width": "600px"
    }
  }, [_vm._l((_vm.usersselects), function(item, i) {
    return [_c('div', {
      staticClass: "subDivContent",
      staticStyle: {
        "margin-bottom": "10px"
      }
    }, [_c('div', {
      staticClass: "subDivCard"
    }, [_c('div', {
      staticClass: "box"
    }, [_c('label', {
      staticClass: "name"
    }, [_vm._v("成员名(非空)")]), _vm._v(" "), _c('input', {
      directives: [{
        name: "model",
        rawName: "v-model",
        value: (item.username),
        expression: "item.username"
      }],
      staticClass: "dataport-dialog-rulename",
      attrs: {
        "type": "text",
        "placeholder": ""
      },
      domProps: {
        "value": (item.username)
      },
      on: {
        "input": function($event) {
          if ($event.target.composing) { return; }
          item.username = $event.target.value
        }
      }
    })]), _vm._v(" "), _c('div', {
      staticClass: "box"
    }, [_c('label', {
      staticClass: "name"
    }, [_vm._v("条件操作")]), _vm._v(" "), _c('div', {
      staticClass: "subbox"
    }, [_c('button', {
      directives: [{
        name: "show",
        rawName: "v-show",
        value: (_vm.usersselects.length > 0),
        expression: "usersselects.length >0"
      }],
      staticClass: "blue-button",
      on: {
        "click": function($event) {
          _vm.deleteUser(i)
        }
      }
    }, [_vm._v("删除")])])])])])]
  })], 2)])])])])])
},staticRenderFns: []}

/***/ }),
/* 97 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    staticClass: "dialog"
  }, [_c('div', {
    staticClass: "dialogOverlay"
  }), _vm._v(" "), _c('div', {
    staticClass: "dialogContent"
  }, [_c('div', {
    staticClass: "dialogClose",
    on: {
      "click": _vm.hideDialog
    }
  }), _vm._v(" "), _c('div', {
    staticClass: "dialogDetail"
  }, [_c('div', {
    staticClass: "dialogTitle"
  }, [_vm._v(_vm._s(_vm.elesformData.dialogTitle))]), _vm._v(" "), _c('div', {
    staticClass: "dialogDiv"
  }, [_c('div', {
    staticClass: "dialogSubDiv"
  }, [_c('div', {
    staticClass: "subDivTitle requiredItem"
  }, [_vm._v("监控项名称")]), _vm._v(" "), _c('div', {
    staticClass: "subDivContent"
  }, [_c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.elesformData.itemName),
      expression: "elesformData.itemName"
    }],
    staticClass: "alarm-config-dialog-name",
    attrs: {
      "type": "text",
      "placeholder": ""
    },
    domProps: {
      "value": (_vm.elesformData.itemName)
    },
    on: {
      "input": function($event) {
        if ($event.target.composing) { return; }
        _vm.elesformData.itemName = $event.target.value
      }
    }
  })])]), _vm._v(" "), _c('div', {
    staticClass: "dialogSubDiv"
  }, [_c('div', {
    staticClass: "subDivTitle requiredItem"
  }, [_vm._v("监控分级")]), _vm._v(" "), _c('div', {
    staticClass: "subDivContent"
  }, [_c('label', [_c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.elesformData.levelRadio),
      expression: "elesformData.levelRadio"
    }],
    attrs: {
      "type": "radio",
      "name": "level",
      "value": "0",
      "id": "level0"
    },
    domProps: {
      "checked": _vm._q(_vm.elesformData.levelRadio, "0")
    },
    on: {
      "__c": function($event) {
        _vm.elesformData.levelRadio = "0"
      }
    }
  }), _c('span', {
    attrs: {
      "for": "level0"
    }
  }, [_vm._v("0级")])]), _vm._v(" "), _c('label', [_c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.elesformData.levelRadio),
      expression: "elesformData.levelRadio"
    }],
    attrs: {
      "type": "radio",
      "name": "level",
      "value": "1",
      "id": "level1"
    },
    domProps: {
      "checked": _vm._q(_vm.elesformData.levelRadio, "1")
    },
    on: {
      "__c": function($event) {
        _vm.elesformData.levelRadio = "1"
      }
    }
  }), _c('span', {
    attrs: {
      "for": "level1"
    }
  }, [_vm._v("1级")])]), _vm._v(" "), _c('label', [_c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.elesformData.levelRadio),
      expression: "elesformData.levelRadio"
    }],
    attrs: {
      "type": "radio",
      "name": "level",
      "value": "2",
      "id": "level2"
    },
    domProps: {
      "checked": _vm._q(_vm.elesformData.levelRadio, "2")
    },
    on: {
      "__c": function($event) {
        _vm.elesformData.levelRadio = "2"
      }
    }
  }), _c('span', {
    attrs: {
      "for": "level2"
    }
  }, [_vm._v("2级")])])])]), _vm._v(" "), _c('div', {
    staticClass: "dialogSubDiv"
  }, [_c('div', {
    staticClass: "subDivTitle requiredItem"
  }, [_vm._v("服务url")]), _vm._v(" "), _c('div', {
    staticClass: "subDivContent"
  }, [_c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.elesformData.inputServerUrl),
      expression: "elesformData.inputServerUrl"
    }],
    staticClass: "alarm-config-dialog-name",
    attrs: {
      "type": "text",
      "placeholder": ""
    },
    domProps: {
      "value": (_vm.elesformData.inputServerUrl)
    },
    on: {
      "input": function($event) {
        if ($event.target.composing) { return; }
        _vm.elesformData.inputServerUrl = $event.target.value
      }
    }
  })])]), _vm._v(" "), _c('div', {
    staticClass: "dialogSubDiv"
  }, [_c('div', {
    staticClass: "subDivTitle"
  }, [_vm._v("referer")]), _vm._v(" "), _c('div', {
    staticClass: "subDivContent"
  }, [_c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.elesformData.referer),
      expression: "elesformData.referer"
    }],
    staticClass: "eles-dialog-referer",
    attrs: {
      "type": "text",
      "placeholder": ""
    },
    domProps: {
      "value": (_vm.elesformData.referer)
    },
    on: {
      "input": function($event) {
        if ($event.target.composing) { return; }
        _vm.elesformData.referer = $event.target.value
      }
    }
  })])]), _vm._v(" "), _c('div', {
    staticClass: "dialogSubDiv"
  }, [_c('div', {
    staticClass: "subDivTitle"
  }, [_vm._v("userAgent")]), _vm._v(" "), _c('div', {
    staticClass: "subDivContent"
  }, [_c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.elesformData.userAgent),
      expression: "elesformData.userAgent"
    }],
    staticClass: "eles-dialog-useragent",
    attrs: {
      "type": "text",
      "placeholder": ""
    },
    domProps: {
      "value": (_vm.elesformData.userAgent)
    },
    on: {
      "input": function($event) {
        if ($event.target.composing) { return; }
        _vm.elesformData.userAgent = $event.target.value
      }
    }
  })])]), _vm._v(" "), _c('div', {
    staticClass: "dialogSubDiv"
  }, [_c('div', {
    staticClass: "subDivTitle requiredItem"
  }, [_vm._v("验证表达式")]), _vm._v(" "), _c('div', {
    staticClass: "subDivContent"
  }, [_c('div', {
    staticClass: "subDivCard"
  }, [_c('textarea', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.elesformData.criterion),
      expression: "elesformData.criterion"
    }],
    staticStyle: {
      "width": "100%",
      "height": "100px"
    },
    attrs: {
      "placeholder": "可用#增加验证规则注释,提升标记邮件可读性",
      "id": "andPostCon"
    },
    domProps: {
      "value": (_vm.elesformData.criterion)
    },
    on: {
      "input": function($event) {
        if ($event.target.composing) { return; }
        _vm.elesformData.criterion = $event.target.value
      }
    }
  })])])]), _vm._v(" "), _c('div', {
    staticClass: "dialogSubDiv"
  }, [_c('div', {
    staticClass: "subDivTitle",
    staticStyle: {
      "line-height": "30px"
    }
  }, [_vm._v("测试断言")]), _vm._v(" "), _c('div', {
    staticClass: "subDivContent"
  }, [_c('button', {
    staticClass: "blue-button",
    on: {
      "click": _vm.testRules
    }
  }, [_vm._v("测试断言")])])]), _vm._v(" "), _c('div', {
    staticClass: "dialogSubDiv"
  }, [_c('div', {
    staticClass: "subDivTitle"
  }, [_vm._v("账号选择")]), _vm._v(" "), _c('div', {
    staticClass: "subDivContent"
  }, [_c('div', {
    staticClass: "subDivCard"
  }, [_c('label', [_c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.elesformData.isNeedAccount),
      expression: "elesformData.isNeedAccount"
    }],
    attrs: {
      "type": "radio",
      "name": "isNeedAccount",
      "value": "0"
    },
    domProps: {
      "checked": _vm._q(_vm.elesformData.isNeedAccount, "0")
    },
    on: {
      "__c": function($event) {
        _vm.elesformData.isNeedAccount = "0"
      }
    }
  }), _vm._v("不需要用户账号")]), _vm._v(" "), _c('label', [_c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.elesformData.isNeedAccount),
      expression: "elesformData.isNeedAccount"
    }],
    attrs: {
      "type": "radio",
      "name": "isNeedAccount",
      "value": "1"
    },
    domProps: {
      "checked": _vm._q(_vm.elesformData.isNeedAccount, "1")
    },
    on: {
      "__c": function($event) {
        _vm.elesformData.isNeedAccount = "1"
      }
    }
  }), _vm._v("需要用户账号")]), _vm._v(" "), _c('div', {}, [(_vm.elesformData.isNeedAccount == 0) ? _c('select', {
    staticClass: "long-select",
    attrs: {
      "name": "",
      "disabled": "disabled"
    }
  }, [_c('option')]) : _c('select', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.elesformData.userSelected),
      expression: "elesformData.userSelected"
    }],
    staticClass: "long-select",
    attrs: {
      "name": ""
    },
    on: {
      "change": function($event) {
        var $$selectedVal = Array.prototype.filter.call($event.target.options, function(o) {
          return o.selected
        }).map(function(o) {
          var val = "_value" in o ? o._value : o.value;
          return val
        });
        _vm.elesformData.userSelected = $event.target.multiple ? $$selectedVal : $$selectedVal[0]
      }
    }
  }, _vm._l((_vm.userAccounts), function(value) {
    return _c('option', {
      domProps: {
        "value": value.acount_name
      }
    }, [_vm._v(_vm._s(value.acount_name))])
  }))])])])]), _vm._v(" "), _c('div', {
    staticClass: "dialogSubDiv"
  }, [_c('div', {
    staticClass: "subDivTitle requiredItem"
  }, [_vm._v("页面加载时间")]), _vm._v(" "), _c('div', {
    staticClass: "subDivContent"
  }, [_c('label', [_c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.elesformData.timeOut),
      expression: "elesformData.timeOut"
    }],
    staticClass: "alarm-config-dialog-name sm-size",
    attrs: {
      "type": "number",
      "min": "1",
      "placeholder": ""
    },
    domProps: {
      "value": (_vm.elesformData.timeOut)
    },
    on: {
      "input": function($event) {
        if ($event.target.composing) { return; }
        _vm.elesformData.timeOut = $event.target.value
      },
      "blur": function($event) {
        _vm.$forceUpdate()
      }
    }
  })]), _c('span', {
    staticClass: "showfont"
  }, [_vm._v("毫秒(ms)")])])]), _vm._v(" "), _c('div', {
    staticClass: "dialogSubDiv"
  }, [_c('div', {
    staticClass: "subDivTitle",
    staticStyle: {
      "line-height": "20px"
    }
  }, [_vm._v("自定义报警回调API")]), _vm._v(" "), _c('div', {
    staticClass: "subDivContent"
  }, [_c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.elesformData.callbackApi),
      expression: "elesformData.callbackApi"
    }],
    staticClass: "alarm-config-dialog-name",
    attrs: {
      "type": "text",
      "placeholder": ""
    },
    domProps: {
      "value": (_vm.elesformData.callbackApi)
    },
    on: {
      "input": function($event) {
        if ($event.target.composing) { return; }
        _vm.elesformData.callbackApi = $event.target.value
      }
    }
  })])]), _vm._v(" "), _c('div', {
    staticClass: "dialogSubDiv"
  }, [_c('div', {
    staticClass: "subDivTitle requiredItem"
  }, [_vm._v("执行方案")]), _vm._v(" "), _c('div', {
    staticClass: "subDivContent"
  }, [_c('label', [_c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.elesformData.isForever),
      expression: "elesformData.isForever"
    }],
    attrs: {
      "type": "radio",
      "name": "alarm-level",
      "value": "1"
    },
    domProps: {
      "checked": _vm._q(_vm.elesformData.isForever, "1")
    },
    on: {
      "__c": function($event) {
        _vm.elesformData.isForever = "1"
      }
    }
  }), _vm._v("永久")]), _vm._v(" "), _c('label', [_c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.elesformData.isForever),
      expression: "elesformData.isForever"
    }],
    attrs: {
      "type": "radio",
      "name": "alarm-level",
      "value": "0"
    },
    domProps: {
      "checked": _vm._q(_vm.elesformData.isForever, "0")
    },
    on: {
      "__c": function($event) {
        _vm.elesformData.isForever = "0"
      }
    }
  }), _vm._v("一次性")]), _vm._v(" "), (_vm.elesformData.isForever == 1) ? _c('div', {
    staticClass: "subDivCard",
    staticStyle: {
      "min-height": "50px"
    }
  }, [_c('label', {
    staticClass: "info-label"
  }, [_vm._v("监控频率"), _c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.elesformData.foreverFrequence),
      expression: "elesformData.foreverFrequence"
    }],
    staticClass: "foreverFrequence sm-size",
    attrs: {
      "type": "number",
      "placeholder": "",
      "min": "1"
    },
    domProps: {
      "value": (_vm.elesformData.foreverFrequence)
    },
    on: {
      "input": function($event) {
        if ($event.target.composing) { return; }
        _vm.elesformData.foreverFrequence = $event.target.value
      },
      "blur": function($event) {
        _vm.$forceUpdate()
      }
    }
  }), _vm._v("分钟(m)\n\t\t\t\t\t\t\t\t")])]) : _vm._e()])]), _vm._v(" "), _c('div', {
    staticClass: "dialogSubDiv"
  }, [_c('div', {
    staticClass: "subDivTitle requiredItem"
  }, [_vm._v("监控权限组")]), _vm._v(" "), _c('div', {
    staticClass: "subDivContent"
  }, [_c('select', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.elesformData.permissionSelected),
      expression: "elesformData.permissionSelected"
    }],
    staticClass: "long-select",
    attrs: {
      "name": ""
    },
    on: {
      "change": function($event) {
        var $$selectedVal = Array.prototype.filter.call($event.target.options, function(o) {
          return o.selected
        }).map(function(o) {
          var val = "_value" in o ? o._value : o.value;
          return val
        });
        _vm.elesformData.permissionSelected = $event.target.multiple ? $$selectedVal : $$selectedVal[0]
      }
    }
  }, _vm._l((_vm.permissionList), function(value, index) {
    return _c('option', {
      domProps: {
        "value": index
      }
    }, [_vm._v(_vm._s(value.class_name))])
  }))])]), _vm._v(" "), _c('div', {
    staticClass: "dialogSubDiv"
  }, [_c('div', {
    staticClass: "subDivTitle requiredItem"
  }, [_vm._v("报警配置")]), _vm._v(" "), _c('div', {
    staticClass: "subDivContent"
  }, [_c('div', {
    staticClass: "subDivCard"
  }, [_c('div', {}, [_c('label', {
    staticClass: "info-label"
  }, [_vm._v("监控报警组")]), _vm._v(" "), _c('select', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.elesformData.alarmSelected),
      expression: "elesformData.alarmSelected"
    }],
    staticClass: "long-select",
    attrs: {
      "name": ""
    },
    on: {
      "change": function($event) {
        var $$selectedVal = Array.prototype.filter.call($event.target.options, function(o) {
          return o.selected
        }).map(function(o) {
          var val = "_value" in o ? o._value : o.value;
          return val
        });
        _vm.elesformData.alarmSelected = $event.target.multiple ? $$selectedVal : $$selectedVal[0]
      }
    }
  }, _vm._l((_vm.alarmList), function(value, index) {
    return _c('option', {
      domProps: {
        "value": index
      }
    }, [_vm._v(_vm._s(value.class_name))])
  }))]), _vm._v(" "), _c('span', {
    staticClass: "cardContent"
  }, [_vm._v("邮件报警频率：连续"), _c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.elesformData.mailCount),
      expression: "elesformData.mailCount"
    }],
    staticClass: "dialog-short-input email-alarm-rates",
    attrs: {
      "type": "number",
      "min": "0"
    },
    domProps: {
      "value": (_vm.elesformData.mailCount)
    },
    on: {
      "input": function($event) {
        if ($event.target.composing) { return; }
        _vm.elesformData.mailCount = $event.target.value
      },
      "blur": function($event) {
        _vm.$forceUpdate()
      }
    }
  }), _vm._v("次失败后触发报警")]), _vm._v(" "), _c('span', {
    staticClass: "cardContent"
  }, [_vm._v("短信报警频率：连续"), _c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.elesformData.messageCount),
      expression: "elesformData.messageCount"
    }],
    staticClass: "dialog-short-input message-alarm-rates",
    attrs: {
      "type": "number",
      "min": "0"
    },
    domProps: {
      "value": (_vm.elesformData.messageCount)
    },
    on: {
      "input": function($event) {
        if ($event.target.composing) { return; }
        _vm.elesformData.messageCount = $event.target.value
      },
      "blur": function($event) {
        _vm.$forceUpdate()
      }
    }
  }), _vm._v("次失败后触发报警")])])])]), _vm._v(" "), _c('div', {
    staticClass: "dialogSubDiv"
  }, [_c('div', {
    staticClass: "subDivTitle requiredItem"
  }, [_vm._v("有效监控时间")]), _vm._v(" "), _c('div', {
    staticClass: "subDivContent"
  }, [_c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.elesformData.startTime),
      expression: "elesformData.startTime"
    }],
    staticClass: "validtime",
    attrs: {
      "type": "text"
    },
    domProps: {
      "value": (_vm.elesformData.startTime)
    },
    on: {
      "input": function($event) {
        if ($event.target.composing) { return; }
        _vm.elesformData.startTime = $event.target.value
      }
    }
  }), _vm._v(" 至 "), _c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.elesformData.endTime),
      expression: "elesformData.endTime"
    }],
    staticClass: "validtime",
    attrs: {
      "type": "text"
    },
    domProps: {
      "value": (_vm.elesformData.endTime)
    },
    on: {
      "input": function($event) {
        if ($event.target.composing) { return; }
        _vm.elesformData.endTime = $event.target.value
      }
    }
  })])]), _vm._v(" "), _c('div', {
    staticClass: "dialogButtonDiv"
  }, [_c('a', {
    directives: [{
      name: "show",
      rawName: "v-show",
      value: (this.elesformData.isShowSavebtn),
      expression: "this.elesformData.isShowSavebtn"
    }],
    staticClass: "dialog-blue-button",
    attrs: {
      "href": "javascript:;"
    },
    on: {
      "click": _vm.addHttp
    }
  }, [_vm._v("保存")]), _vm._v(" "), _c('a', {
    staticClass: "dialog-gray-button",
    attrs: {
      "href": "javascript:;"
    },
    on: {
      "click": _vm.hideDialog
    }
  }, [_vm._v("取消")])])])])])])
},staticRenderFns: []}

/***/ }),
/* 98 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    staticClass: "alarmPolicy",
    attrs: {
      "title": "数据接口"
    }
  }, [_c('div', {
    staticClass: "button-area"
  }, [_c('button', {
    staticClass: "add-blue-button",
    on: {
      "click": _vm.newAddCase
    }
  }, [_c('span'), _vm._v("新建数据接口case")])]), _vm._v(" "), _c('div', {
    staticClass: "table-div"
  }, [_c('table', {
    staticClass: "manage-table"
  }, [_vm._m(0), _vm._v(" "), _c('tbody', _vm._l((_vm.tableHttp), function(item, index) {
    return _c('tr', [_vm._m(1, true), _vm._v(" "), _c('td', [_vm._v(_vm._s(item.id))]), _vm._v(" "), _c('td', [_vm._v(_vm._s(item.item_name))]), _vm._v(" "), _c('td', [_vm._v(_vm._s(item.url))]), _vm._v(" "), _c('td', [_vm._v(_vm._s(item.level))]), _vm._v(" "), _c('td', [_vm._v(_vm._s(item.frequence))]), _vm._v(" "), _c('td', [_vm._v(_vm._s(_vm._f("formatDate")(item.last_runtime)))]), _vm._v(" "), _c('td', [(item.status == 1) ? [_c('a', {
      attrs: {
        "href": "javascript:;",
        "data-id": item.id,
        "data-index": index
      },
      on: {
        "click": function($event) {
          _vm.editHttp(true)
        }
      }
    }, [_vm._v("编辑")]), _vm._v(" "), _c('a', {
      attrs: {
        "href": "javascript:;",
        "data-id": item.id,
        "data-index": index
      },
      on: {
        "click": _vm.startHttp
      }
    }, [_vm._v("启用")]), _vm._v(" "), _c('a', {
      attrs: {
        "href": "javascript:;",
        "data-id": item.id,
        "data-index": index
      },
      on: {
        "click": function($event) {
          _vm.deleteComfirm(1, $event)
        }
      }
    }, [_vm._v("删除")])] : (item.status == 2) ? [_c('a', {
      attrs: {
        "href": "javascript:;",
        "data-id": item.id,
        "data-index": index
      },
      on: {
        "click": function($event) {
          _vm.editHttp(false)
        }
      }
    }, [_vm._v("查看")]), _vm._v(" "), _c('a', {
      attrs: {
        "href": "javascript:;",
        "data-id": item.id,
        "data-index": index
      },
      on: {
        "click": _vm.stopHttp
      }
    }, [_vm._v("停用")])] : _vm._e()], 2)])
  }))])]), _vm._v(" "), _c('DialogsAddDataport', {
    attrs: {
      "editinitformdata": _vm.editGetFormData
    }
  })], 1)
},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('thead', [_c('tr', [_c('th', {
    attrs: {
      "width": "3%"
    }
  }, [_c('input', {
    attrs: {
      "type": "checkbox",
      "name": "check-all",
      "disabled": "disabled"
    }
  })]), _c('th', {
    attrs: {
      "width": "8%"
    }
  }, [_vm._v("序号")]), _c('th', {
    attrs: {
      "width": "17%"
    }
  }, [_vm._v("监控名称")]), _c('th', {
    attrs: {
      "width": "17%"
    }
  }, [_vm._v("监控url")]), _c('th', {
    attrs: {
      "width": "8%"
    }
  }, [_vm._v("监控级别")]), _c('th', {
    attrs: {
      "width": "10%"
    }
  }, [_vm._v("监控周期(m)")]), _c('th', {
    attrs: {
      "width": "15%"
    }
  }, [_vm._v("上次运行时间")]), _c('th', {
    attrs: {
      "width": "22%"
    }
  }, [_vm._v("操作")])])])
},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('td', [_c('input', {
    attrs: {
      "type": "checkbox",
      "disabled": "disabled"
    }
  })])
}]}

/***/ }),
/* 99 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _vm._m(0)
},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', [_c('div', {
    staticStyle: {
      "padding-top": "80px",
      "text-align": "center"
    }
  }, [_c('img', {
    staticStyle: {
      "width": "140px"
    },
    attrs: {
      "src": "/dist/Image/nopermisson.png",
      "alt": "Monitor监控平台"
    }
  })]), _vm._v(" "), _c('div', {
    staticClass: "text",
    staticStyle: {
      "text-align": "center",
      "color": "#999",
      "line-height": "35px",
      "font-size": "14px"
    }
  }, [_vm._v("权限申请邮件需发送给直属上级，"), _c('br'), _vm._v("抄送huangshuyin@taihe.com; luohongcang@taihe.com。")])])
}]}

/***/ }),
/* 100 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    staticClass: "SideRight"
  }, [_c('div', {
    staticClass: "manage-main"
  }, [_c('div', {
    staticClass: "topbox"
  }, [_c('div', {
    staticClass: "searchDetail"
  }, [_c('span', {
    staticClass: "nowrap"
  }, [_c('label', {
    attrs: {
      "for": "runlogitem-name"
    }
  }, [_vm._v("监控名称")]), _vm._v(" "), _c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.runlogFormInitdata.manageeName),
      expression: "runlogFormInitdata.manageeName"
    }],
    staticClass: "manage-input",
    attrs: {
      "type": "text",
      "id": "runlogitem-name",
      "required": ""
    },
    domProps: {
      "value": (_vm.runlogFormInitdata.manageeName)
    },
    on: {
      "input": function($event) {
        if ($event.target.composing) { return; }
        _vm.runlogFormInitdata.manageeName = $event.target.value
      }
    }
  })]), _vm._v(" "), _c('span', {
    staticClass: "nowrap"
  }, [_c('label', {
    attrs: {
      "for": "runlogmonitor-types"
    }
  }, [_vm._v("监控类型")]), _vm._v(" "), _c('select', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.runlogFormInitdata.manageTypesSelect),
      expression: "runlogFormInitdata.manageTypesSelect"
    }],
    staticClass: "manage-select",
    attrs: {
      "id": "runlogmonitor-types"
    },
    on: {
      "change": function($event) {
        var $$selectedVal = Array.prototype.filter.call($event.target.options, function(o) {
          return o.selected
        }).map(function(o) {
          var val = "_value" in o ? o._value : o.value;
          return val
        });
        _vm.runlogFormInitdata.manageTypesSelect = $event.target.multiple ? $$selectedVal : $$selectedVal[0]
      }
    }
  }, _vm._l((_vm.runlogManageTypes), function(value, index) {
    return _c('option', {
      domProps: {
        "value": index - 1
      }
    }, [_vm._v(_vm._s(value))])
  }))]), _vm._v(" "), _c('span', {
    staticClass: "nowrap"
  }, [_c('label', {
    attrs: {
      "for": "runlogmanage-status"
    }
  }, [_vm._v("监控状态")]), _vm._v(" "), _c('select', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.runlogFormInitdata.manageStatusSelect),
      expression: "runlogFormInitdata.manageStatusSelect"
    }],
    staticClass: "manage-select",
    attrs: {
      "id": "runlogmanage-status"
    },
    on: {
      "change": function($event) {
        var $$selectedVal = Array.prototype.filter.call($event.target.options, function(o) {
          return o.selected
        }).map(function(o) {
          var val = "_value" in o ? o._value : o.value;
          return val
        });
        _vm.runlogFormInitdata.manageStatusSelect = $event.target.multiple ? $$selectedVal : $$selectedVal[0]
      }
    }
  }, _vm._l((_vm.runlogMmanageStatus), function(value, index) {
    return _c('option', {
      domProps: {
        "value": index - 1
      }
    }, [_vm._v(_vm._s(value))])
  }))]), _vm._v(" "), _c('span', {
    staticClass: "nowrap"
  }, [_c('label', {
    attrs: {
      "for": "runlogitem-time"
    }
  }, [_vm._v("报警时间")]), _vm._v(" "), _c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.alarmTimes),
      expression: "alarmTimes"
    }],
    staticClass: "manage-input",
    attrs: {
      "type": "text",
      "id": "runlogitem-time"
    },
    domProps: {
      "value": (_vm.alarmTimes)
    },
    on: {
      "blur": _vm.getTime,
      "input": function($event) {
        if ($event.target.composing) { return; }
        _vm.alarmTimes = $event.target.value
      }
    }
  })]), _vm._v(" "), _c('a', {
    staticClass: "white-button",
    attrs: {
      "href": "javascript:;"
    },
    on: {
      "click": _vm.queryLogList
    }
  }, [_vm._v("筛选")])]), _vm._v(" "), _c('div', {
    staticClass: "configList"
  }, [_c('RunlogTable', {
    attrs: {
      "runloglist": _vm.runlogTable,
      "runlogquerydatas": _vm.querydatas
    },
    on: {
      "update:runlogquerydatas": function($event) {
        _vm.querydatas = $event
      }
    }
  })], 1), _vm._v(" "), _c('TurnPage', {
    attrs: {
      "type": _vm.runlogtableType,
      "allpage": _vm.allpage,
      "tableTotal": _vm.tableTotal
    }
  })], 1)])])
},staticRenderFns: []}

/***/ }),
/* 101 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    staticClass: "SideRight"
  }, [_c('div', {
    staticClass: "manage-main"
  }, [_c('div', {
    staticClass: "topbox"
  }, [_c('div', {
    staticClass: "searchDetail"
  }, [_c('span', {
    staticClass: "nowrap"
  }, [_c('label', {
    attrs: {
      "for": "alarm-types"
    }
  }, [_vm._v("监控类别")]), _vm._v(" "), _c('select', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.alarmFormInitdata.alarmTypesSelect),
      expression: "alarmFormInitdata.alarmTypesSelect"
    }],
    staticClass: "manage-select",
    attrs: {
      "id": "alarm-types"
    },
    on: {
      "change": function($event) {
        var $$selectedVal = Array.prototype.filter.call($event.target.options, function(o) {
          return o.selected
        }).map(function(o) {
          var val = "_value" in o ? o._value : o.value;
          return val
        });
        _vm.alarmFormInitdata.alarmTypesSelect = $event.target.multiple ? $$selectedVal : $$selectedVal[0]
      }
    }
  }, _vm._l((_vm.alarmTypes), function(value, index) {
    return _c('option', {
      domProps: {
        "value": index - 1
      }
    }, [_vm._v(_vm._s(value))])
  }))]), _vm._v(" "), _c('span', {
    staticClass: "nowrap"
  }, [_c('label', {
    attrs: {
      "for": "alarm-level"
    }
  }, [_vm._v("监控级别")]), _vm._v(" "), _c('select', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.alarmFormInitdata.alarmLevelSelect),
      expression: "alarmFormInitdata.alarmLevelSelect"
    }],
    staticClass: "manage-select",
    attrs: {
      "id": "alarm-level"
    },
    on: {
      "change": function($event) {
        var $$selectedVal = Array.prototype.filter.call($event.target.options, function(o) {
          return o.selected
        }).map(function(o) {
          var val = "_value" in o ? o._value : o.value;
          return val
        });
        _vm.alarmFormInitdata.alarmLevelSelect = $event.target.multiple ? $$selectedVal : $$selectedVal[0]
      }
    }
  }, _vm._l((_vm.alarmLeves), function(value, index) {
    return _c('option', {
      domProps: {
        "value": index - 1
      }
    }, [_vm._v(_vm._s(value))])
  }))]), _vm._v(" "), _c('br'), _vm._v(" "), _c('span', {
    staticClass: "nowrap"
  }, [_c('label', {
    attrs: {
      "for": "alarm-name"
    }
  }, [_vm._v("监控名称")]), _vm._v(" "), _c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.alarmFormInitdata.alarmName),
      expression: "alarmFormInitdata.alarmName"
    }],
    staticClass: "manage-input",
    attrs: {
      "type": "text",
      "id": "alarm-name"
    },
    domProps: {
      "value": (_vm.alarmFormInitdata.alarmName)
    },
    on: {
      "input": function($event) {
        if ($event.target.composing) { return; }
        _vm.alarmFormInitdata.alarmName = $event.target.value
      }
    }
  })]), _vm._v(" "), _c('span', {
    staticClass: "nowrap"
  }, [_c('label', {
    attrs: {
      "for": "alarm-id"
    }
  }, [_vm._v("报警序号")]), _vm._v(" "), _c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.alarmFormInitdata.alarmId),
      expression: "alarmFormInitdata.alarmId"
    }],
    staticClass: "manage-input",
    attrs: {
      "type": "text",
      "id": "alarm-id"
    },
    domProps: {
      "value": (_vm.alarmFormInitdata.alarmId)
    },
    on: {
      "input": function($event) {
        if ($event.target.composing) { return; }
        _vm.alarmFormInitdata.alarmId = $event.target.value
      }
    }
  })]), _vm._v(" "), _c('span', {
    staticClass: "nowrap"
  }, [_c('label', {
    attrs: {
      "for": "alarm-process-status"
    }
  }, [_vm._v("处理状态")]), _vm._v(" "), _c('select', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.alarmFormInitdata.processStatusSelect),
      expression: "alarmFormInitdata.processStatusSelect"
    }],
    staticClass: "manage-select red-input",
    attrs: {
      "id": "alarm-process-status"
    },
    on: {
      "change": function($event) {
        var $$selectedVal = Array.prototype.filter.call($event.target.options, function(o) {
          return o.selected
        }).map(function(o) {
          var val = "_value" in o ? o._value : o.value;
          return val
        });
        _vm.alarmFormInitdata.processStatusSelect = $event.target.multiple ? $$selectedVal : $$selectedVal[0]
      }
    }
  }, _vm._l((_vm.processStatus), function(value, index) {
    return _c('option', {
      domProps: {
        "value": index - 1
      }
    }, [_vm._v(_vm._s(value))])
  }))]), _vm._v(" "), _c('span', {
    staticClass: "nowrap"
  }, [_c('label', {
    attrs: {
      "for": "alarm-time"
    }
  }, [_vm._v("报警时间")]), _vm._v(" "), _c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.alarmTimes),
      expression: "alarmTimes"
    }],
    staticClass: "manage-input",
    attrs: {
      "type": "text",
      "id": "alarm-time"
    },
    domProps: {
      "value": (_vm.alarmTimes)
    },
    on: {
      "blur": _vm.getTime,
      "input": function($event) {
        if ($event.target.composing) { return; }
        _vm.alarmTimes = $event.target.value
      }
    }
  })]), _vm._v(" "), _c('a', {
    staticClass: "white-button",
    attrs: {
      "href": "javascript:;"
    },
    on: {
      "click": _vm.queryList
    }
  }, [_vm._v("查询")])]), _vm._v(" "), _c('div', {
    staticClass: "configList"
  }, [_c('AlarmTable', {
    attrs: {
      "alarmquerydatas": _vm.querydatas
    },
    on: {
      "update:alarmquerydatas": function($event) {
        _vm.querydatas = $event
      }
    }
  })], 1), _vm._v(" "), _c('TurnPage', {
    attrs: {
      "type": _vm.alarmtable,
      "allpage": _vm.allpage,
      "tableTotal": _vm.tableTotal
    }
  })], 1)])])
},staticRenderFns: []}

/***/ }),
/* 102 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    staticClass: "productlinebox"
  }, [_c('div', {
    staticClass: "infoitembox"
  }, [_c('div', {
    staticClass: "itemtitle"
  }, [_vm._v("添加产品线")]), _vm._v(" "), _c('div', {
    staticStyle: {
      "display": "inline-block",
      "width": "800px"
    }
  }, [_c('div', {
    staticClass: "itemsubtitle requiredItem"
  }, [_vm._v("名称")]), _vm._v(" "), _c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.addData.name),
      expression: "addData.name"
    }],
    staticClass: "dataport-dialog-name ",
    attrs: {
      "type": "text",
      "placeholder": ""
    },
    domProps: {
      "value": (_vm.addData.name)
    },
    on: {
      "input": function($event) {
        if ($event.target.composing) { return; }
        _vm.addData.name = $event.target.value
      }
    }
  }), _vm._v(" "), _c('button', {
    on: {
      "click": _vm.addProductline
    }
  }, [_vm._v("添加")])])]), _vm._v(" "), _c('div', {
    staticClass: "infoitembox"
  }, [_c('div', {
    staticClass: "itemtitle"
  }, [_vm._v("修改产品线")]), _vm._v(" "), _c('div', {
    staticStyle: {
      "display": "inline-block",
      "width": "800px"
    }
  }, [_c('div', {
    staticClass: "itemsubtitle  requiredItem"
  }, [_vm._v("ID")]), _vm._v(" "), _c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.modifyData.id),
      expression: "modifyData.id"
    }],
    staticClass: "dataport-dialog-name",
    attrs: {
      "type": "text",
      "placeholder": ""
    },
    domProps: {
      "value": (_vm.modifyData.id)
    },
    on: {
      "input": function($event) {
        if ($event.target.composing) { return; }
        _vm.modifyData.id = $event.target.value
      }
    }
  }), _vm._v(" "), _c('div', {
    staticClass: "itemsubtitle requiredItem"
  }, [_vm._v("名称")]), _vm._v(" "), _c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.modifyData.name),
      expression: "modifyData.name"
    }],
    staticClass: "dataport-dialog-name",
    attrs: {
      "type": "text",
      "placeholder": ""
    },
    domProps: {
      "value": (_vm.modifyData.name)
    },
    on: {
      "input": function($event) {
        if ($event.target.composing) { return; }
        _vm.modifyData.name = $event.target.value
      }
    }
  }), _vm._v(" "), _c('button', {
    on: {
      "click": _vm.modifyProductline
    }
  }, [_vm._v("修改")])])]), _vm._v(" "), _c('div', {
    staticClass: "infoitembox"
  }), _vm._v(" "), _c('div', {
    staticClass: "table-div"
  }, [_c('table', {
    staticClass: "manage-table"
  }, [_vm._m(0), _vm._v(" "), _c('tbody', _vm._l((_vm.linesList), function(value, index) {
    return _c('tr', [_vm._m(1, true), _vm._v(" "), _c('td', [_vm._v(_vm._s(value.product_id))]), _vm._v(" "), _c('td', [_vm._v(_vm._s(value.product_name))]), _vm._v(" "), _c('td', [_c('a', {
      attrs: {
        "href": "javascript:;"
      },
      on: {
        "click": function($event) {
          _vm.deleteProductline(value.product_id, $event)
        }
      }
    }, [_vm._v("删除")])])])
  }))])])])
},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('thead', [_c('tr', [_c('th', {
    attrs: {
      "width": "5%"
    }
  }, [_c('input', {
    attrs: {
      "type": "checkbox",
      "name": "check-all",
      "disabled": "disabled"
    }
  })]), _vm._v(" "), _c('th', {
    attrs: {
      "width": "30%"
    }
  }, [_vm._v("产品线ID")]), _vm._v(" "), _c('th', {
    attrs: {
      "width": "35%"
    }
  }, [_vm._v("产品线名称")]), _vm._v(" "), _c('th', {
    attrs: {
      "width": "25%"
    }
  }, [_vm._v("操作")])])])
},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('td', [_c('input', {
    attrs: {
      "type": "checkbox",
      "disabled": "disabled"
    }
  })])
}]}

/***/ }),
/* 103 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    staticClass: "sideLeft",
    attrs: {
      "id": "sideLeft"
    }
  }, [_c('div', {
    attrs: {
      "id": "sideLeftbox"
    }
  }, [_c('h3', [_vm._v(_vm._s(_vm.topname))]), _vm._v(" "), _c('div', {
    directives: [{
      name: "show",
      rawName: "v-show",
      value: (false),
      expression: "false"
    }],
    staticClass: "searchbox"
  }, [_c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.treeSearch),
      expression: "treeSearch"
    }],
    attrs: {
      "type": "text",
      "id": "tree-search",
      "placeholder": "搜索"
    },
    domProps: {
      "value": (_vm.treeSearch)
    },
    on: {
      "input": function($event) {
        if ($event.target.composing) { return; }
        _vm.treeSearch = $event.target.value
      }
    }
  }), _c('span', {
    attrs: {
      "id": "ztree-search-button"
    }
  })]), _vm._v(" "), _c('div', {
    staticClass: "treeWrap"
  }, [_c('div', {
    staticClass: "treeBox",
    attrs: {
      "id": "treelist"
    }
  }, [_c('div', {
    class: {
      'treeName': true, 'triangleR': _vm.isShowTree, 'triangleD': !_vm.isShowTree
    },
    attrs: {
      "data-productid": -1
    },
    on: {
      "click": _vm.getProductId
    }
  }, [_c('i'), _c('a', {
    attrs: {
      "href": "javascript:;"
    }
  }, [_vm._v("全部")])]), _vm._v(" "), _c('ul', {
    directives: [{
      name: "show",
      rawName: "v-show",
      value: (_vm.isShowTree),
      expression: "isShowTree"
    }],
    staticClass: "treelist"
  }, _vm._l((_vm.lineslist), function(item, index) {
    return _c('li', {
      attrs: {
        "data-id": item.id,
        "data-index": index,
        "title": item.product_name,
        "data-productid": item.product_id
      },
      on: {
        "click": _vm.getProductId
      }
    }, [_c('a', {
      attrs: {
        "href": "javascript:;"
      }
    }, [_vm._v(_vm._s(item.product_name))])])
  }))])])])])
},staticRenderFns: []}

/***/ }),
/* 104 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    staticClass: "alarmPolicy",
    attrs: {
      "title": "权限组组管理"
    }
  }, [_c('div', {
    staticClass: "button-area",
    staticStyle: {
      "display": "block"
    }
  }, [_c('button', {
    staticClass: "add-blue-button",
    on: {
      "click": _vm.addCertiGroup
    }
  }, [_c('span'), _vm._v("新建权限组")]), _vm._v(" "), _c('button', {
    staticClass: "add-blue-button",
    on: {
      "click": _vm.addCertiMember
    }
  }, [_c('span'), _vm._v("添加权限组成员")])]), _vm._v(" "), (_vm.newAddGroup == true) ? _c('div', {
    staticClass: "manageTop",
    model: {
      value: (_vm.newAddGroup),
      callback: function($$v) {
        _vm.newAddGroup = $$v
      },
      expression: "newAddGroup"
    }
  }, [_c('span', {
    staticClass: "nowrap"
  }, [_c('label', [_vm._v("权限组名称")]), _c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.groupName),
      expression: "groupName"
    }],
    staticClass: "manage-input",
    attrs: {
      "type": "text",
      "required": ""
    },
    domProps: {
      "value": (_vm.groupName)
    },
    on: {
      "input": function($event) {
        if ($event.target.composing) { return; }
        _vm.groupName = $event.target.value
      }
    }
  })]), _vm._v(" "), _c('a', {
    staticClass: "white-button",
    attrs: {
      "href": "javascript:;"
    },
    on: {
      "click": _vm.saveAddGroup
    }
  }, [_vm._v("保存")]), _vm._v(" "), _c('a', {
    staticClass: "white-button",
    attrs: {
      "href": "javascript:;"
    },
    on: {
      "click": _vm.cancelAddGroup
    }
  }, [_vm._v("取消")])]) : _vm._e(), _vm._v(" "), (_vm.newAddMember == true) ? _c('div', {
    staticClass: "manageTop",
    model: {
      value: (_vm.newAddMember),
      callback: function($$v) {
        _vm.newAddMember = $$v
      },
      expression: "newAddMember"
    }
  }, [_c('span', {
    staticClass: "nowrap"
  }, [_c('label', [_vm._v("成员名称")]), _c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.memberName),
      expression: "memberName"
    }],
    staticClass: "manage-input",
    attrs: {
      "type": "text",
      "required": ""
    },
    domProps: {
      "value": (_vm.memberName)
    },
    on: {
      "input": function($event) {
        if ($event.target.composing) { return; }
        _vm.memberName = $event.target.value
      }
    }
  }), _vm._v(" "), _c('select', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.certiSelected),
      expression: "certiSelected"
    }],
    staticClass: "long-select",
    attrs: {
      "name": ""
    },
    on: {
      "change": function($event) {
        var $$selectedVal = Array.prototype.filter.call($event.target.options, function(o) {
          return o.selected
        }).map(function(o) {
          var val = "_value" in o ? o._value : o.value;
          return val
        });
        _vm.certiSelected = $event.target.multiple ? $$selectedVal : $$selectedVal[0]
      }
    }
  }, _vm._l((_vm.certiList), function(value, index) {
    return _c('option', {
      domProps: {
        "value": index
      }
    }, [_vm._v(_vm._s(value.class_name))])
  })), _vm._v(" "), _c('label', [_vm._v("是否为管理员")]), _vm._v(" "), _c('input', {
    attrs: {
      "type": "radio",
      "name": "isAdmin",
      "value": "yes"
    }
  }), _vm._v("是\n\t\t\t"), _c('input', {
    attrs: {
      "type": "radio",
      "name": "isAdmin",
      "value": "no",
      "checked": ""
    }
  }), _vm._v("否\n\t\t")]), _vm._v(" "), _c('a', {
    staticClass: "white-button",
    attrs: {
      "href": "javascript:;"
    },
    on: {
      "click": _vm.saveAddMember
    }
  }, [_vm._v("保存")]), _vm._v(" "), _c('a', {
    staticClass: "white-button",
    attrs: {
      "href": "javascript:;"
    },
    on: {
      "click": _vm.cancelAddMember
    }
  }, [_vm._v("取消")])]) : _vm._e(), _vm._v(" "), _c('div', {
    staticClass: "button-area",
    staticStyle: {
      "display": "block"
    }
  }), _vm._v(" "), _c('div', {
    staticClass: "table-div"
  }, [_c('table', {
    staticClass: "manage-table"
  }, [_vm._m(0), _vm._v(" "), _c('tbody', _vm._l((_vm.certiList), function(value, index) {
    return _c('tr', [_vm._m(1, true), _vm._v(" "), _c('td', [_vm._v(_vm._s(index))]), _vm._v(" "), _c('td', [_vm._v(_vm._s(value.class_name))]), _vm._v(" "), _c('td', [_c('a', {
      attrs: {
        "href": "javascript:;",
        "data-id": value.class_id
      },
      on: {
        "click": function($event) {
          _vm.editCertificateGroup(value.class_name)
        }
      }
    }, [_vm._v("编辑")]), _c('a', {
      attrs: {
        "href": "javascript:;",
        "data-id": value.class_id
      },
      on: {
        "click": function($event) {
          _vm.deleteComfirm($event)
        }
      }
    }, [_vm._v("删除")])])])
  }))])]), _vm._v(" "), _c('DialogsCertiGroup', {
    attrs: {
      "editinitformdata": _vm.editGetFormData
    }
  })], 1)
},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('thead', [_c('tr', [_c('th', {
    attrs: {
      "width": "10%"
    }
  }, [_c('input', {
    attrs: {
      "type": "checkbox",
      "name": "check-all",
      "disabled": "disabled"
    }
  })]), _vm._v(" "), _c('th', {
    attrs: {
      "width": "20%"
    }
  }, [_vm._v("ID")]), _vm._v(" "), _c('th', {
    attrs: {
      "width": "30%"
    }
  }, [_vm._v("权限组名称")]), _vm._v(" "), _c('th', {
    attrs: {
      "width": "40%"
    }
  }, [_vm._v("操作")])])])
},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('td', [_c('input', {
    attrs: {
      "type": "checkbox",
      "disabled": "disabled"
    }
  })])
}]}

/***/ }),
/* 105 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    staticClass: "table-div"
  }, [_c('table', {
    staticClass: "manage-table"
  }, [_vm._m(0), _vm._v(" "), _c('tbody', _vm._l((_vm.runloglist), function(value) {
    return _c('tr', [_vm._m(1, true), _vm._v(" "), _c('td', [_vm._v(_vm._s(value.id))]), _vm._v(" "), _c('td', [_vm._v(_vm._s(value.item_name))]), _vm._v(" "), _c('td', [_vm._v(_vm._s(value.item_type))]), _vm._v(" "), _c('td', [_vm._v(_vm._s(value.run_status))]), _vm._v(" "), _c('td', [_vm._v(_vm._s(_vm._f("formatDate")(value.run_time)))]), _vm._v(" "), _c('td', [_vm._v(_vm._s(value.time_consume))])])
  }))])])
},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('thead', [_c('tr', [_c('th', {
    attrs: {
      "width": "4%"
    }
  }, [_c('input', {
    attrs: {
      "type": "checkbox",
      "name": "check-all",
      "disabled": "disabled"
    }
  })]), _c('th', {
    attrs: {
      "width": "8%"
    }
  }, [_vm._v("序号")]), _c('th', {
    attrs: {
      "width": "20%"
    }
  }, [_vm._v("监控名称")]), _c('th', {
    attrs: {
      "width": "20%"
    }
  }, [_vm._v("监控类别")]), _c('th', {
    attrs: {
      "width": "18%"
    }
  }, [_vm._v("监控状态")]), _c('th', {
    attrs: {
      "width": "20%"
    }
  }, [_vm._v("运行时间")]), _c('th', {
    attrs: {
      "width": "10%"
    }
  }, [_vm._v("耗时(ms)")])])])
},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('td', [_c('input', {
    attrs: {
      "type": "checkbox",
      "disabled": "disabled"
    }
  })])
}]}

/***/ }),
/* 106 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    staticClass: "SideRight"
  }, [_c('div', {
    staticClass: "alarminfobox"
  }, [_c('div', {
    staticClass: "infoitembox"
  }, [_c('div', {
    staticClass: "itemtitle"
  }, [_vm._v("报警根因反馈")]), _vm._v(" "), _c('div', {
    staticClass: "itemtext"
  }, [_c('select', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.reasonSelected),
      expression: "reasonSelected"
    }],
    attrs: {
      "name": "reasonpselect",
      "id": "reasonpselect"
    },
    on: {
      "change": [function($event) {
        var $$selectedVal = Array.prototype.filter.call($event.target.options, function(o) {
          return o.selected
        }).map(function(o) {
          var val = "_value" in o ? o._value : o.value;
          return val
        });
        _vm.reasonSelected = $event.target.multiple ? $$selectedVal : $$selectedVal[0]
      }, _vm.resetSecondSelected]
    }
  }, _vm._l((_vm.reasons), function(value, index) {
    return _c('option', {
      domProps: {
        "value": index
      }
    }, [_vm._v(_vm._s(value))])
  })), _vm._v(" "), (_vm.reasonSelected == 0) ? [(_vm.secondReason1.length > 0) ? _c('select', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.secondReasonSelected),
      expression: "secondReasonSelected"
    }],
    attrs: {
      "name": "secondreasonpselect",
      "id": "secondreasonpselect"
    },
    on: {
      "change": function($event) {
        var $$selectedVal = Array.prototype.filter.call($event.target.options, function(o) {
          return o.selected
        }).map(function(o) {
          var val = "_value" in o ? o._value : o.value;
          return val
        });
        _vm.secondReasonSelected = $event.target.multiple ? $$selectedVal : $$selectedVal[0]
      }
    }
  }, _vm._l((_vm.secondReason1), function(value, index) {
    return _c('option', {
      domProps: {
        "value": index
      }
    }, [_vm._v(_vm._s(value))])
  })) : _vm._e()] : (_vm.reasonSelected == 1) ? [(_vm.secondReason2.length > 0) ? _c('select', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.secondReasonSelected),
      expression: "secondReasonSelected"
    }],
    attrs: {
      "name": "secondreasonpselect",
      "id": "secondreasonpselect"
    },
    on: {
      "change": function($event) {
        var $$selectedVal = Array.prototype.filter.call($event.target.options, function(o) {
          return o.selected
        }).map(function(o) {
          var val = "_value" in o ? o._value : o.value;
          return val
        });
        _vm.secondReasonSelected = $event.target.multiple ? $$selectedVal : $$selectedVal[0]
      }
    }
  }, _vm._l((_vm.secondReason2), function(value, index) {
    return _c('option', {
      domProps: {
        "value": index
      }
    }, [_vm._v(_vm._s(value))])
  })) : _vm._e()] : (_vm.reasonSelected == 2) ? [(_vm.secondReason3.length > 0) ? _c('select', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.secondReasonSelected),
      expression: "secondReasonSelected"
    }],
    attrs: {
      "name": "secondreasonpselect",
      "id": "secondreasonpselect"
    },
    on: {
      "change": function($event) {
        var $$selectedVal = Array.prototype.filter.call($event.target.options, function(o) {
          return o.selected
        }).map(function(o) {
          var val = "_value" in o ? o._value : o.value;
          return val
        });
        _vm.secondReasonSelected = $event.target.multiple ? $$selectedVal : $$selectedVal[0]
      }
    }
  }, _vm._l((_vm.secondReason3), function(value, index) {
    return _c('option', {
      domProps: {
        "value": index
      }
    }, [_vm._v(_vm._s(value))])
  })) : _vm._e()] : (_vm.reasonSelected == 3) ? [(_vm.secondReason4.length > 0) ? _c('select', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.secondReasonSelected),
      expression: "secondReasonSelected"
    }],
    attrs: {
      "name": "secondreasonpselect",
      "id": "secondreasonpselect"
    },
    on: {
      "change": function($event) {
        var $$selectedVal = Array.prototype.filter.call($event.target.options, function(o) {
          return o.selected
        }).map(function(o) {
          var val = "_value" in o ? o._value : o.value;
          return val
        });
        _vm.secondReasonSelected = $event.target.multiple ? $$selectedVal : $$selectedVal[0]
      }
    }
  }, _vm._l((_vm.secondReason4), function(value, index) {
    return _c('option', {
      domProps: {
        "value": index
      }
    }, [_vm._v(_vm._s(value))])
  })) : _vm._e()] : (_vm.reasonSelected == 4) ? [(_vm.secondReason5.length > 0) ? _c('select', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.secondReasonSelected),
      expression: "secondReasonSelected"
    }],
    attrs: {
      "name": "secondreasonpselect",
      "id": "secondreasonpselect"
    },
    on: {
      "change": function($event) {
        var $$selectedVal = Array.prototype.filter.call($event.target.options, function(o) {
          return o.selected
        }).map(function(o) {
          var val = "_value" in o ? o._value : o.value;
          return val
        });
        _vm.secondReasonSelected = $event.target.multiple ? $$selectedVal : $$selectedVal[0]
      }
    }
  }, _vm._l((_vm.secondReason5), function(value, index) {
    return _c('option', {
      domProps: {
        "value": index
      }
    }, [_vm._v(_vm._s(value))])
  })) : _vm._e()] : (_vm.reasonSelected == 5) ? [(_vm.secondReason6.length > 0) ? _c('select', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.secondReasonSelected),
      expression: "secondReasonSelected"
    }],
    attrs: {
      "name": "secondreasonpselect",
      "id": "secondreasonpselect"
    },
    on: {
      "change": function($event) {
        var $$selectedVal = Array.prototype.filter.call($event.target.options, function(o) {
          return o.selected
        }).map(function(o) {
          var val = "_value" in o ? o._value : o.value;
          return val
        });
        _vm.secondReasonSelected = $event.target.multiple ? $$selectedVal : $$selectedVal[0]
      }
    }
  }, _vm._l((_vm.secondReason6), function(value, index) {
    return _c('option', {
      domProps: {
        "value": index
      }
    }, [_vm._v(_vm._s(value))])
  })) : _vm._e()] : (_vm.reasonSelected == 6) ? [(_vm.secondReason7.length > 0) ? _c('select', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.secondReasonSelected),
      expression: "secondReasonSelected"
    }],
    attrs: {
      "name": "secondreasonpselect",
      "id": "secondreasonpselect"
    },
    on: {
      "change": function($event) {
        var $$selectedVal = Array.prototype.filter.call($event.target.options, function(o) {
          return o.selected
        }).map(function(o) {
          var val = "_value" in o ? o._value : o.value;
          return val
        });
        _vm.secondReasonSelected = $event.target.multiple ? $$selectedVal : $$selectedVal[0]
      }
    }
  }, _vm._l((_vm.secondReason7), function(value, index) {
    return _c('option', {
      domProps: {
        "value": index
      }
    }, [_vm._v(_vm._s(value))])
  })) : _vm._e()] : _vm._e()], 2)]), _vm._v(" "), _c('div', {
    staticClass: "infoitembox"
  }, [_c('div', {
    staticClass: "itemtitle"
  }, [_vm._v("问题严重等级")]), _vm._v(" "), _c('div', {
    staticClass: "itemtext"
  }, [_c('select', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.problemgradeSelected),
      expression: "problemgradeSelected"
    }],
    attrs: {
      "name": "problemgrade",
      "id": "problemgrade"
    },
    on: {
      "change": function($event) {
        var $$selectedVal = Array.prototype.filter.call($event.target.options, function(o) {
          return o.selected
        }).map(function(o) {
          var val = "_value" in o ? o._value : o.value;
          return val
        });
        _vm.problemgradeSelected = $event.target.multiple ? $$selectedVal : $$selectedVal[0]
      }
    }
  }, _vm._l((_vm.problemgrades), function(value, index) {
    return _c('option', {
      domProps: {
        "value": index
      }
    }, [_vm._v(_vm._s(value))])
  }))])]), _vm._v(" "), _c('div', {
    staticClass: "infoitembox"
  }, [_c('div', {
    staticClass: "itemtitle"
  }, [_vm._v("反馈详情")]), _vm._v(" "), _c('div', {
    staticClass: "itemtext"
  }, [_c('textarea', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.feedbackdetail),
      expression: "feedbackdetail"
    }],
    staticClass: "inputtextarea",
    domProps: {
      "value": (_vm.feedbackdetail)
    },
    on: {
      "input": function($event) {
        if ($event.target.composing) { return; }
        _vm.feedbackdetail = $event.target.value
      }
    }
  })])]), _vm._v(" "), _c('div', {
    staticClass: "infoitembox"
  }, [_c('div', {
    staticClass: "itemtitle"
  }, [_vm._v("实际损失描述")]), _vm._v(" "), _c('div', {
    staticClass: "itemtext"
  }, [_c('textarea', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.lossdescribe),
      expression: "lossdescribe"
    }],
    staticClass: "inputtextarea",
    domProps: {
      "value": (_vm.lossdescribe)
    },
    on: {
      "input": function($event) {
        if ($event.target.composing) { return; }
        _vm.lossdescribe = $event.target.value
      }
    }
  })])]), _vm._v(" "), _c('div', {
    staticClass: "infoitembox"
  }, [_c('div', {
    staticClass: "itemtitle"
  }), _vm._v(" "), _c('div', {
    staticClass: "itemtext buttons"
  }, [_c('a', {
    staticClass: "dialog-blue-button",
    attrs: {
      "href": "javascript:;"
    },
    on: {
      "click": _vm.save
    }
  }, [_vm._v("保存")]), _vm._v(" "), _c('router-link', {
    staticClass: "dialog-gray-button",
    attrs: {
      "to": "/alarm",
      "target": "_blank"
    }
  }, [_vm._v("取消")])], 1)])])])
},staticRenderFns: []}

/***/ }),
/* 107 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    staticClass: "alarmPolicy",
    attrs: {
      "title": "页面元素"
    }
  }, [_c('div', {
    staticClass: "button-area"
  }, [_c('button', {
    staticClass: "add-blue-button",
    on: {
      "click": _vm.newAddCase
    }
  }, [_c('span'), _vm._v("新建页面元素case")])]), _vm._v(" "), _c('div', {
    staticClass: "table-div"
  }, [_c('table', {
    staticClass: "manage-table"
  }, [_vm._m(0), _vm._v(" "), _c('tbody', _vm._l((_vm.tableHttp), function(item, index) {
    return _c('tr', [_vm._m(1, true), _vm._v(" "), _c('td', [_vm._v(_vm._s(item.id))]), _vm._v(" "), _c('td', [_vm._v(_vm._s(item.item_name))]), _vm._v(" "), _c('td', [_vm._v(_vm._s(item.url))]), _vm._v(" "), _c('td', [_vm._v(_vm._s(item.level))]), _vm._v(" "), _c('td', [_vm._v(_vm._s(item.frequence))]), _vm._v(" "), _c('td', [_vm._v(_vm._s(_vm._f("formatDate")(item.last_runtime)))]), _vm._v(" "), _c('td', [(item.status == 1) ? [_c('a', {
      attrs: {
        "href": "javascript:;",
        "data-id": item.id,
        "data-index": index
      },
      on: {
        "click": function($event) {
          _vm.editHttp(true)
        }
      }
    }, [_vm._v("编辑")]), _vm._v(" "), _c('a', {
      attrs: {
        "href": "javascript:;",
        "data-id": item.id,
        "data-index": index
      },
      on: {
        "click": _vm.startHttp
      }
    }, [_vm._v("启用")]), _vm._v(" "), _c('a', {
      attrs: {
        "href": "javascript:;",
        "data-id": item.id,
        "data-index": index
      },
      on: {
        "click": function($event) {
          _vm.deleteComfirm(2, $event)
        }
      }
    }, [_vm._v("删除")])] : (item.status == 2) ? [_c('a', {
      attrs: {
        "href": "javascript:;",
        "data-id": item.id,
        "data-index": index
      },
      on: {
        "click": function($event) {
          _vm.editHttp(false)
        }
      }
    }, [_vm._v("查看")]), _vm._v(" "), _c('a', {
      attrs: {
        "href": "javascript:;",
        "data-id": item.id,
        "data-index": index
      },
      on: {
        "click": _vm.stopHttp
      }
    }, [_vm._v("停用")])] : _vm._e()], 2)])
  }))])]), _vm._v(" "), _c('DialogsAddEles', {
    attrs: {
      "editinitelesformData": _vm.editGetFormData
    }
  })], 1)
},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('thead', [_c('tr', [_c('th', {
    attrs: {
      "width": "3%"
    }
  }, [_c('input', {
    attrs: {
      "type": "checkbox",
      "name": "check-all",
      "disabled": "disabled"
    }
  })]), _c('th', {
    attrs: {
      "width": "8%"
    }
  }, [_vm._v("序号")]), _c('th', {
    attrs: {
      "width": "17%"
    }
  }, [_vm._v("监控名称")]), _c('th', {
    attrs: {
      "width": "17%"
    }
  }, [_vm._v("监控url")]), _c('th', {
    attrs: {
      "width": "8%"
    }
  }, [_vm._v("监控级别")]), _c('th', {
    attrs: {
      "width": "10%"
    }
  }, [_vm._v("监控周期(m)")]), _c('th', {
    attrs: {
      "width": "15%"
    }
  }, [_vm._v("上次运行时间")]), _c('th', {
    attrs: {
      "width": "22%"
    }
  }, [_vm._v("操作")])])])
},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('td', [_c('input', {
    attrs: {
      "type": "checkbox",
      "disabled": "disabled"
    }
  })])
}]}

/***/ }),
/* 108 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    staticClass: "alarmPolicy",
    attrs: {
      "title": "http可用性"
    }
  }, [_c('div', {
    staticClass: "button-area",
    staticStyle: {
      "display": "block"
    }
  }, [_c('button', {
    staticClass: "add-blue-button",
    on: {
      "click": _vm.newAddCase
    }
  }, [_c('span'), _vm._v("新建http可用性case")])]), _vm._v(" "), _c('div', {
    staticClass: "table-div"
  }, [_c('table', {
    staticClass: "manage-table"
  }, [_vm._m(0), _vm._v(" "), _c('tbody', _vm._l((_vm.tableHttp), function(item, index) {
    return _c('tr', [_vm._m(1, true), _vm._v(" "), _c('td', [_vm._v(_vm._s(item.id))]), _vm._v(" "), _c('td', [_vm._v(_vm._s(item.item_name))]), _vm._v(" "), _c('td', [_vm._v(_vm._s(item.url))]), _vm._v(" "), _c('td', [_vm._v(_vm._s(item.level))]), _vm._v(" "), _c('td', [_vm._v(_vm._s(item.frequence))]), _vm._v(" "), _c('td', [_vm._v(_vm._s(_vm._f("formatDate")(item.last_runtime)))]), _vm._v(" "), _c('td', [(item.status == 1) ? [_c('a', {
      attrs: {
        "href": "javascript:;",
        "data-id": item.id,
        "data-index": index
      },
      on: {
        "click": function($event) {
          _vm.editHttp(true)
        }
      }
    }, [_vm._v("编辑")]), _vm._v(" "), _c('a', {
      attrs: {
        "href": "javascript:;",
        "data-id": item.id,
        "data-index": index
      },
      on: {
        "click": _vm.startHttp
      }
    }, [_vm._v("启用")]), _vm._v(" "), _c('a', {
      attrs: {
        "href": "javascript:;",
        "data-id": item.id,
        "data-index": index
      },
      on: {
        "click": function($event) {
          _vm.deleteComfirm(0, $event)
        }
      }
    }, [_vm._v("删除")])] : (item.status == 2) ? [_c('a', {
      attrs: {
        "href": "javascript:;",
        "data-id": item.id,
        "data-index": index
      },
      on: {
        "click": function($event) {
          _vm.editHttp(false)
        }
      }
    }, [_vm._v("查看")]), _vm._v(" "), _c('a', {
      attrs: {
        "href": "javascript:;",
        "data-id": item.id,
        "data-index": index
      },
      on: {
        "click": _vm.stopHttp
      }
    }, [_vm._v("停用")])] : _vm._e()], 2)])
  }))])]), _vm._v(" "), _c('DialogsAddHttp', {
    attrs: {
      "editinitformdata": _vm.editGetFormData
    }
  })], 1)
},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('thead', [_c('tr', [_c('th', {
    attrs: {
      "width": "3%"
    }
  }, [_c('input', {
    attrs: {
      "type": "checkbox",
      "name": "check-all",
      "disabled": "disabled"
    }
  })]), _c('th', {
    attrs: {
      "width": "8%"
    }
  }, [_vm._v("序号")]), _c('th', {
    attrs: {
      "width": "17%"
    }
  }, [_vm._v("监控名称")]), _c('th', {
    attrs: {
      "width": "17%"
    }
  }, [_vm._v("监控url")]), _c('th', {
    attrs: {
      "width": "8%"
    }
  }, [_vm._v("监控级别")]), _c('th', {
    attrs: {
      "width": "10%"
    }
  }, [_vm._v("监控周期(m)")]), _c('th', {
    attrs: {
      "width": "15%"
    }
  }, [_vm._v("上次运行时间")]), _c('th', {
    attrs: {
      "width": "22%"
    }
  }, [_vm._v("操作")])])])
},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('td', [_c('input', {
    attrs: {
      "type": "checkbox",
      "disabled": "disabled"
    }
  })])
}]}

/***/ }),
/* 109 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _vm._m(0)
},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    staticClass: "SideRight"
  }, [_c('div', {
    staticClass: "manage-main"
  }, [_vm._v("\n\t\t我的主页\n\t")])])
}]}

/***/ }),
/* 110 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    staticClass: "pageDiv"
  }, [_c('ul', {
    staticClass: "pagination"
  }, [_c('li', {
    directives: [{
      name: "show",
      rawName: "v-show",
      value: (_vm.current != 1),
      expression: "current != 1"
    }],
    staticClass: "pre",
    on: {
      "click": function($event) {
        _vm.current-- && _vm.goto(_vm.current)
      }
    }
  }, [_c('a', {
    attrs: {
      "href": "javascript:;"
    }
  }, [_vm._v("<")])]), _vm._v(" "), _vm._l((_vm.pages), function(index) {
    return _c('li', {
      key: index,
      class: {
        'num': true, 'active': _vm.current == index
      }
    }, [_c('a', {
      attrs: {
        "href": "javascript:;"
      },
      on: {
        "click": function($event) {
          _vm.goto(index)
        }
      }
    }, [_vm._v(_vm._s(index))])])
  }), _vm._v(" "), _c('li', {
    directives: [{
      name: "show",
      rawName: "v-show",
      value: (_vm.allpage != _vm.current && _vm.allpage != 0),
      expression: "allpage != current && allpage != 0 "
    }],
    staticClass: "next",
    on: {
      "click": function($event) {
        _vm.current++ && _vm.goto(_vm.current++)
      }
    }
  }, [_c('a', {
    attrs: {
      "href": "javascript:;"
    }
  }, [_vm._v(">")])])], 2), _vm._v(" "), _c('span', {
    staticClass: "page-total"
  }, [_vm._v("共" + _vm._s(_vm.allpage) + "页")]), _vm._v(" "), _c('span', {
    staticClass: "num-total"
  }, [_vm._v("共" + _vm._s(_vm.tableTotal) + "条")])])
},staticRenderFns: []}

/***/ }),
/* 111 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('header', {
    staticClass: "header header-noborder"
  }, [_c('div', {
    staticClass: "header-container clearfix"
  }, [_c('router-link', {
    staticClass: "logo",
    attrs: {
      "to": "/manageitems"
    }
  }), _vm._v(" "), _c('div', {
    staticClass: "user-info mr"
  }, [_c('div', {
    staticClass: "username mr-s",
    staticStyle: {
      "position": "relative"
    }
  }, [_c('span', [_vm._v(_vm._s(_vm.username))]), _vm._v(" "), _vm._m(0)])]), _vm._v(" "), _c('ul', {
    staticClass: "nav-list"
  }, [_c('li', {
    staticClass: "nav-ul-selected",
    attrs: {
      "id": "manage-li"
    }
  }, [_c('router-link', {
    attrs: {
      "to": "/manageitems"
    }
  }, [_vm._v("监控项管理")])], 1), _vm._v(" "), _c('li', {
    attrs: {
      "id": "alarm-li"
    }
  }, [_c('a', [_vm._v("监控报警")]), _vm._v(" "), _c('ul', {
    staticClass: "sub-nav"
  }, [_c('li', {
    attrs: {
      "id": "process-li"
    }
  }, [_c('router-link', {
    attrs: {
      "to": "/alarm"
    }
  }, [_vm._v("报警处理")])], 1), _vm._v(" "), _c('li', {
    attrs: {
      "id": "run-log-li"
    }
  }, [_c('router-link', {
    attrs: {
      "to": "/runlog"
    }
  }, [_vm._v("运行记录")])], 1)])]), _vm._v(" "), _c('span', [_vm._v("|")]), _vm._v(" "), _c('li', {
    staticClass: "nav-ul-selected",
    attrs: {
      "id": "product-li"
    }
  }, [_c('router-link', {
    attrs: {
      "to": "/productline"
    }
  }, [_vm._v("产品线管理")])], 1), _vm._v(" "), _c('li', {
    staticClass: "nav-ul-selected",
    attrs: {
      "id": "user-li"
    }
  }, [_c('router-link', {
    attrs: {
      "to": "/manageusers"
    }
  }, [_vm._v("用户管理")])], 1)])], 1)])
},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('ul', {
    staticClass: "sub-nav t_right",
    staticStyle: {
      "right": "0"
    }
  }, [_c('li', [_c('a', {
    attrs: {
      "href": "http://monitor.taihenw.com/logout.php"
    }
  }, [_vm._v("安全退出")])])])
}]}

/***/ }),
/* 112 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    staticClass: "alarminfobox"
  }, [_c('div', {
    staticClass: "infoitembox"
  }, [_c('div', {
    staticClass: "itemtitle"
  }, [_vm._v("添加用户")]), _vm._v(" "), _c('div', {
    staticStyle: {
      "display": "inline-block",
      "width": "800px"
    }
  }, [_c('div', {
    staticClass: "itemsubtitle requiredItem"
  }, [_vm._v("用户名")]), _vm._v(" "), _c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.addData.membername),
      expression: "addData.membername"
    }],
    staticClass: "dataport-dialog-name ",
    attrs: {
      "type": "text",
      "placeholder": ""
    },
    domProps: {
      "value": (_vm.addData.membername)
    },
    on: {
      "input": function($event) {
        if ($event.target.composing) { return; }
        _vm.addData.membername = $event.target.value
      }
    }
  }), _vm._v(" "), _c('div', {
    staticClass: "itemsubtitle  requiredItem"
  }, [_vm._v(" 电话")]), _vm._v(" "), _c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.addData.telephone),
      expression: "addData.telephone"
    }],
    staticClass: "dataport-dialog-name",
    attrs: {
      "type": "text",
      "placeholder": ""
    },
    domProps: {
      "value": (_vm.addData.telephone)
    },
    on: {
      "input": function($event) {
        if ($event.target.composing) { return; }
        _vm.addData.telephone = $event.target.value
      }
    }
  }), _vm._v(" "), _c('div', {
    staticClass: "itemsubtitle  requiredItem"
  }, [_vm._v(" 邮箱")]), _vm._v(" "), _c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.addData.email),
      expression: "addData.email"
    }],
    staticClass: "dataport-dialog-name",
    attrs: {
      "type": "text",
      "placeholder": ""
    },
    domProps: {
      "value": (_vm.addData.email)
    },
    on: {
      "input": function($event) {
        if ($event.target.composing) { return; }
        _vm.addData.email = $event.target.value
      }
    }
  }), _vm._v(" "), _c('button', {
    on: {
      "click": _vm.addUser
    }
  }, [_vm._v("添加")])])]), _vm._v(" "), _c('div', {
    staticClass: "infoitembox"
  }, [_c('div', {
    staticClass: "itemtitle"
  }, [_vm._v("修改用户")]), _vm._v(" "), _c('div', {
    staticStyle: {
      "display": "inline-block",
      "width": "800px"
    }
  }, [_c('div', {
    staticClass: "itemsubtitle  requiredItem"
  }, [_vm._v("用户名")]), _vm._v(" "), _c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.modifyData.membername),
      expression: "modifyData.membername"
    }],
    staticClass: "dataport-dialog-name",
    attrs: {
      "type": "text",
      "placeholder": ""
    },
    domProps: {
      "value": (_vm.modifyData.membername)
    },
    on: {
      "input": function($event) {
        if ($event.target.composing) { return; }
        _vm.modifyData.membername = $event.target.value
      }
    }
  }), _vm._v(" "), _c('div', {
    staticClass: "itemsubtitle"
  }, [_vm._v("电话")]), _vm._v(" "), _c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.modifyData.telephone),
      expression: "modifyData.telephone"
    }],
    staticClass: "dataport-dialog-name",
    attrs: {
      "type": "text",
      "placeholder": ""
    },
    domProps: {
      "value": (_vm.modifyData.telephone)
    },
    on: {
      "input": function($event) {
        if ($event.target.composing) { return; }
        _vm.modifyData.telephone = $event.target.value
      }
    }
  }), _vm._v(" "), _c('div', {
    staticClass: "itemsubtitle"
  }, [_vm._v("邮箱")]), _vm._v(" "), _c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.modifyData.email),
      expression: "modifyData.email"
    }],
    staticClass: "dataport-dialog-name",
    attrs: {
      "type": "text",
      "placeholder": ""
    },
    domProps: {
      "value": (_vm.modifyData.email)
    },
    on: {
      "input": function($event) {
        if ($event.target.composing) { return; }
        _vm.modifyData.email = $event.target.value
      }
    }
  }), _vm._v(" "), _c('button', {
    on: {
      "click": _vm.modifyUser
    }
  }, [_vm._v("修改")])])]), _vm._v(" "), _c('div', {
    staticClass: "infoitembox"
  }, [_c('div', {
    staticClass: "itemtitle"
  }, [_vm._v("查询用户")]), _vm._v(" "), _c('div', {
    staticStyle: {
      "display": "inline-block",
      "width": "800px"
    }
  }, [_c('div', {
    staticClass: "itemsubtitle requiredItem"
  }, [_vm._v("用户名")]), _vm._v(" "), _c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.searchData.membername),
      expression: "searchData.membername"
    }],
    staticClass: "dataport-dialog-name",
    attrs: {
      "type": "text",
      "placeholder": ""
    },
    domProps: {
      "value": (_vm.searchData.membername)
    },
    on: {
      "input": function($event) {
        if ($event.target.composing) { return; }
        _vm.searchData.membername = $event.target.value
      }
    }
  }), _vm._v(" "), _c('button', {
    on: {
      "click": _vm.searchUser
    }
  }, [_vm._v("查询")])])]), _vm._v(" "), _c('div', {
    staticClass: "infoitembox"
  }), _vm._v(" "), _c('div', {
    staticClass: "table-div"
  }, [_c('table', {
    staticClass: "manage-table"
  }, [_vm._m(0), _vm._v(" "), _c('tbody', _vm._l((_vm.userList), function(value, index) {
    return _c('tr', [_vm._m(1, true), _vm._v(" "), _c('td', [_vm._v(_vm._s(value.id))]), _vm._v(" "), _c('td', [_vm._v(_vm._s(value.username))]), _vm._v(" "), _c('td', [_vm._v(_vm._s(value.tel_no))]), _vm._v(" "), _c('td', [_vm._v(_vm._s(value.email))]), _vm._v(" "), _c('td', [_c('a', {
      attrs: {
        "href": "javascript:;"
      },
      on: {
        "click": function($event) {
          _vm.deleteUser(value.username, $event)
        }
      }
    }, [_vm._v("删除")])])])
  }))])])])
},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('thead', [_c('tr', [_c('th', {
    attrs: {
      "width": "5%"
    }
  }, [_c('input', {
    attrs: {
      "type": "checkbox",
      "name": "check-all",
      "disabled": "disabled"
    }
  })]), _vm._v(" "), _c('th', {
    attrs: {
      "width": "10%"
    }
  }, [_vm._v("ID")]), _vm._v(" "), _c('th', {
    attrs: {
      "width": "20%"
    }
  }, [_vm._v("用户名")]), _vm._v(" "), _c('th', {
    attrs: {
      "width": "20%"
    }
  }, [_vm._v("电话")]), _vm._v(" "), _c('th', {
    attrs: {
      "width": "20%"
    }
  }, [_vm._v("邮箱")]), _vm._v(" "), _c('th', {
    attrs: {
      "width": "25%"
    }
  }, [_vm._v("操作")])])])
},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('td', [_c('input', {
    attrs: {
      "type": "checkbox",
      "disabled": "disabled"
    }
  })])
}]}

/***/ }),
/* 113 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    staticClass: "dialog"
  }, [_c('div', {
    staticClass: "dialogOverlay"
  }), _vm._v(" "), _c('div', {
    staticClass: "dialogContent"
  }, [_c('div', {
    staticClass: "dialogClose",
    on: {
      "click": _vm.hideDialog
    }
  }), _vm._v(" "), _c('div', {
    staticClass: "dialogDetail"
  }, [_c('div', {
    staticClass: "dialogTitle"
  }, [_vm._v(_vm._s(_vm.dialogTitle))]), _vm._v(" "), _c('div', {
    staticClass: "dialogDiv"
  }, [_c('div', {
    staticClass: "dialogSubDiv"
  }, [_c('div', {
    staticClass: "subDivTitle requiredItem"
  }, [_vm._v("报警组名称")]), _vm._v(" "), _c('div', {
    staticClass: "subDivContent"
  }, [_c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.className),
      expression: "className"
    }],
    staticClass: "dataport-dialog-name",
    attrs: {
      "type": "text",
      "placeholder": ""
    },
    domProps: {
      "value": (_vm.className)
    },
    on: {
      "input": function($event) {
        if ($event.target.composing) { return; }
        _vm.className = $event.target.value
      }
    }
  }), _c('button', {
    staticClass: "blue-button",
    staticStyle: {
      "margin": "5px"
    },
    on: {
      "click": _vm.rename
    }
  }, [_vm._v("重命名")])])]), _vm._v(" "), _c('div', {
    staticClass: "dialogSubDiv"
  }, [_c('div', {
    staticClass: "subDivTitle"
  }, [_vm._v("报警组成员")]), _vm._v(" "), _c('div', {
    staticStyle: {
      "display": "inline-block",
      "width": "600px"
    }
  }, [_vm._l((_vm.usersselects), function(item, i) {
    return [_c('div', {
      staticClass: "subDivContent",
      staticStyle: {
        "margin-bottom": "10px"
      }
    }, [_c('div', {
      staticClass: "subDivCard"
    }, [_c('div', {
      staticClass: "box"
    }, [_c('label', {
      staticClass: "name"
    }, [_vm._v("成员名(非空)")]), _vm._v(" "), _c('input', {
      directives: [{
        name: "model",
        rawName: "v-model",
        value: (item.username),
        expression: "item.username"
      }],
      staticClass: "dataport-dialog-rulename",
      attrs: {
        "type": "text",
        "placeholder": ""
      },
      domProps: {
        "value": (item.username)
      },
      on: {
        "input": function($event) {
          if ($event.target.composing) { return; }
          item.username = $event.target.value
        }
      }
    })]), _vm._v(" "), _c('div', {
      staticClass: "box"
    }, [_c('label', {
      staticClass: "name"
    }, [_vm._v("条件操作")]), _vm._v(" "), _c('div', {
      staticClass: "subbox"
    }, [_c('button', {
      directives: [{
        name: "show",
        rawName: "v-show",
        value: (_vm.usersselects.length > 0),
        expression: "usersselects.length >0"
      }],
      staticClass: "blue-button",
      on: {
        "click": function($event) {
          _vm.deleteUser(i)
        }
      }
    }, [_vm._v("删除")])])])])])]
  })], 2)])])])])])
},staticRenderFns: []}

/***/ }),
/* 114 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    staticClass: "SideRight"
  }, [_c('div', {
    staticClass: "manage-main"
  }, [_c('div', {
    staticClass: "topbox"
  }, [_c('div', {
    staticClass: "manageTop"
  }, [_c('span', {
    staticClass: "nowrap"
  }, [_c('label', [_vm._v("请选择管理类别")]), _vm._v(" "), _c('input', {
    attrs: {
      "type": "radio",
      "name": "manage-type",
      "value": "user"
    },
    on: {
      "click": function($event) {
        _vm.getTableList(1)
      }
    }
  }), _vm._v("用户管理\n\t\t\t\t\t"), _c('input', {
    attrs: {
      "type": "radio",
      "name": "manage-type",
      "value": "alert"
    },
    on: {
      "click": function($event) {
        _vm.getTableList(2)
      }
    }
  }), _vm._v("报警组管理\n\t\t\t\t\t"), _c('input', {
    attrs: {
      "type": "radio",
      "name": "manage-type",
      "value": "certificate"
    },
    on: {
      "click": function($event) {
        _vm.getTableList(3)
      }
    }
  }), _vm._v("权限组管理\n\t\t\t\t")])])]), _vm._v(" "), _c('div', {
    staticClass: "configList"
  }, [_c('keep-alive', [_c(_vm.dynamics, {
    tag: "component"
  })], 1)], 1)])])
},staticRenderFns: []}

/***/ }),
/* 115 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _vm._m(0)
},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    staticClass: "SideRight"
  }, [_c('div', {
    staticClass: "manage-main"
  }, [_c('div', {
    staticClass: "topbox"
  }, [_c('div', {
    staticClass: "manageTop"
  }, [_vm._v("\n\t\t\t\t我的图表部分----稍后完成\n\t\t\t")]), _vm._v(" "), _c('div', {
    staticClass: "configList"
  }, [_vm._v("\n\t\t\t\t我是列表部分------稍后完成\n\t\t\t")]), _vm._v(" "), _c('div', {
    staticClass: "pageDiv"
  }, [_c('ul', {
    staticClass: "pagination"
  }, [_c('li', {
    staticClass: "pre disabled"
  }, [_c('a', {
    attrs: {
      "href": "javascript:;"
    }
  }, [_vm._v("<")])]), _vm._v(" "), _c('li', {
    staticClass: "num active"
  }, [_c('a', {
    attrs: {
      "href": "javascript:;"
    }
  }, [_vm._v("1")])]), _vm._v(" "), _c('li', {
    staticClass: "num"
  }, [_c('a', {
    attrs: {
      "href": "javascript:;"
    }
  }, [_vm._v("2")])]), _vm._v(" "), _c('li', {
    staticClass: "next"
  }, [_c('a', {
    attrs: {
      "href": "javascript:;"
    }
  }, [_vm._v(">")])])]), _vm._v(" "), _c('span', {
    staticClass: "page-total"
  }, [_vm._v("共2页")]), _vm._v(" "), _c('span', {
    staticClass: "num-total"
  }, [_vm._v("共13条")])])])])])
}]}

/***/ }),
/* 116 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    staticClass: "alarmPolicy",
    attrs: {
      "title": "报警组管理"
    }
  }, [_c('div', {
    staticClass: "button-area",
    staticStyle: {
      "display": "block"
    }
  }, [_c('button', {
    staticClass: "add-blue-button",
    on: {
      "click": _vm.addAlertGroup
    }
  }, [_c('span'), _vm._v("新建报警组")]), _vm._v(" "), _c('button', {
    staticClass: "add-blue-button",
    on: {
      "click": _vm.addAlertMember
    }
  }, [_c('span'), _vm._v("添加报警组成员")])]), _vm._v(" "), (_vm.newAddGroup == true) ? _c('div', {
    staticClass: "manageTop",
    model: {
      value: (_vm.newAddGroup),
      callback: function($$v) {
        _vm.newAddGroup = $$v
      },
      expression: "newAddGroup"
    }
  }, [_c('span', {
    staticClass: "nowrap"
  }, [_c('label', [_vm._v("报警组名称")]), _c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.groupName),
      expression: "groupName"
    }],
    staticClass: "manage-input",
    attrs: {
      "type": "text",
      "required": ""
    },
    domProps: {
      "value": (_vm.groupName)
    },
    on: {
      "input": function($event) {
        if ($event.target.composing) { return; }
        _vm.groupName = $event.target.value
      }
    }
  })]), _vm._v(" "), _c('a', {
    staticClass: "white-button",
    attrs: {
      "href": "javascript:;"
    },
    on: {
      "click": _vm.saveAddGroup
    }
  }, [_vm._v("保存")]), _vm._v(" "), _c('a', {
    staticClass: "white-button",
    attrs: {
      "href": "javascript:;"
    },
    on: {
      "click": _vm.cancelAddGroup
    }
  }, [_vm._v("取消")])]) : _vm._e(), _vm._v(" "), (_vm.newAddMember == true) ? _c('div', {
    staticClass: "manageTop",
    model: {
      value: (_vm.newAddMember),
      callback: function($$v) {
        _vm.newAddMember = $$v
      },
      expression: "newAddMember"
    }
  }, [_c('span', {
    staticClass: "nowrap"
  }, [_c('label', [_vm._v("成员名称")]), _c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.memberName),
      expression: "memberName"
    }],
    staticClass: "manage-input",
    attrs: {
      "type": "text",
      "required": ""
    },
    domProps: {
      "value": (_vm.memberName)
    },
    on: {
      "input": function($event) {
        if ($event.target.composing) { return; }
        _vm.memberName = $event.target.value
      }
    }
  }), _vm._v(" "), _c('select', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.alarmSelected),
      expression: "alarmSelected"
    }],
    staticClass: "long-select",
    attrs: {
      "name": ""
    },
    on: {
      "change": function($event) {
        var $$selectedVal = Array.prototype.filter.call($event.target.options, function(o) {
          return o.selected
        }).map(function(o) {
          var val = "_value" in o ? o._value : o.value;
          return val
        });
        _vm.alarmSelected = $event.target.multiple ? $$selectedVal : $$selectedVal[0]
      }
    }
  }, _vm._l((_vm.alarmList), function(value, index) {
    return _c('option', {
      domProps: {
        "value": index
      }
    }, [_vm._v(_vm._s(value.class_name))])
  }))]), _vm._v(" "), _c('a', {
    staticClass: "white-button",
    attrs: {
      "href": "javascript:;"
    },
    on: {
      "click": _vm.saveAddMember
    }
  }, [_vm._v("保存")]), _vm._v(" "), _c('a', {
    staticClass: "white-button",
    attrs: {
      "href": "javascript:;"
    },
    on: {
      "click": _vm.cancelAddMember
    }
  }, [_vm._v("取消")])]) : _vm._e(), _vm._v(" "), _c('div', {
    staticClass: "button-area",
    staticStyle: {
      "display": "block"
    }
  }), _vm._v(" "), _c('div', {
    staticClass: "table-div"
  }, [_c('table', {
    staticClass: "manage-table"
  }, [_vm._m(0), _vm._v(" "), _c('tbody', _vm._l((_vm.alarmList), function(value, index) {
    return _c('tr', [_vm._m(1, true), _vm._v(" "), _c('td', [_vm._v(_vm._s(index))]), _vm._v(" "), _c('td', [_vm._v(_vm._s(value.class_name))]), _vm._v(" "), _c('td', [_c('a', {
      attrs: {
        "href": "javascript:;",
        "data-id": value.class_id
      },
      on: {
        "click": function($event) {
          _vm.editAlertGroup(value.class_name)
        }
      }
    }, [_vm._v("编辑")]), _c('a', {
      attrs: {
        "href": "javascript:;",
        "data-id": value.class_id
      },
      on: {
        "click": function($event) {
          _vm.deleteComfirm($event)
        }
      }
    }, [_vm._v("删除")])])])
  }))])]), _vm._v(" "), _c('DialogsAlertGroup', {
    attrs: {
      "editinitformdata": _vm.editGetFormData
    }
  })], 1)
},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('thead', [_c('tr', [_c('th', {
    attrs: {
      "width": "10%"
    }
  }, [_c('input', {
    attrs: {
      "type": "checkbox",
      "name": "check-all",
      "disabled": "disabled"
    }
  })]), _vm._v(" "), _c('th', {
    attrs: {
      "width": "20%"
    }
  }, [_vm._v("ID")]), _vm._v(" "), _c('th', {
    attrs: {
      "width": "30%"
    }
  }, [_vm._v("报警组名称")]), _vm._v(" "), _c('th', {
    attrs: {
      "width": "40%"
    }
  }, [_vm._v("操作")])])])
},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('td', [_c('input', {
    attrs: {
      "type": "checkbox",
      "disabled": "disabled"
    }
  })])
}]}

/***/ }),
/* 117 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    staticClass: "cf",
    attrs: {
      "id": "app"
    }
  }, [_c('Headers'), _vm._v(" "), _c('router-view')], 1)
},staticRenderFns: []}

/***/ }),
/* 118 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(54);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(4)("5ade5431", content, true);

/***/ }),
/* 119 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(55);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(4)("b4dc841a", content, true);

/***/ }),
/* 120 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(56);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(4)("3708d0fe", content, true);

/***/ }),
/* 121 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(57);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(4)("998efe52", content, true);

/***/ }),
/* 122 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(58);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(4)("44a9e518", content, true);

/***/ }),
/* 123 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(59);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(4)("723eb9b5", content, true);

/***/ }),
/* 124 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(60);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(4)("74bc1876", content, true);

/***/ }),
/* 125 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(61);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(4)("0691e84e", content, true);

/***/ }),
/* 126 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(62);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(4)("35100c9c", content, true);

/***/ }),
/* 127 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(63);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(4)("20f88bae", content, true);

/***/ }),
/* 128 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(64);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(4)("34b015f1", content, true);

/***/ }),
/* 129 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(65);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(4)("16caf396", content, true);

/***/ }),
/* 130 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(66);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(4)("63fdf56c", content, true);

/***/ }),
/* 131 */
/***/ (function(module, exports) {

/**
 * Translates the list format produced by css-loader into something
 * easier to manipulate.
 */
module.exports = function listToStyles (parentId, list) {
  var styles = []
  var newStyles = {}
  for (var i = 0; i < list.length; i++) {
    var item = list[i]
    var id = item[0]
    var css = item[1]
    var media = item[2]
    var sourceMap = item[3]
    var part = {
      id: parentId + ':' + i,
      css: css,
      media: media,
      sourceMap: sourceMap
    }
    if (!newStyles[id]) {
      styles.push(newStyles[id] = { id: id, parts: [part] })
    } else {
      newStyles[id].parts.push(part)
    }
  }
  return styles
}


/***/ }),
/* 132 */
/***/ (function(module, exports) {

module.exports = function(module) {
	if(!module.webpackPolyfill) {
		module.deprecate = function() {};
		module.paths = [];
		// module.parent = undefined by default
		if(!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),
/* 133 */
/***/ (function(module, exports) {

/* (ignored) */

/***/ })
/******/ ]);
//# sourceMappingURL=build.js.map